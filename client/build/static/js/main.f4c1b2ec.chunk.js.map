{"version":3,"sources":["components/Tasks/BoardHeader/styles.module.scss","components/Details/Button/styles.module.scss","components/Details/IconButton/styles.module.scss","components/Tasks/CardWindow/styles.module.scss","components/Tasks/localData.ts","store/reducers/boardsReducer.ts","components/Sidebar/Sidebar.tsx","components/Appbar/Appbar.tsx","components/Layout.tsx","store/reducers/listsReducer.ts","store/reducers/cardsReducer.ts","components/Tasks/TaskButton/TaskButton.tsx","components/Tasks/BoardHeader/BoardHeader.tsx","components/Details/Button/Button.tsx","components/Details/IconButton/IconButton.tsx","components/Tasks/TaskForm/TaskForm.tsx","hooks/useOnClickOutside.ts","components/Details/Popup/Popup.tsx","components/Tasks/CardWindow/CardWindowDetails/Label/Label.tsx","components/Tasks/CardWindow/CardWindowDetails/ItemsContainer/ItemsContainer.tsx","components/Tasks/CardWindow/CardWindowDetails/LabelForm/LabelForm.tsx","components/Tasks/CardWindow/CardWindow.tsx","components/Tasks/Card/Card.tsx","components/Tasks/List/List.tsx","config/config.ts","store/api/imageApi.ts","components/Tasks/SideMenu/SideMenu.tsx","components/Tasks/Board/Board.tsx","views/TasksPage/TasksPage.tsx","views/View2/View2.tsx","views/View3/View3.tsx","views/View4/View4.tsx","views/Calculator/Calculator.tsx","App.tsx","store/store.ts","index.tsx","components/Sidebar/styles.module.scss","components/Tasks/SideMenu/styles.module.scss","components/Tasks/List/styles.module.scss","components/Tasks/Card/styles.module.scss","components/Tasks/Board/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/LabelForm/styles.module.scss","components/styles.module.scss","components/Tasks/TaskForm/styles.module.scss","components/Details/Popup/styles.module.scss","components/Tasks/TaskButton/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/Label/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/ItemsContainer/styles.module.scss","components/Appbar/styles.module.scss"],"names":["module","exports","defaultBackground","colors","boardApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getAllBoards","query","providesTags","getBoard","id","createBoard","mutation","body","url","method","invalidatesTags","updateBoard","patch","useGetBoardQuery","useGetAllBoardsQuery","useCreateBoardMutation","useUpdateBoardMutation","menuItems","name","path","icon","Sidebar","location","useLocation","useState","sidebarOpen","setSidebarOpen","className","styles","sidebar","sidebarHide","navButton","navButtonHide","onClick","p","logo","labels","background","linksContainer","map","item","navItem","to","navLink","pathname","active","Appbar","container","Layout","children","layout","pagesContainer","listApi","getAllTasks","getTask","addTask","deleteTask","updateTask","getCards","useAddTaskMutation","useGetAllTasksQuery","useGetTaskQuery","useDeleteTaskMutation","useUpdateTaskMutation","useGetCardsQuery","cardsApi","getAllCards","getCard","addCard","deleteCard","updateCard","deleteAll","useAddCardMutation","useGetAllCardsQuery","useGetCardQuery","useDeleteCardMutation","useUpdateCardMutation","useDeleteAllMutation","TaskButton","openForm","taskButton","BoardHeader","style","width","Button","props","button","type","backgroundColor","bgColor","title","IconButton","iconButton","TaskForm","handleChange","handleSubmit","closeForm","value","onBlur","onFocus","placeholder","form","onSubmit","maxRows","textarea","autoFocus","onChange","required","actionsForm","marginRight","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","Popup","trigger","closePopup","editWindow","backToMainWindow","refPopup","useRef","popup","menuHeader","popupContent","Label","color","cardLabels","checkedLabel","openLabelEditWindow","labelId","activeLabels","filter","label","_id","boxColor","length","ItemsContainer","data","isDataExist","Array","isArray","undefined","items","LabelForm","deleteLabel","formId","setSelectColor","selectColor","marginBottom","reactColorful","CardDetails","cardId","setOpenCardDetails","boardId","nameList","description","deadline","setCardLabels","settingsLabel","setSettingsLabel","board","error","isLoading","refWindow","cardTitle","setCardTitle","cardDescription","setCardDescription","setLabels","formIsOpen","setFormIsOpen","labelsTrigger","setLabelsTrigger","dateTrigger","setDateTrigger","isOpenLabelEditWindow","setIsOpenLabelEditWindow","isOpenAddNewLabelWindow","setIsOpenAddNewLabelWindow","currentLabelTitle","setCurrentLabelTitle","currentLabelId","setCurrentLabelId","currentLabelColor","setCurrentLabelColor","labelTitle","setLabelTitle","deadlineCard","setDeadlineCard","React","checked","setChecked","maxDate","Date","registerLocale","pl","console","log","overlay","cardWindow","cardHeader","cardHeaderText","textareaTitle","e","select","rows","cardContainer","windowMain","height","maxWidth","padding","dayjs","format","marginLeft","borderRadius","descriptionHeader","preventDefault","cardSidebar","newLabels","newCardLabels","newLabelState","newCardLabelState","newLabelsState","newCardLabelsState","labelsList","activeLabel","activeLabelTitle","toString","activeLabelColor","handleGetCurrentEditLabel","copyCardLabels","newLabel","existLabel","find","handleCheckedLabel","dateFormat","timeFormat","selected","date","inline","showTimeInput","divider","Card","index","dragDisabled","onClickDelete","locale","openCardDetails","showText","setShowText","handleMouseEnter","handleMouseLeave","CardWindow","draggableId","String","provided","innerRef","draggableProps","dragHandleProps","card","onMouseEnter","onMouseLeave","cardLabel","iconsContainer","fontSize","marginTop","display","alignItems","btnContainer","List","listId","cards","updateList","deleteList","listTitle","setListTitle","openCardForm","setOpenCardForm","openTitleForm","setOpenTitleForm","setDragDisabled","handleChangeCardValue","handleEditListTitle","handleAddCard","isDragDisabled","listHeader","textWrapper","droppableId","cardsContainer","droppableProps","updateDate","actionsList","config","clientKey","getImages","a","page","Math","floor","random","urlImages","axios","get","res","photos","results","image","thumb","urls","full","user","username","link","links","html","SideMenu","closeMenu","setBackgroundUrl","optionColors","setOptionsColors","optionImages","setOptionsImages","images","setImages","getListOfImages","listOfImages","sideMenu","options","box","backgroundImage","backgroundRepeat","backgroundSize","optionsContainer","photo","backgroundPosition","Board","addList","formRef","backgroundUrl","setOpenForm","openSideMenu","setOpenSideMenu","setBoard","lists","setLists","newBoard","boardBG","boardBackgroundStyle","onDragEnd","result","destination","source","newLists","splice","removed","sourceList","list","destinationList","newCards","updateState","newState","obj","o","startCards","finishCards","startState","direction","listContainer","formContainer","margin","TasksPage","View2","View3","View4","Calculator","App","exact","component","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.f4c1b2ec.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2SZpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__1Radr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"styles_iconButton__7QADk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"styles_overlay__2Y5yx\",\"cardWindow\":\"styles_cardWindow__1lSVi\",\"cardHeader\":\"styles_cardHeader__1ikzx\",\"cardHeaderText\":\"styles_cardHeaderText__3JyaV\",\"textareaTitle\":\"styles_textareaTitle__3aXO3\",\"cardContainer\":\"styles_cardContainer__1HYwy\",\"windowMain\":\"styles_windowMain__14Zwx\",\"descriptionHeader\":\"styles_descriptionHeader__3OCzx\",\"textareaDescription\":\"styles_textareaDescription__1219I\",\"actionsForm\":\"styles_actionsForm__9PCzB\",\"innerTextWrapper\":\"styles_innerTextWrapper__YqNUp\",\"cardSidebar\":\"styles_cardSidebar__QDMU1\",\"divider\":\"styles_divider__3RK0g\",\"btn\":\"styles_btn__1ptUE\",\"labels\":\"styles_labels__GK2WN\",\"labelsList\":\"styles_labelsList__2fvj7\",\"labelsWrap\":\"styles_labelsWrap__NrQr7\",\"label\":\"styles_label__qxFM3\",\"textareaLabelTitle\":\"styles_textareaLabelTitle__fLzf3\",\"datapickerWrapper\":\"styles_datapickerWrapper__20lTy\"};","export const defaultBackground = \"https://images.unsplash.com/photo-1501785888041-af3ef285b470?crop=entropy&cs=srgb&fm=jpg&ixid=MnwzMDMxMTR8MHwxfHNlYXJjaHw2fHxM\";\r\nexport const defaultColor = \"https://images.pexels.com/photos/226589/pexels-photo-226589.jpeg?cs=srgb&dl=closeup-photo-of-multi-color-stick-226589.jpg&fm=jpg\"\r\nexport const colors = [\r\n  '#FB8B24',\r\n  '#9575cd',\r\n  '#F36935',\r\n  '#EA4746',\r\n  '#AE0366',\r\n  '#53416B',\r\n  '#ba68c8',\r\n  '#2F8278',\r\n  '#C5D86D',\r\n  '#30B68E',\r\n  '#A2D2FF',\r\n  '#FFDAB9',\r\n  '#FAF9F9',\r\n  '#3f3c3c'\r\n];\r\n\r\nexport const labelItems = [\r\n  {\r\n    color: '#61bd4f',\r\n    title: '',\r\n    active: false\r\n  },\r\n  {\r\n    color: '#9575cd',\r\n    title: '',\r\n    active: false\r\n  },\r\n  {\r\n    color: '#ff9f1a',\r\n    title: '',\r\n    active: false\r\n  },\r\n  {\r\n    color: '#EA4746',\r\n    title: '',\r\n    active: false\r\n  },\r\n  {\r\n    color: '#0079bf',\r\n    title: '',\r\n    active: false\r\n  },\r\n]","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\ninterface Board {\r\n  _id: string\r\n  title: string\r\n  background: string\r\n  lists: []\r\n  cards: []\r\n  labels: {\r\n    color: string\r\n    title: string\r\n    active: boolean\r\n  }[]\r\n}\r\nconst url = 'https://lukas-backend.herokuapp.com/'\r\n\r\ntype BoardResponse = Board[]\r\n\r\nexport const boardApi = createApi({\r\n  reducerPath: 'boardApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: url }),\r\n  tagTypes: ['Board'],\r\n  endpoints: (builder) => ({\r\n    getAllBoards: builder.query<BoardResponse, void>({\r\n      query: () => `boards`,\r\n      providesTags: ['Board'],\r\n    }),\r\n    getBoard: builder.query<Board, any>({\r\n      query: (id) => `boards/${id}`,\r\n      providesTags: ['Board'],\r\n    }),\r\n    createBoard: builder.mutation({\r\n      query: (body: {}) => ({\r\n        url: 'boards',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Board'],\r\n    }),\r\n    updateBoard: builder.mutation({\r\n      query: ({ id, ...patch }) => ({\r\n        url: `boards/${id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Board'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useCreateBoardMutation,\r\n  useUpdateBoardMutation,\r\n} = boardApi\r\n","import React, { useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport styles from './styles.module.scss'\r\n\r\nimport { MdArrowForwardIos } from \"react-icons/md\";\r\nimport { CgCalculator } from \"react-icons/cg\";\r\nimport { GiDeliveryDrone } from \"react-icons/gi\";\r\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\r\nimport { IoLogoJavascript } from \"react-icons/io\";\r\nimport { CgComponents } from \"react-icons/cg\";\r\nimport { GrTask } from \"react-icons/gr\";\r\n\r\nimport { labelItems } from '../../components/Tasks/localData'\r\nimport { defaultBackground } from '../../components/Tasks/localData'\r\n\r\nimport {\r\n  useCreateBoardMutation,\r\n} from '../../store/reducers/boardsReducer'\r\n\r\nconst menuItems = [\r\n  {\r\n    name: 'Zadania',\r\n    path: '/',\r\n    icon: <GrTask />\r\n  },\r\n  {\r\n    name: 'Kalkulator',\r\n    path: '/calculator',\r\n    icon: <CgCalculator />\r\n  },\r\n  {\r\n    name: 'Materiały',\r\n    path: '/View-2',\r\n    icon: <CgComponents />\r\n  },\r\n  {\r\n    name: 'Dostawcy',\r\n    path: '/View-3',\r\n    icon: <GiDeliveryDrone />\r\n  },\r\n  {\r\n    name: 'Informacje',\r\n    path: '/View-4',\r\n    icon: <AiOutlineInfoCircle />\r\n  },\r\n]\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const [createBoard] = useCreateBoardMutation()\r\n  const location = useLocation()\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n\r\n\r\n\r\n  return (\r\n    <nav\r\n      // className={styles.container}\r\n      className={`${styles.sidebar} ${sidebarOpen ? styles.sidebarHide : styles.sidebar}`}\r\n    >\r\n      <button\r\n        className={`${styles.navButton} ${sidebarOpen ? styles.navButton : styles.navButtonHide}`}\r\n        onClick={() => setSidebarOpen((p) => !p)}>\r\n        <MdArrowForwardIos />\r\n      </button>\r\n      <div className={styles.logo} onClick={() => createBoard({\r\n        labels: [],\r\n        background: defaultBackground\r\n      })}><IoLogoJavascript /></div>\r\n      <ul className={styles.linksContainer}>\r\n        {menuItems.map((item) => (\r\n          <li key={item.name}\r\n            className={styles.navItem}\r\n          >\r\n            <Link\r\n              to={item.path}\r\n            >\r\n              <div className={`${styles.navLink} ${location.pathname === item.path ? styles.active : styles.navLink}`}>\r\n                <div className={styles.icon}>{item.icon}</div>\r\n                <p>{!sidebarOpen ? item.name : null}</p>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\nconst Appbar: React.FC = () => {\r\n  return <div className={styles.container}></div>\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport Sidebar from './Sidebar/Sidebar'\r\nimport Appbar from './Appbar/Appbar'\r\n\r\nconst Layout: React.FC = ({ children }) => {\r\n  return (\r\n    <div className={styles.layout}>\r\n      <Appbar />\r\n      <div className={styles.container}>\r\n        <Sidebar />\r\n        <div className={styles.pagesContainer}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\ninterface List {\r\n  _id: string\r\n  title: string\r\n  index: number\r\n  boardId: string\r\n  sourceIndex: number\r\n  destinationIndex: number\r\n  sortIndex: number\r\n  cards: []\r\n  list: any\r\n}\r\n\r\ntype ListResponse = List[]\r\nconst url = 'https://lukas-backend.herokuapp.com/'\r\n\r\nexport const listApi = createApi({\r\n  reducerPath: 'listApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: url }),\r\n  tagTypes: ['List'],\r\n  endpoints: (builder) => ({\r\n    getAllTasks: builder.query<ListResponse, void>({\r\n      query: () => `lists`,\r\n      providesTags: ['List'],\r\n    }),\r\n    getTask: builder.query<ListResponse, Partial<List>>({\r\n      query: (id) => `lists/${id}`,\r\n      providesTags: ['List'],\r\n    }),\r\n    addTask: builder.mutation({\r\n      query: (body: {}) => ({\r\n        url: 'lists',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    deleteTask: builder.mutation<\r\n      { success: boolean; id: string | number },\r\n      string\r\n    >({\r\n      query: (id) => ({\r\n        url: `lists/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    updateTask: builder.mutation({\r\n      query: ({ id, ...patch }) => ({\r\n        url: `lists/${id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    getCards: builder.query<ListResponse, void>({\r\n      query: (id) => `lists/${id}`,\r\n      providesTags: ['List'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllTasksQuery,\r\n  useGetTaskQuery,\r\n  useAddTaskMutation,\r\n  useDeleteTaskMutation,\r\n  useUpdateTaskMutation,\r\n  useGetCardsQuery,\r\n} = listApi\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\ninterface Cards {\r\n  _id: string\r\n  boardId: string\r\n  listId: string\r\n  title: string\r\n  description: string\r\n  deadline: Date\r\n  completed: number\r\n  createdAt: Date\r\n  updateDate: Date\r\n  text: string\r\n  labels: {\r\n    color: string\r\n    title: string\r\n    active: boolean\r\n  }[]\r\n}\r\n\r\nconst url = 'https://lukas-backend.herokuapp.com/'\r\n\r\ntype CardsResponse = Cards[]\r\n\r\nexport const cardsApi = createApi({\r\n  reducerPath: 'cardsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: url }),\r\n  tagTypes: ['Cards'],\r\n  endpoints: (builder) => ({\r\n    getAllCards: builder.query<CardsResponse, void>({\r\n      query: () => `cards`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    getCard: builder.query({\r\n      query: (id) => `cards/${id}`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    addCard: builder.mutation<Cards, Partial<Cards>>({\r\n      query: (body: {}) => ({\r\n        url: 'cards',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    deleteCard: builder.mutation<{ success: boolean; id: string }, string>({\r\n      query: (id) => ({\r\n        url: `cards/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    updateCard: builder.mutation({\r\n      query: ({ id, ...patch }) => ({\r\n        url: `cards/${id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    deleteAll: builder.mutation({\r\n      query: () => ({\r\n        url: `cards`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllCardsQuery,\r\n  useGetCardQuery,\r\n  useAddCardMutation,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n  useDeleteAllMutation,\r\n} = cardsApi\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ntype ButtonProps = {\r\n  icon?: any\r\n  name: string\r\n  openForm: () => void\r\n}\r\n\r\nconst TaskButton: React.FC<ButtonProps> = ({ openForm, name, icon }) => {\r\n\r\n  // const name = id === 'list' ? 'Dodaj listę zadań' : 'Dodaj nową kartę'\r\n  return (\r\n    <button className={styles.taskButton} onClick={openForm}>\r\n      <div className={styles.icon}>{icon}</div>\r\n      {name}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default TaskButton\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport TaskButton from '../TaskButton/TaskButton'\r\nimport { BsImage } from \"react-icons/bs\";\r\n\r\ntype BoardHeaderProps = {\r\n  name: string\r\n  onClick: () => void\r\n}\r\n\r\nconst BoardHeader: React.FC<BoardHeaderProps> = ({ name, onClick }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div style={{ width: '130px' }}>\r\n        <TaskButton openForm={onClick} name={name} icon={<BsImage />} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardHeader","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface ButtonProps {\r\n  onClick?: (e: any) => void\r\n  title?: string\r\n  bgColor?: string\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = (props) => (\r\n  <button className={styles.button} onClick={props.onClick} type='button' style={{ backgroundColor: `${props.bgColor}` }}>\r\n    {props.title}\r\n  </button>\r\n)\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface IconButtonProps {\r\n  onClick?: () => void;\r\n  icon?: any,\r\n  title?: string,\r\n  padding?: string\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = (props) => (\r\n  <button\r\n    className={styles.iconButton}\r\n    onClick={props.onClick}\r\n    type='button'\r\n  >\r\n    {props.children}\r\n  </button>\r\n)\r\n\r\nexport default IconButton\r\n","import React, { useRef } from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\n\r\nimport Button from '../../Details/Button/Button'\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\n\r\ntype Props = {\r\n  id: string\r\n  handleSubmit: (value: any) => void\r\n  handleChange: (value: any) => void\r\n  onFocus?: (value: any) => void\r\n  closeForm: () => void\r\n  onBlur?: () => void\r\n  value: string | undefined\r\n}\r\n\r\nconst TaskForm: React.FC<Props> = ({ handleChange, handleSubmit, closeForm, value, id, onBlur, onFocus }) => {\r\n  const placeholder = id === 'list' ? 'Dodaj listę zadań' : 'Dodaj nową kartę'\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <TextareaAutosize\r\n        id={id}\r\n        maxRows={20}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={styles.textarea}\r\n        autoFocus\r\n        onChange={handleChange}\r\n        onBlur={onBlur}\r\n        onFocus={onFocus}\r\n        required />\r\n      <div className={styles.actionsForm}>\r\n        <Button onClick={handleSubmit} title={'Dodaj'} />\r\n        <div style={{ marginRight: '1rem' }} />\r\n        <IconButton onClick={closeForm}><BsXLg /></IconButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm\r\n","import { RefObject, useEffect } from 'react'\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent\r\n\r\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void,\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return\r\n      }\r\n\r\n      handler(event)\r\n    }\r\n\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler])\r\n}\r\n\r\nexport default useOnClickOutside","import React, { useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport IconButton from '../IconButton/IconButton'\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport { MdOutlineArrowBackIos } from \"react-icons/md\";\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside'\r\n\r\ntype Props = {\r\n  trigger: boolean\r\n  title: string\r\n  closePopup: () => void\r\n  editWindow?: boolean\r\n  backToMainWindow?: () => void\r\n}\r\nconst Popup: React.FC<Props> = ({ children, trigger, title, closePopup, editWindow, backToMainWindow }) => {\r\n  const refPopup = useRef(null)\r\n  useOnClickOutside(refPopup, closePopup)\r\n  \r\n  return (\r\n    trigger ? (\r\n      <div className={styles.popup} ref={refPopup}>\r\n        <div className={styles.menuHeader}>\r\n          {editWindow ? <IconButton onClick={backToMainWindow}><MdOutlineArrowBackIos /></IconButton> : null}\r\n          <h3>{title}</h3>\r\n          <IconButton onClick={closePopup}><BsXLg /></IconButton>\r\n        </div>\r\n        <div className={styles.popupContent}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    ) : null\r\n  )\r\n}\r\n\r\nexport default Popup","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { BiCheck } from 'react-icons/bi';\r\nimport IconButton from '../../../../Details/IconButton/IconButton'\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport LabelForm from '../LabelForm/LabelForm';\r\n\r\ntype Props = {\r\n  labelId: string\r\n  title: string\r\n  color: string\r\n  cardLabels: []\r\n  checkedLabel: (value: any) => void\r\n  openLabelEditWindow: () => void\r\n}\r\n\r\nconst Label: React.FC<Props> = ({ title, color, cardLabels, checkedLabel, openLabelEditWindow, labelId }) => {\r\n  const activeLabels = cardLabels.filter((label: { _id: string }) => label._id === labelId)\r\n  return (\r\n    <div className={styles.container}>\r\n      <div onClick={checkedLabel} style={{ background: `${color}` }} className={styles.boxColor}>\r\n        <p>{title}</p>\r\n        {activeLabels.length ? < BiCheck style={{ color: 'white' }} /> : null}\r\n      </div>\r\n      <IconButton onClick={openLabelEditWindow}><BsPencil /></IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Label","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ntype Props = {\r\n  data: any\r\n  children: any\r\n  title: string\r\n}\r\n\r\nconst ItemsContainer: React.FC<Props> = ({ children, title, data }) => {\r\n  const isDataExist = Array.isArray(data) ? (data.length ? true : false) : (data === null || data === undefined ? false : true)\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isDataExist ? (\r\n          <div className={styles.container}>\r\n            <p>{title}</p>\r\n            <div className={styles.items}>\r\n              {children}\r\n            </div>\r\n          </div>\r\n        ) : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ItemsContainer","import React, { useState } from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\nimport Button from '../../../../Details/Button/Button'\r\nimport { HexColorPicker } from \"react-colorful\";\r\n\r\ntype Props = {\r\n  formId: string\r\n  value: string | undefined\r\n  handleSubmit: (value: any) => void\r\n  handleChange: (value: any) => void\r\n  onFocus?: (value: any) => void\r\n  deleteLabel: () => void\r\n  setSelectColor: (vlaue: string) => void\r\n  selectColor: string\r\n}\r\n\r\nconst LabelForm: React.FC<Props> = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  deleteLabel,\r\n  value,\r\n  formId,\r\n  onFocus,\r\n  setSelectColor,\r\n  selectColor }) => {\r\n  const placeholder = 'Dodaj nazwę etykiety...'\r\n\r\n  return (\r\n    <form className={styles.form}>\r\n      <p style={{ marginBottom: '5px' }}>Nazwa</p>\r\n      <TextareaAutosize\r\n        id={formId}\r\n        maxRows={20}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={styles.textarea}\r\n        autoFocus\r\n        onChange={handleChange}\r\n        onFocus={onFocus}\r\n      />\r\n      <p style={{ marginBottom: '5px' }}>Wybierz kolor</p>\r\n      <HexColorPicker className={styles.reactColorful} color={selectColor} onChange={setSelectColor} />\r\n      <div className={styles.actionsForm}>\r\n        <Button onClick={handleSubmit} title={'Zapisz'} />\r\n        <div style={{ marginRight: '1rem' }} />\r\n        <Button onClick={deleteLabel} title={'Usuń'} bgColor={'#EA4746'} />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LabelForm","import React, { useState, useRef, useEffect, useCallback } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport dayjs from 'dayjs';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nimport TaskForm from '../TaskForm/TaskForm'\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside'\r\n\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport { parseISO, format } from 'date-fns'\r\nimport { pl } from 'date-fns/locale'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { BsXLg } from 'react-icons/bs';\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport { BiTask } from 'react-icons/bi';\r\nimport { GrAttachment } from 'react-icons/gr';\r\nimport { BsStopwatch } from 'react-icons/bs';\r\nimport { MdOutlineLabel } from 'react-icons/md';\r\nimport { CgArrowRight, CgChevronDoubleLeft } from 'react-icons/cg';\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { RiDeleteBinLine } from 'react-icons/ri';\r\n// import { SwatchesPicker } from 'react-color';\r\n\r\nimport {\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\n\r\nimport {\r\n  // useGetCardQuery,\r\n  // useAddCardMutation,\r\n  // useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n} from \"../../../store/reducers/cardsReducer\";\r\n// import { GrAdd } from 'react-icons/gr';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\nimport Popup from '../../Details/Popup/Popup';\r\nimport Label from './CardWindowDetails/Label/Label';\r\nimport { BiCheck } from 'react-icons/bi';\r\n// import { labelItems } from '../localData';\r\n\r\nimport ItemsContainer from './CardWindowDetails/ItemsContainer/ItemsContainer'\r\nimport LabelForm from './CardWindowDetails/LabelForm/LabelForm'\r\nimport Button from '../../Details/Button/Button';\r\n\r\ntype Props = {\r\n  cardId: string\r\n  title: string\r\n  description: string\r\n  boardId: string\r\n  nameList: string | undefined\r\n  deadline: Date | null\r\n  setOpenCardDetails: () => void\r\n  cardLabels: any\r\n  setCardLabels: (value: any) => void\r\n  settingsLabel: []\r\n  setSettingsLabel: (value: any) => void\r\n}\r\n\r\nconst CardDetails: React.FC<Props> = ({\r\n  cardId,\r\n  title,\r\n  setOpenCardDetails,\r\n  boardId,\r\n  nameList,\r\n  description,\r\n  cardLabels,\r\n  deadline,\r\n  setCardLabels,\r\n  settingsLabel,\r\n  setSettingsLabel\r\n}) => {\r\n  const { data: board, error, isLoading } = useGetBoardQuery(boardId);\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const refWindow = useRef(null)\r\n  const [cardTitle, setCardTitle] = useState<string>(title)\r\n  const [cardDescription, setCardDescription] = useState<string | undefined>(description)\r\n  const [labels, setLabels] = useState([] as any)\r\n  const [formIsOpen, setFormIsOpen] = useState(false)\r\n  const [labelsTrigger, setLabelsTrigger] = useState<boolean>(false)\r\n  const [dateTrigger, setDateTrigger] = useState<boolean>(false)\r\n  const [isOpenLabelEditWindow, setIsOpenLabelEditWindow] = useState<boolean>(false)\r\n  const [isOpenAddNewLabelWindow, setIsOpenAddNewLabelWindow] = useState<boolean>(false)\r\n  const [currentLabelTitle, setCurrentLabelTitle] = useState<string>('')\r\n  const [currentLabelId, setCurrentLabelId] = useState<string>('')\r\n  const [currentLabelColor, setCurrentLabelColor] = useState<string>('')\r\n  const [labelTitle, setLabelTitle] = useState<string>('')\r\n\r\n  const [deadlineCard, setDeadlineCard] = useState<Date | null>(deadline)\r\n  const [checked, setChecked] = React.useState(false);\r\n  const maxDate = new Date()\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    registerLocale(\"pl\", pl);\r\n    if (board) {\r\n      setLabels(board.labels)\r\n    }\r\n  }, [board])\r\n\r\n\r\n  const handleEditCardTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card-title') setCardTitle(e.target.value)\r\n    updateCard({\r\n      id: cardId,\r\n      title: e.target.value\r\n    })\r\n    updateBoard({\r\n      id: boardId\r\n    })\r\n  }\r\n\r\n  const handleEditCardDescription = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card-description')\r\n      setCardDescription(e.target.value)\r\n  }\r\n\r\n  const handleSaveCardDescription = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      id: cardId,\r\n      description: cardDescription\r\n    })\r\n    updateBoard({\r\n      id: boardId\r\n    })\r\n    setFormIsOpen(false)\r\n  }\r\n\r\n  const handleChangeLabelTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'label-title-edit') setCurrentLabelTitle(e.target.value)\r\n    if (e.target.id === 'label-title-add') setLabelTitle(e.target.value)\r\n  }\r\n\r\n  const handleSaveLabelEdit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    const newLabels = [...labels]\r\n    const newCardLabels = [...cardLabels]\r\n    if (labels) {\r\n      const newLabelState = newLabels.map((label: any) => {\r\n        if (label._id !== currentLabelId) return label;\r\n        return { ...label, title: currentLabelTitle, color: currentLabelColor };\r\n      });\r\n\r\n      const newCardLabelState = newCardLabels.map((label: any) => {\r\n        if (label._id !== currentLabelId) return label;\r\n        return { ...label, title: currentLabelTitle, color: currentLabelColor };\r\n      })\r\n\r\n      setCardLabels(newCardLabelState)\r\n      setLabels(newLabelState)\r\n      updateBoard({\r\n        id: boardId,\r\n        labels: newLabelState\r\n      })\r\n      setIsOpenLabelEditWindow(false)\r\n    }\r\n  }\r\n\r\n  const handleAddNewLabel = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    const newLabels = [...labels, { color: currentLabelColor, title: labelTitle, active: false }]\r\n    updateBoard({\r\n      id: boardId,\r\n      labels: newLabels\r\n    })\r\n    setIsOpenAddNewLabelWindow(false)\r\n  }\r\n\r\n  const handleCheckedLabel = (item: any) => {\r\n    const copyCardLabels = [...cardLabels]\r\n    const newLabel = { ...item, active: !item.active };\r\n    const existLabel = copyCardLabels.find((label: { _id: string; }) => label._id === newLabel._id)\r\n\r\n    if (existLabel) {\r\n      const newLabels = copyCardLabels.filter((label: { _id: string; }) => label._id !== existLabel._id)\r\n      setCardLabels(newLabels)\r\n      updateCard({\r\n        id: cardId,\r\n        labels: newLabels\r\n      })\r\n    } else {\r\n      const newLabels = [...copyCardLabels, newLabel]\r\n      setCardLabels(newLabels)\r\n      updateCard({\r\n        id: cardId,\r\n        labels: newLabels\r\n      })\r\n    }\r\n    updateBoard({\r\n      id: boardId,\r\n    })\r\n  }\r\n\r\n  const handleDeleteLabel = () => {\r\n    const newLabels = [...labels]\r\n    const newCardLabels = [...cardLabels]\r\n    const newLabelsState = newLabels.filter((label) => label._id !== currentLabelId);\r\n    const newCardLabelsState = newCardLabels.filter((label) => label._id !== currentLabelId);\r\n    setLabels(newLabelsState)\r\n    setCardLabels(newCardLabelsState)\r\n    updateCard({\r\n      id: cardId,\r\n      labels: newCardLabelsState\r\n    })\r\n    updateBoard({\r\n      id: boardId,\r\n      labels: newLabelsState\r\n    })\r\n    setIsOpenLabelEditWindow(false)\r\n  }\r\n\r\n  const handleGetCurrentEditLabel = (id: string) => {\r\n    const newLabels = [...labels]\r\n    const activeLabel = newLabels.filter((label: { _id: string }) => label._id === id)\r\n    const activeLabelTitle = activeLabel.map((label: { title: string }) => label.title).toString()\r\n    const activeLabelColor = activeLabel.map((label: { color: string }) => label.color).toString()\r\n    setCurrentLabelTitle(activeLabelTitle)\r\n    setCurrentLabelColor(activeLabelColor)\r\n    setCurrentLabelId(id)\r\n  }\r\n\r\n  const handleSaveDeadline = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      id: cardId,\r\n      deadline: deadlineCard\r\n    })\r\n    updateBoard({ id: boardId })\r\n    setDateTrigger(false)\r\n  }\r\n\r\n  const handleDeleteDeadline = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    setDeadlineCard(null)\r\n    updateCard({\r\n      id: cardId,\r\n      deadline: null\r\n    })\r\n    updateBoard({ id: boardId })\r\n    setDateTrigger(false)\r\n  }\r\n\r\n  const handleChange = () => {\r\n    setChecked(!checked);\r\n  };\r\n  console.log(checked)\r\n\r\n  useOnClickOutside(refWindow, setOpenCardDetails)\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.overlay} onClick={setOpenCardDetails}></div>\r\n      <div ref={refWindow} className={styles.cardWindow}>\r\n        <div className={styles.cardHeader}>\r\n          <div className={styles.cardHeaderText}>\r\n            <TextareaAutosize\r\n              id='card-title'\r\n              autoFocus={false}\r\n              value={cardTitle}\r\n              className={styles.textareaTitle}\r\n              onChange={handleEditCardTitle}\r\n              onFocus={(e) => e.target.select()}\r\n              rows={20}\r\n              required\r\n            />\r\n            <p>Na liscie: <strong>{nameList}</strong></p>\r\n          </div>\r\n          <IconButton onClick={setOpenCardDetails}><BsXLg /></IconButton>\r\n        </div>\r\n        <div className={styles.cardContainer}>\r\n          <div className={styles.windowMain}>\r\n            <ItemsContainer data={cardLabels} title={'Etykiety'}>\r\n              {\r\n                cardLabels.map((label: { title: string; active: any; color: any; _id: string }) => (\r\n                  <div\r\n                    key={label._id}\r\n                    style={{ backgroundColor: `${label.color}` }}\r\n                    className={styles.label}\r\n                    onClick={() => setLabelsTrigger(true)}\r\n                  >\r\n                    <span>{label.title}</span>\r\n                  </div>\r\n                ))\r\n              }\r\n            </ItemsContainer>\r\n            <ItemsContainer data={deadlineCard} title={'Termin'}>\r\n              {\r\n                deadlineCard ? (\r\n                  <>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={checked}\r\n                      onChange={handleChange}\r\n                      style={{ height: '100%', width: '1rem', marginRight: '8px' }} />\r\n                    <button onClick={() => setDateTrigger(true)}\r\n                      style={{ maxWidth: '250px', padding: '8px', backgroundColor: '#ebecf0' }}>\r\n                      <span>{dayjs(deadlineCard).format('DD-MM-YYYY HH:mm')}</span>\r\n                      <span style={{ backgroundColor: deadlineCard < maxDate ? 'red' : 'green', color: 'white', marginLeft: '5px', borderRadius: '4px' }}>\r\n                        {deadlineCard < maxDate ? 'termin przekroczony' : ''}\r\n                      </span>\r\n                      {\r\n                        checked ? (\r\n                          <span style={{ backgroundColor: 'green', color: 'white', padding: '.2rem', marginLeft: '5px', borderRadius: '4px' }}>zrealizowany</span>\r\n                        ) : null\r\n                      }\r\n\r\n                    </button>\r\n                    {/* <TaskButton openForm={() => setFormIsOpen(true)} name={'Usuń'} icon={<RiDeleteBinLine />} /> */}\r\n                  </>\r\n                ) : null\r\n              }\r\n            </ItemsContainer>\r\n            <div className={styles.descriptionHeader}>\r\n              <h4>Opis</h4>\r\n              <div style={{ maxWidth: '100px', marginLeft: '1rem' }}>\r\n                {\r\n                  !formIsOpen && cardDescription !== undefined && cardDescription !== '' ? (\r\n                    <TaskButton openForm={() => setFormIsOpen(true)} name={'Edytuj'} icon={<BsPencil />} />\r\n                  ) : null\r\n                }\r\n              </div>\r\n            </div>\r\n            {\r\n              formIsOpen ?\r\n                <TaskForm\r\n                  id={'card-description'}\r\n                  handleChange={handleEditCardDescription}\r\n                  handleSubmit={handleSaveCardDescription}\r\n                  closeForm={() => { setFormIsOpen(false); setCardDescription(description) }}\r\n                  value={cardDescription}\r\n                  onFocus={(e) => e.target.select()}\r\n                /> :\r\n                <div>\r\n                  {cardDescription !== '' && cardDescription !== undefined ? <p onClick={() => setFormIsOpen(true)}>{cardDescription}</p> :\r\n                    <TaskButton openForm={() => setFormIsOpen(true)} name={'Dodaj opis...'} icon={<IoMdAdd />} />}\r\n                </div>\r\n            }\r\n          </div>\r\n          <div className={styles.cardSidebar} >\r\n            <Popup\r\n              title={isOpenLabelEditWindow ? 'Edytuj etykietę' : isOpenAddNewLabelWindow ? 'Dodaj Etykietę' : 'Etykiety'}\r\n              trigger={labelsTrigger}\r\n              closePopup={() => { setLabelsTrigger(false); setIsOpenLabelEditWindow(false); setIsOpenAddNewLabelWindow(false) }}\r\n              editWindow={isOpenLabelEditWindow || isOpenAddNewLabelWindow}\r\n              backToMainWindow={() => { setIsOpenLabelEditWindow(false); setIsOpenAddNewLabelWindow(false) }}\r\n            >\r\n              <div className={styles.labels}>\r\n                {\r\n                  !isOpenLabelEditWindow &&\r\n                    !isOpenAddNewLabelWindow ? (\r\n                    <>\r\n                      <div className={styles.labelsList}>\r\n                        {\r\n                          labels.map((label: any) => (\r\n                            <Label\r\n                              key={label._id}\r\n                              labelId={label._id}\r\n                              title={label.title}\r\n                              color={label.color}\r\n                              cardLabels={cardLabels}\r\n                              openLabelEditWindow={() => {\r\n                                setIsOpenLabelEditWindow(true)\r\n                                handleGetCurrentEditLabel(label._id)\r\n                              }}\r\n                              checkedLabel={() => handleCheckedLabel(label)}\r\n                            >\r\n                            </Label>\r\n                          ))\r\n                        }\r\n                      </div>\r\n                      <TaskButton openForm={() => setIsOpenAddNewLabelWindow(true)} name={'Utwórz nową etykietę'} />\r\n                    </>\r\n                  ) : (\r\n                    <LabelForm\r\n                      formId={isOpenLabelEditWindow ? 'label-title-edit' : isOpenAddNewLabelWindow ? 'label-title-add' : ''}\r\n                      handleChange={handleChangeLabelTitle}\r\n                      handleSubmit={isOpenLabelEditWindow ? handleSaveLabelEdit : isOpenAddNewLabelWindow ? handleAddNewLabel : () => console.log('label does not exist')}\r\n                      deleteLabel={handleDeleteLabel}\r\n                      value={isOpenLabelEditWindow ? currentLabelTitle : isOpenAddNewLabelWindow ? labelTitle : ''}\r\n                      onFocus={(e) => e.target.select()}\r\n                      selectColor={currentLabelColor}\r\n                      setSelectColor={setCurrentLabelColor}\r\n                    />\r\n                  )\r\n                }\r\n              </div>\r\n            </Popup>\r\n            <Popup\r\n              title={'data'}\r\n              trigger={dateTrigger}\r\n              closePopup={() => setDateTrigger(false)}\r\n              editWindow={false}\r\n              backToMainWindow={() => setDateTrigger(false)}\r\n            >\r\n              <DatePicker\r\n                // locale={'pl'}\r\n                dateFormat='DD/MM/YYYY'\r\n                timeFormat=\"hh:mm\"\r\n                selected={deadlineCard ? new Date(deadlineCard) : null}\r\n                onChange={(date: Date) => setDeadlineCard(date)}\r\n                inline\r\n                showTimeInput\r\n              // isClearable\r\n              />\r\n              <label>Termin <br></br>\r\n                <input style={{ maxWidth: '100px', marginRight: '10px' }} placeholder={dayjs(deadlineCard).format('DD/MM/YYYY')} />\r\n                <input style={{ maxWidth: '100px' }} placeholder={dayjs(deadlineCard).format('HH:mm')} />\r\n              </label>\r\n              <div className={styles.actionsForm}>\r\n                <Button onClick={handleSaveDeadline} title={'Zapisz'} />\r\n                <div style={{ marginRight: '1rem' }} />\r\n                <Button onClick={handleDeleteDeadline} title={'Usuń'} bgColor={'#EA4746'} />\r\n              </div>\r\n            </Popup>\r\n\r\n            <TaskButton openForm={() => setLabelsTrigger(true)} name={'Etykiety'} icon={<MdOutlineLabel />} />\r\n            <TaskButton openForm={() => setDateTrigger(true)} name={'Data'} icon={<BsStopwatch />} />\r\n            <TaskButton openForm={() => setFormIsOpen(true)} name={'Załącznik'} icon={<GrAttachment />} />\r\n            <TaskButton openForm={() => setFormIsOpen(true)} name={'Lista zadań'} icon={<BiTask />} />\r\n            <div className={styles.divider}></div>\r\n            <TaskButton openForm={() => setFormIsOpen(true)} name={'Przenieś'} icon={<CgArrowRight />} />\r\n            <TaskButton openForm={() => setFormIsOpen(true)} name={'Usuń'} icon={<RiDeleteBinLine />} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default CardDetails","import React, { useState, useEffect } from 'react'\r\n// import TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\nimport { Draggable } from 'react-beautiful-dnd';\r\nimport dayjs from 'dayjs';\r\nimport 'dayjs/locale/pl';\r\nimport CardWindow from '../CardWindow/CardWindow';\r\n// import TextareaAutosize from 'react-textarea-autosize';\r\nimport {\r\n  // useGetAllTasksQuery,\r\n  // useAddTaskMutation,\r\n  // useDeleteTaskMutation,\r\n  // useUpdateTaskMutation,\r\n  // useAddCardMutation,\r\n} from \"../../../store/reducers/listsReducer\";\r\nimport {\r\n  // useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\nimport {\r\n  // useGetCardQuery,\r\n  // useAddCardMutation,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n} from \"../../../store/reducers/cardsReducer\";\r\n\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport { GrTextAlignFull } from 'react-icons/gr';\r\nimport { BsStopwatch } from 'react-icons/bs';\r\n// import TaskButton from '../TaskButton/TaskButton';\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\n\r\ntype Props = {\r\n  boardId: string\r\n  title: string\r\n  description: string\r\n  listId?: string\r\n  cardId: string\r\n  index: number\r\n  deadline: Date | null\r\n  updateDate?: Date\r\n  labels: []\r\n  onClickDelete?: () => void\r\n  dragDisabled: (value: boolean) => void\r\n  nameList: string | undefined\r\n}\r\n\r\nconst Card: React.FC<Props> = ({\r\n  cardId,\r\n  boardId,\r\n  title,\r\n  index,\r\n  onClickDelete,\r\n  dragDisabled,\r\n  nameList,\r\n  description,\r\n  labels,\r\n  deadline\r\n}) => {\r\n  dayjs.locale('pl');\r\n  const [deleteCard] = useDeleteCardMutation()\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const [openCardDetails, setOpenCardDetails] = useState<boolean>(false)\r\n  const [showText, setShowText] = useState(false)\r\n  const [cardLabels, setCardLabels] = useState(labels)\r\n  const [settingsLabel, setSettingsLabel] = useState([] as any)\r\n  const [checkedDeadline, setCheckedDeadline] = React.useState(false);\r\n\r\n  const handleMouseEnter = () => {\r\n    setShowText(true)\r\n  }\r\n  const handleMouseLeave = () => {\r\n    setShowText(false)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {\r\n        openCardDetails ?\r\n          <CardWindow\r\n            nameList={nameList}\r\n            cardId={cardId}\r\n            title={title}\r\n            description={description}\r\n            boardId={boardId}\r\n            cardLabels={cardLabels}\r\n            deadline={deadline}\r\n            setCardLabels={setCardLabels}\r\n            settingsLabel={settingsLabel}\r\n            setSettingsLabel={setSettingsLabel}\r\n            setOpenCardDetails={() => {\r\n              setOpenCardDetails(false)\r\n              dragDisabled(false)\r\n            }}\r\n          /> : null\r\n      }\r\n      <Draggable draggableId={String(cardId)} index={index} >\r\n        {provided => (\r\n          <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n            <div className={styles.card}\r\n              onMouseEnter={handleMouseEnter}\r\n              onMouseLeave={handleMouseLeave}\r\n            >\r\n              <div className={styles.cardContainer} onClick={() => {\r\n                setOpenCardDetails(true)\r\n                dragDisabled(true)\r\n              }}>\r\n                <div className={styles.cardLabels}>\r\n                  {\r\n                    cardLabels.map((label: { active: any; color: any; _id: string; title: string }) => (\r\n                      // label.active ? \r\n                      <div title={`${label.title}`} key={label._id} className={styles.cardLabel} style={{ backgroundColor: `${label.color}` }}></div>\r\n                      // : null\r\n                    ))\r\n                  }\r\n                </div>\r\n                <span >{title}</span>\r\n                <div className={styles.iconsContainer}>\r\n                  {description ? <GrTextAlignFull style={{ fontSize: '.9rem', color: 'grey', marginTop: '5px' }} /> : null}\r\n                  {deadline ? <span style={{ fontSize: '.9rem', color: 'grey', marginTop: '5px', display: 'flex', alignItems: 'center' }}><BsStopwatch style={{ marginRight: '5px' }} />{dayjs(deadline).format('DD/MMMM')}</span> : null}\r\n                  {/* <TaskButton openForm={() => console.log('okk')} name={'Usuń'} icon={<BsStopwatch />} /> */}\r\n                </div>\r\n              </div>\r\n              <div className={styles.btnContainer}>\r\n                {\r\n                  showText ? <IconButton onClick={() => {\r\n                    deleteCard(cardId);\r\n                    updateBoard({ id: boardId })\r\n                  }}>\r\n                    <BsPencil />\r\n                  </IconButton> : null\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport TaskForm from '../TaskForm/TaskForm';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\nimport IconButton from '../../Details/IconButton/IconButton'\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\n\r\nimport { labelItems } from '../localData';\r\n\r\nimport {\r\n  // useGetAllTasksQuery,\r\n  // useAddTaskMutation,\r\n  useDeleteTaskMutation,\r\n  useUpdateTaskMutation,\r\n  // useAddCardMutation,\r\n} from \"../../../store/reducers/listsReducer\";\r\nimport {\r\n  // useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\nimport {\r\n  // useGetAllCardsQuery,\r\n  useAddCardMutation,\r\n  // useDeleteCardMutation,\r\n  // useUpdateCardMutation,\r\n} from \"../../../store/reducers/cardsReducer\";\r\nimport Card from '../Card/Card';\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { MdOutlineAdd } from \"react-icons/md\";\r\nimport { GoPlus } from \"react-icons/go\";\r\n// import { dangerouslyDisableDefaultSrc } from 'helmet/dist/middlewares/content-security-policy';\r\n\r\ntype Props = {\r\n  listId: string\r\n  title: string\r\n  index: number\r\n  boardId: string\r\n  cards: []\r\n\r\n  // openCardDetails: (value: boolean) => void\r\n}\r\nconst List: React.FC<Props> = ({ title, listId, index, cards, boardId }) => {\r\n  const { data: board, error, isLoading } = useGetBoardQuery(boardId);\r\n  const ref = useRef(null)\r\n  const [addCard] = useAddCardMutation()\r\n  // const [deleteCard] = useDeleteCardMutation()\r\n  // const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n  const [updateList] = useUpdateTaskMutation()\r\n  const [deleteList] = useDeleteTaskMutation()\r\n\r\n  const [listTitle, setListTitle] = useState<string | undefined>(title)\r\n  const [cardTitle, setCardTitle] = useState<string>('')\r\n  const [openCardForm, setOpenCardForm] = useState<boolean>(false)\r\n  const [openTitleForm, setOpenTitleForm] = useState<boolean>(false)\r\n  const [dragDisabled, setDragDisabled] = useState<boolean>(false)\r\n  const [labels, setLabels] = useState([] as any)\r\n\r\n  useEffect(() => {\r\n    if (board) {\r\n      setLabels(board.labels)\r\n    }\r\n  }, [board])\r\n\r\n\r\n  const handleChangeCardValue = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card') setCardTitle(e.target.value)\r\n  }\r\n\r\n  const handleEditListTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'list') setListTitle(e.target.value)\r\n    updateList({\r\n      id: listId,\r\n      title: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleAddCard = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    if (cardTitle.length === 0) return\r\n    addCard({\r\n      listId: listId,\r\n      title: cardTitle,\r\n    })\r\n    updateBoard({\r\n      id: boardId,\r\n    })\r\n\r\n    setOpenCardForm(false)\r\n    setCardTitle('')\r\n  }\r\n\r\n  const handleCloseForm = () => { setOpenCardForm(false); setCardTitle(''); }\r\n  useOnClickOutside(ref, handleCloseForm)\r\n\r\n  return (\r\n    <div>\r\n      <Draggable draggableId={String(listId)} index={index} isDragDisabled={dragDisabled}>\r\n        {provided => (\r\n          <div className={styles.container} {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}>\r\n            <div className={styles.listHeader} onClick={() => setOpenTitleForm(true)} ref={ref}>\r\n              {\r\n                openTitleForm ?\r\n                  <div className={styles.textWrapper}>\r\n                    <TextareaAutosize\r\n                      id='list'\r\n                      autoFocus={true}\r\n                      value={listTitle}\r\n                      className={styles.textarea}\r\n                      onChange={handleEditListTitle}\r\n                      onFocus={(e) => e.target.select()}\r\n                      onBlur={() => setOpenTitleForm(false)}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  : <div className={styles.textWrapper}><h2>{listTitle}</h2></div>\r\n              }\r\n              <IconButton onClick={() => {\r\n                deleteList(listId);\r\n                updateBoard({ id: boardId })\r\n              }}><BsThreeDots style={{ fontSize: \"1.3em\" }} /></IconButton>\r\n            </div>\r\n            <Droppable droppableId={String(listId)} type=\"card\">\r\n              {provided => (\r\n                <div className={styles.cardsContainer}\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                >\r\n                  {\r\n                    cards?.map((card: { listId: string; _id: string; title: string; updateDate: Date, labels: [], description: string, deadline: Date }, index: number) => (\r\n                      <Card\r\n                        index={index}\r\n                        key={card._id}\r\n                        cardId={card._id}\r\n                        boardId={boardId}\r\n                        title={card.title}\r\n                        deadline={card.deadline}\r\n                        description={card.description}\r\n                        updateDate={card.updateDate}\r\n                        labels={card.labels}\r\n                        nameList={listTitle}\r\n                        dragDisabled={setDragDisabled}\r\n                      />\r\n                    ))\r\n                  }\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n            <div className={styles.actionsList}>\r\n              {openCardForm ?\r\n                <div ref={ref}>\r\n                  <TaskForm\r\n                    id={'card'}\r\n                    handleChange={handleChangeCardValue}\r\n                    handleSubmit={handleAddCard}\r\n                    closeForm={() => { setOpenCardForm(false); setCardTitle('') }}\r\n                    value={cardTitle}\r\n                  // onBlur={handleBlur}\r\n                  />\r\n                </div>\r\n                : <TaskButton openForm={() => setOpenCardForm(true)} name={'Dodaj kartę'} icon={<GoPlus />} />\r\n              }\r\n            </div>\r\n          </div>\r\n        )\r\n        }\r\n      </Draggable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n\r\n","const config = {\r\n  url: 'https://api.unsplash.com/',\r\n  clientKey: 'TqG5JhrasvAl1tEr7Gn82XanmpWr7OhuPhqQydr_ieA',\r\n}\r\n\r\nexport default config","import axios from 'axios'\r\nimport config from '../../config/config'\r\n\r\nconst getImages = async () => {\r\n  const page = Math.floor(Math.random() * 20 + 1)\r\n  const numberPhotos = 14\r\n  const urlImages = `https://api.unsplash.com/search/photos?page=${page}&per_page=${numberPhotos}&query=Landscape&client_id=${config.clientKey}`\r\n\r\n  const res = await axios.get(urlImages)\r\n  const photos = res.data.results.map(\r\n    (image: {\r\n      id: any\r\n      urls: { thumb: any; full: any }\r\n      user: { username: any; links: { html: any } }\r\n    }) => ({\r\n      id: image.id,\r\n      thumb: image.urls.thumb,\r\n      full: image.urls.full,\r\n      user: {\r\n        username: image.user.username,\r\n        link: image.user.links.html,\r\n      },\r\n    })\r\n  )\r\n  return photos\r\n}\r\n\r\nexport default getImages\r\n","import React, { useState, useEffect } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport getImages from '../../../store/api/imageApi';\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\nimport { colors, defaultBackground, defaultColor } from '../localData';\r\nimport {\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\n\r\ntype SideMenuProps = {\r\n  boardId: string\r\n  closeMenu: () => void\r\n  setBackgroundUrl: (value: string) => void;\r\n}\r\n\r\nconst SideMenu: React.FC<SideMenuProps> = ({ closeMenu, setBackgroundUrl, boardId }) => {\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n  const [optionColors, setOptionsColors] = useState<boolean>(false)\r\n  const [optionImages, setOptionsImages] = useState<boolean>(false)\r\n  const [images, setImages] = useState<any>([])\r\n\r\n  const getListOfImages = async () => {\r\n    const listOfImages = await getImages()\r\n    setImages(listOfImages)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getListOfImages()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.sideMenu}>\r\n      <div className={styles.menuHeader}>\r\n        <h3>Zmień tło</h3>\r\n        <IconButton onClick={closeMenu}><BsXLg /></IconButton>\r\n      </div>\r\n      <div className={styles.options}>\r\n        <div className={styles.box}\r\n          onClick={() => {\r\n            setOptionsImages(true)\r\n            setOptionsColors(false)\r\n          }}\r\n          style={{\r\n            backgroundImage: `url(${defaultBackground})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n          }}><p>Zdjęcia</p></div>\r\n        <div className={styles.box}\r\n          onClick={() => {\r\n            setOptionsImages(false)\r\n            setOptionsColors(true)\r\n          }}\r\n          style={{\r\n            backgroundImage: `url(${defaultColor})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n          }}\r\n        ><p>Kolory</p></div>\r\n      </div>\r\n\r\n      <div className={styles.optionsContainer}>\r\n        {\r\n          optionImages ? (\r\n            images.map((photo: { id: React.Key | null | undefined; thumb: any; full: string; }) => (\r\n              <div\r\n                key={photo.id}\r\n                className={styles.box}\r\n                style={{\r\n                  backgroundImage: `url(${photo.thumb})`,\r\n                  backgroundSize: 'cover',\r\n                  backgroundRepeat: 'no-repeat',\r\n                  backgroundPosition: 'center'\r\n                }}\r\n                onClick={() => {\r\n                  setBackgroundUrl(photo.full)\r\n                  updateBoard({\r\n                    id: boardId,\r\n                    background: photo.full\r\n                  })\r\n                }}\r\n              ></div>\r\n            ))\r\n          ) : null\r\n        }\r\n        {\r\n          optionColors ? (\r\n            colors.map((color, index) => (\r\n              <div\r\n                key={index}\r\n                className={styles.box}\r\n                style={{\r\n                  backgroundColor: `${color}`,\r\n                }}\r\n                onClick={() => {\r\n                  setBackgroundUrl(color)\r\n                  updateBoard({\r\n                    id: boardId,\r\n                    background: color\r\n                  })\r\n                }}\r\n              ></div>\r\n            ))\r\n          ) : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SideMenu","import React, { useEffect, useState, useRef } from 'react'\r\n// import { isEmpty, cloneDeep } from 'lodash'\r\nimport styles from './styles.module.scss'\r\nimport { DragDropContext, Droppable, DropResult} from 'react-beautiful-dnd'\r\n// import { renderToString } from 'react-dom/server';\r\nimport {\r\n  // useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\nimport {\r\n  // useGetAllTasksQuery,\r\n  useAddTaskMutation,\r\n  // useDeleteTaskMutation,\r\n  useUpdateTaskMutation,\r\n  // useGetTaskQuery,\r\n  // useGetCardsQuery,\r\n} from \"../../../store/reducers/listsReducer\";\r\nimport {\r\n  // useGetAllCardsQuery,\r\n  // useAddCardMutation,\r\n  // useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n  // useDeleteAllMutation,\r\n} from \"../../../store/reducers/cardsReducer\";\r\n\r\nimport BoardHeader from '../BoardHeader/BoardHeader';\r\nimport List from '../List/List'\r\nimport TaskButton from '../TaskButton/TaskButton'\r\nimport TaskForm from '../TaskForm/TaskForm'\r\n// import TaskCard from '../Card/Card';\r\nimport SideMenu from '../SideMenu/SideMenu';\r\n// import CardDetails from '../CardDetails/CardDetails';\r\n// import CardModal from '../CardDetails/CardModal/CardModal';\r\n\r\nimport { defaultBackground } from '../localData';\r\n\r\n// import { setSourceMapRange } from 'typescript';\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n// import { GrAdd } from \"react-icons/gr\";\r\nimport { GoPlus } from \"react-icons/go\";\r\n// import { BsCardImage } from \"react-icons/bs\";\r\n\r\nconst Board: React.FC = () => {\r\n  const boardId = '621a598fca190e362b0dd18b'\r\n  const { data, error, isLoading } = useGetBoardQuery(boardId);\r\n\r\n  const [addList] = useAddTaskMutation()\r\n  // const [deleteList] = useDeleteTaskMutation()\r\n  const [updateList] = useUpdateTaskMutation()\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const formRef = useRef(null)\r\n  // const refCardModal = useRef(null)\r\n\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string>('')\r\n  const [listTitle, setListTitle] = useState<string>('');\r\n  const [openForm, setOpenForm] = useState<boolean>(false)\r\n  const [openSideMenu, setOpenSideMenu] = useState<boolean>(false)\r\n\r\n  const [board, setBoard] = useState({} as any)\r\n  const [lists, setLists] = useState([] as any)\r\n\r\n  const closeForm = () => { setOpenForm(false); setListTitle('') }\r\n  useOnClickOutside(formRef, closeForm)\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const newBoard = { ...data }\r\n      const boardBG = newBoard.background === '' ? defaultBackground : newBoard.background\r\n      setBoard(newBoard)\r\n      setLists(newBoard.lists)\r\n      setBackgroundUrl(boardBG)\r\n    }\r\n  }, [data]);\r\n\r\n\r\n  const handleChangeListTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'list') setListTitle(e.target.value)\r\n  }\r\n\r\n  const handleAddList = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    if (listTitle.length === 0) return\r\n    addList({\r\n      title: listTitle,\r\n      boardId: boardId,\r\n    })\r\n    updateBoard({\r\n      id: boardId,\r\n    })\r\n\r\n    setListTitle('')\r\n    setOpenForm(false)\r\n  }\r\n\r\n  // if (isEmpty(board)) return <div>no data</div>\r\n  const onDragEnd = (result: DropResult) => {\r\n    const { destination, source, type, draggableId } = result\r\n    if (!destination) return;\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n    const newLists = [...lists]\r\n\r\n    if (board) {\r\n      if (type === 'list') {\r\n\r\n        const [removed] = newLists.splice(source.index, 1)\r\n        newLists.splice(destination.index, 0, removed)\r\n\r\n        setLists(newLists)\r\n        updateBoard({\r\n          id: boardId,\r\n          lists: newLists\r\n        })\r\n      }\r\n\r\n      if (type === 'card') {\r\n        // const newLists = [...lists]\r\n        const sourceList = newLists.find((list: { _id: string; }) => list._id === source.droppableId)\r\n        const destinationList = newLists.find((list: { _id: string; }) => list._id === destination.droppableId)\r\n\r\n        if (source.droppableId === destination.droppableId) {\r\n          const newCards = [...sourceList.cards]\r\n          \r\n          const [removed] = newCards.splice(source.index, 1)\r\n          newCards.splice(destination.index, 0, removed)\r\n\r\n          const updateState = {\r\n            ...sourceList,\r\n            cards: newCards\r\n          }\r\n\r\n          //replace the contents of the list\r\n          const newState = newLists.map(obj => [updateState].find(o => o._id === obj._id) || obj);\r\n\r\n          setLists(newState)\r\n          updateList({\r\n            id: source.droppableId,\r\n            cards: newCards\r\n          })\r\n\r\n        }\r\n\r\n        if (source.droppableId !== destination.droppableId) {\r\n          const startCards = [...sourceList.cards]\r\n          const finishCards = [...destinationList.cards]\r\n\r\n          const [removed] = startCards.splice(source.index, 1)\r\n          const startState = {\r\n            ...sourceList,\r\n            cards: startCards\r\n          }\r\n\r\n          finishCards.splice(destination.index, 0, removed)\r\n          const finishState = {\r\n            ...destinationList,\r\n            cards: finishCards\r\n          }\r\n\r\n          //converted to array\r\n          const newCards = [startState, finishState]\r\n\r\n          //replace the contents of the lists\r\n          const newState = newLists.map(obj => newCards.find(o => o._id === obj._id) || obj);\r\n\r\n          setLists(newState)\r\n\r\n          updateCard({\r\n            id: draggableId,\r\n            listId: destination.droppableId\r\n          })\r\n          // update source list\r\n          updateList({\r\n            id: source.droppableId,\r\n            cards: startCards\r\n          })\r\n          //update destination list\r\n          updateList({\r\n            id: destination.droppableId,\r\n            cards: finishCards\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const boardBackgroundStyle = {\r\n    backgroundColor: backgroundUrl,\r\n    backgroundImage: `url(${backgroundUrl})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  }\r\n\r\n  if (isLoading) return <h2>Loading...</h2>\r\n  if (error) return <h2>Brak połączenia</h2>\r\n\r\n  return (\r\n    <div className={styles.board}\r\n      style={boardBackgroundStyle}\r\n    >\r\n      <BoardHeader\r\n        name={'Zmień tło'}\r\n        onClick={() => setOpenSideMenu(true)}\r\n      />\r\n      {\r\n        openSideMenu ?\r\n          <SideMenu\r\n            boardId={boardId}\r\n            setBackgroundUrl={setBackgroundUrl}\r\n            closeMenu={() => setOpenSideMenu(false)}\r\n          /> : null\r\n      }\r\n      <DragDropContext onDragEnd={onDragEnd} >\r\n        <div className={styles.container}>\r\n          <Droppable droppableId=\"all-list\" direction=\"horizontal\" type=\"list\">\r\n            {provided => (\r\n              <div className={styles.listContainer}\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {\r\n                  lists?.map((list: any, index: number) => (\r\n                    <List\r\n                      index={index}\r\n                      boardId={list.boardId}\r\n                      key={list._id}\r\n                      listId={list._id}\r\n                      title={list.title}\r\n                      cards={list.cards}\r\n                    />\r\n                  ))\r\n                }\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          <div className={styles.actionsForm}>\r\n            {openForm ?\r\n              <div className={styles.formContainer} ref={formRef}>\r\n                <TaskForm\r\n                  id='list'\r\n                  handleChange={handleChangeListTitle}\r\n                  handleSubmit={handleAddList}\r\n                  closeForm={() => { setOpenForm(false); setListTitle('') }}\r\n                  value={listTitle}\r\n                />\r\n              </div>\r\n              : <TaskButton openForm={() => setOpenForm(true)} name={'Dodaj listę zadań'} icon={<GoPlus style={{ margin: '.3rem 0' }} />} />\r\n            }\r\n          </div>\r\n        </div>\r\n      </DragDropContext>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board\r\n\r\n\r\n","import React from 'react'\r\nimport Board from '../../components/Tasks/Board/Board';\r\n// import SideMenu from '../../components/Tasks/SideMenu/SideMenu';\r\n// import BoardHeader from '../../components/Tasks/BoardHeader/BoardHeader';\r\nimport styles from './styles.module.scss'\r\n\r\nconst boardId = '620b88e199b7a598ce7b7187'\r\n\r\nconst TasksPage: React.FC = () => {\r\n  return (\r\n    <>\r\n      < Board />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TasksPage\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst View2: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Magayzn\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View2\r\n","import React from 'react'\r\n\r\nconst View3: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Dostawcy\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View3\r\n","import React from 'react'\r\n\r\nconst View4: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Informacje\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View4\r\n","import React from 'react'\r\n\r\nconst Calculator = () => {\r\n  return (\r\n    <div>Calculator</div>\r\n  )\r\n}\r\n\r\nexport default Calculator","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Layout from './components/Layout';\r\nimport TasksPage from './views/TasksPage/TasksPage';\r\nimport View2 from './views/View2/View2';\r\nimport View3 from './views/View3/View3';\r\nimport View4 from './views/View4/View4';\r\nimport Calculator from './views/Calculator/Calculator';\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n      <Router>\r\n        <Layout>\r\n          <Switch>\r\n            <Route exact path='/' component={TasksPage} />\r\n            <Route path='/calculator' component={Calculator} />\r\n            <Route path='/View-2' component={View2} />\r\n            <Route path='/View-3' component={View3} />\r\n            <Route path='/View-4' component={View4} />\r\n          </Switch>\r\n        </Layout>\r\n      </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\n// import counterReducer from '../reducers/reducer'\r\nimport { boardApi } from './reducers/boardsReducer'\r\nimport { listApi } from './reducers/listsReducer'\r\nimport { cardsApi } from './reducers/cardsReducer'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [boardApi.reducerPath]: boardApi.reducer,\r\n    [listApi.reducerPath]: listApi.reducer,\r\n    [cardsApi.reducerPath]: cardsApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(\r\n      boardApi.middleware,\r\n      listApi.middleware,\r\n      cardsApi.middleware\r\n    ),\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from './store/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles_sidebar__xK0YJ\",\"sidebarHide\":\"styles_sidebarHide__2t2M2\",\"logo\":\"styles_logo__2pM0Q\",\"navButton\":\"styles_navButton__3BNKT\",\"navButtonHide\":\"styles_navButtonHide__38XhY\",\"linksContainer\":\"styles_linksContainer__3Ym__\",\"navItem\":\"styles_navItem__TbxPM\",\"navLink\":\"styles_navLink__VPAcP\",\"icon\":\"styles_icon__rSpbJ\",\"active\":\"styles_active__20cX5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideMenu\":\"styles_sideMenu__1WL-5\",\"menuHeader\":\"styles_menuHeader__1I00P\",\"options\":\"styles_options__1opB-\",\"optionsContainer\":\"styles_optionsContainer__2BqBR\",\"description\":\"styles_description__2kWXu\",\"box\":\"styles_box__2R1CZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2JAAH\",\"listHeader\":\"styles_listHeader__358ey\",\"textWrapper\":\"styles_textWrapper__OtXvf\",\"cardsContainer\":\"styles_cardsContainer__3CxCn\",\"textarea\":\"styles_textarea__2eU67\",\"actionsList\":\"styles_actionsList__2anKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__2Vpi0\",\"cardContainer\":\"styles_cardContainer__v6erv\",\"textarea\":\"styles_textarea__3yOuz\",\"btnContainer\":\"styles_btnContainer__1CdlS\",\"cardLabels\":\"styles_cardLabels__2XYfY\",\"cardLabel\":\"styles_cardLabel__1QOow\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles_board__1NKs9\",\"container\":\"styles_container__35LdP\",\"listContainer\":\"styles_listContainer__W9gYL\",\"actionsForm\":\"styles_actionsForm__3C_qJ\",\"formContainer\":\"styles_formContainer__2R8KT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__3qYD0\",\"textarea\":\"styles_textarea__8Nziw\",\"actionsForm\":\"styles_actionsForm__2V1XT\",\"reactColorful\":\"styles_reactColorful__273KT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"styles_layout__3nIik\",\"container\":\"styles_container__7Bm4v\",\"pagesContainer\":\"styles_pagesContainer__BB6vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1hyU1\",\"textarea\":\"styles_textarea__2Y0rn\",\"actionsForm\":\"styles_actionsForm__4Ypdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"styles_popup__1Gn8a\",\"menuHeader\":\"styles_menuHeader__2xC_s\",\"popupContent\":\"styles_popupContent__A0vyv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskButton\":\"styles_taskButton__25h-I\",\"icon\":\"styles_icon__1Rn7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container___i14Y\",\"boxColor\":\"styles_boxColor__3vAsb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1gs2Q\",\"items\":\"styles_items__3ezeA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2iRdG\"};"],"sourceRoot":""}