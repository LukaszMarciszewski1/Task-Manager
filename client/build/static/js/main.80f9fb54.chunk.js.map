{"version":3,"sources":["components/Appbar/styles.module.scss","components/Tasks/BoardHeader/styles.module.scss","components/Details/Button/styles.module.scss","components/Details/IconButton/styles.module.scss","components/Tasks/CardWindow/styles.module.scss","components/Tasks/localData.ts","store/reducers/boardsReducer.ts","components/Sidebar/Sidebar.tsx","components/Appbar/Appbar.tsx","components/Layout.tsx","store/reducers/listsReducer.ts","store/reducers/cardsReducer.ts","components/Tasks/TaskButton/TaskButton.tsx","components/Tasks/BoardHeader/BoardHeader.tsx","components/Details/Button/Button.tsx","components/Details/IconButton/IconButton.tsx","components/Tasks/TaskForm/TaskForm.tsx","hooks/useOnClickOutside.ts","store/reducers/filesReducer.ts","components/Details/Popup/Popup.tsx","components/Tasks/CardWindow/CardWindowDetails/Label/Label.tsx","components/Tasks/CardWindow/CardWindowDetails/ItemsContainer/ItemsContainer.tsx","components/Tasks/CardWindow/CardWindowDetails/LabelForm/LabelForm.tsx","components/Tasks/CardWindow/CardWindowDetails/FileForm/FileForm.tsx","components/Tasks/CardWindow/CardWindowDetails/Files/Files.tsx","components/Tasks/CardWindow/CardWindow.tsx","hooks/useEventListener.ts","hooks/useHover.ts","components/Tasks/Card/Card.tsx","components/Tasks/List/List.tsx","config/unsplash.ts","store/api/unsplashApi.ts","components/Tasks/SideMenu/SideMenu.tsx","components/Tasks/Board/Board.tsx","views/TasksPage/TasksPage.tsx","views/View2/View2.tsx","views/View3/View3.tsx","views/View4/View4.tsx","views/Calculator/Calculator.tsx","App.tsx","store/store.ts","index.tsx","components/Sidebar/styles.module.scss","components/Tasks/Card/styles.module.scss","components/Tasks/SideMenu/styles.module.scss","components/Tasks/List/styles.module.scss","components/Tasks/Board/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/LabelForm/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/FileForm/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/Files/styles.module.scss","components/styles.module.scss","components/Tasks/TaskForm/styles.module.scss","components/Details/Popup/styles.module.scss","components/Tasks/TaskButton/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/Label/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/ItemsContainer/styles.module.scss"],"names":["module","exports","defaultBackground","colors","boardApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getAllBoards","query","providesTags","getBoard","id","createBoard","mutation","body","url","method","invalidatesTags","updateBoard","patch","useGetBoardQuery","useGetAllBoardsQuery","useCreateBoardMutation","useUpdateBoardMutation","menuItems","name","path","icon","Sidebar","location","useLocation","useState","sidebarOpen","setSidebarOpen","className","styles","sidebar","sidebarHide","navButton","navButtonHide","onClick","p","logo","labels","background","linksContainer","map","item","navItem","to","navLink","pathname","active","Appbar","container","Layout","children","layout","pagesContainer","listApi","getAllTasks","getTask","addTask","deleteTask","updateTask","getCards","useAddTaskMutation","useGetAllTasksQuery","useGetTaskQuery","useDeleteTaskMutation","useUpdateTaskMutation","useGetCardsQuery","cardsApi","getAllCards","getCard","addCard","uploadFilesCard","post","getCardFiles","deleteFile","deleteCard","updateCard","deleteAll","useGetCardQuery","useGetAllCardsQuery","useAddCardMutation","useDeleteCardMutation","useUpdateCardMutation","useDeleteAllMutation","useDeleteFileMutation","useUploadFilesCardMutation","useGetCardFilesQuery","TaskButton","height","margin","style","taskButton","BoardHeader","width","Button","bgColor","title","type","button","backgroundColor","IconButton","props","iconButton","TaskForm","handleChange","handleSubmit","closeForm","value","onBlur","onFocus","titleBtn","placeholder","form","onSubmit","maxRows","textarea","autoFocus","onChange","required","actionsForm","marginRight","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","filesApi","getAllFiles","getFile","uploadFile","useUploadFileMutation","useGetAllFilesQuery","useGetFileQuery","Popup","trigger","closePopup","editWindow","backToMainWindow","refPopup","useRef","popup","menuHeader","popupContent","Label","color","cardLabels","checkedLabel","openLabelEditWindow","labelId","activeLabels","filter","label","_id","boxColor","length","ItemsContainer","data","isDataExist","Array","isArray","undefined","items","LabelForm","deleteLabel","formId","setSelectColor","selectColor","marginBottom","reactColorful","FileForm","nameFiles","size","handleInputState","handleSubmitFile","rest","formFile","labelFile","multiple","hidden","spanContainer","index","nameFileSpan","Files","created","src","downloadFile","conatiner","fileImg","alt","fileDetails","fileButtons","CardWindow","cardId","boardId","nameList","description","deadlineCard","cardCompleted","setDeadlineCard","setCardCompleted","setIsCardWindowOpen","setCardLabels","dateIsSameOrBefore","deadlineIsSoon","cardDateDisplay","cardFiles","dayjs","locale","board","error","isLoading","refWindow","cardTitle","setCardTitle","cardDescription","setCardDescription","setLabels","formIsOpen","setFormIsOpen","labelsTrigger","setLabelsTrigger","dateTrigger","setDateTrigger","fileTrigger","setFileTrigger","isOpenLabelEditWindow","setIsOpenLabelEditWindow","isOpenAddNewLabelWindow","setIsOpenAddNewLabelWindow","currentLabelTitle","setCurrentLabelTitle","currentLabelId","setCurrentLabelId","currentLabelColor","setCurrentLabelColor","labelTitle","setLabelTitle","selectedFiles","setSelectedFiles","selectedNameFiles","setSelectedNameFiles","handleUploadImage","useCallback","e","currentTarget","files","arr","i","push","a","preventDefault","formData","FormData","append","config","headers","axios","then","res","console","log","catch","handleDeleteFile","fileId","overlay","cardWindow","cardHeader","cardHeaderText","textareaTitle","select","rows","cardContainer","windowMain","checked","completed","selectedDateBtn","format","datedateNotificationSpan","descriptionContainer","descriptionHeader","maxWidth","marginLeft","filesContainer","file","fileName","createdAt","filePath","get","responseType","fileExtension","filename","replace","split","fileDownload","cardSidebar","newLabels","newCardLabels","newLabelState","newCardLabelState","newLabelsState","newCardLabelsState","labelsList","activeLabel","activeLabelTitle","toString","activeLabelColor","handleGetCurrentEditLabel","copyCardLabels","newLabel","existLabel","find","handleCheckedLabel","dateFormat","timeFormat","selected","Date","date","inline","showTimeInput","deadline","divider","useIsomorphicLayoutEffect","window","useLayoutEffect","useEventListener","eventName","element","savedHandler","targetElement","eventListener","useHover","elementRef","setValue","Card","dragDisabled","card","isCardWindowOpen","showText","setShowText","now","nowDate","setNowDate","setFiles","extend","isSameOrBefore","duration","relativeTime","intervalIsSameOrBefore","setInterval","clearInterval","handleMouseEnter","handleMouseLeave","handleOpenCardWindow","handleChangeCompleted","timeToDeadline","diff","fromNow","iconStyle","fontSize","hoverRef","isHover","draggableId","String","provided","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","cardClickableArea","cardLabel","iconsContainer","dateBtn","icons","btnContainer","List","listId","cards","updateList","deleteList","listTitle","setListTitle","openCardForm","setOpenCardForm","openTitleForm","setOpenTitleForm","setDragDisabled","handleChangeCardValue","handleEditListTitle","handleAddCard","isDragDisabled","listHeader","textWrapper","droppableId","cardsContainer","droppableProps","updateDate","actionsList","unsplash","clientKey","getImages","page","Math","floor","random","urlImages","photos","results","image","thumb","urls","full","user","username","link","links","html","SideMenu","closeMenu","setBackgroundUrl","optionColors","setOptionsColors","optionImages","setOptionsImages","images","setImages","getListOfImages","listOfImages","sideMenu","options","box","backgroundImage","backgroundRepeat","backgroundSize","optionsContainer","photo","backgroundPosition","Board","addList","formRef","backgroundUrl","openForm","setOpenForm","openSideMenu","setOpenSideMenu","setBoard","lists","setLists","newBoard","boardBG","boardBackgroundStyle","onDragEnd","result","destination","source","newLists","splice","removed","sourceList","list","destinationList","newCards","updateState","newState","obj","o","startCards","finishCards","startState","direction","listContainer","formContainer","TasksPage","View2","View3","View4","Calculator","App","exact","component","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.80f9fb54.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2iRdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2SZpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__1Radr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"styles_iconButton__7QADk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"styles_overlay__2Y5yx\",\"cardWindow\":\"styles_cardWindow__1lSVi\",\"cardHeader\":\"styles_cardHeader__1ikzx\",\"cardHeaderText\":\"styles_cardHeaderText__3JyaV\",\"textareaTitle\":\"styles_textareaTitle__3aXO3\",\"cardContainer\":\"styles_cardContainer__1HYwy\",\"windowMain\":\"styles_windowMain__14Zwx\",\"descriptionContainer\":\"styles_descriptionContainer__3K63w\",\"descriptionHeader\":\"styles_descriptionHeader__3OCzx\",\"textareaDescription\":\"styles_textareaDescription__1219I\",\"actionsForm\":\"styles_actionsForm__9PCzB\",\"innerTextWrapper\":\"styles_innerTextWrapper__YqNUp\",\"cardSidebar\":\"styles_cardSidebar__QDMU1\",\"divider\":\"styles_divider__3RK0g\",\"btn\":\"styles_btn__1ptUE\",\"labels\":\"styles_labels__GK2WN\",\"labelsList\":\"styles_labelsList__2fvj7\",\"labelsWrap\":\"styles_labelsWrap__NrQr7\",\"label\":\"styles_label__qxFM3\",\"textareaLabelTitle\":\"styles_textareaLabelTitle__fLzf3\",\"datapickerWrapper\":\"styles_datapickerWrapper__20lTy\",\"datedateNotificationSpan\":\"styles_datedateNotificationSpan__2W614\",\"selectedDateBtn\":\"styles_selectedDateBtn__2N73k\",\"filesContainer\":\"styles_filesContainer__3tPmD\"};","export const defaultBackground = \"https://images.unsplash.com/photo-1501785888041-af3ef285b470?crop=entropy&cs=srgb&fm=jpg&ixid=MnwzMDMxMTR8MHwxfHNlYXJjaHw2fHxM\";\r\nexport const defaultColor = \"https://images.pexels.com/photos/226589/pexels-photo-226589.jpeg?cs=srgb&dl=closeup-photo-of-multi-color-stick-226589.jpg&fm=jpg\"\r\nexport const colors = [\r\n  '#FB8B24',\r\n  '#9575cd',\r\n  '#F36935',\r\n  '#EA4746',\r\n  '#AE0366',\r\n  '#53416B',\r\n  '#ba68c8',\r\n  '#2F8278',\r\n  '#C5D86D',\r\n  '#30B68E',\r\n  '#A2D2FF',\r\n  '#FFDAB9',\r\n  '#FAF9F9',\r\n  '#3f3c3c'\r\n];\r\n\r\nexport const labelItems = [\r\n  {\r\n    color: '#61bd4f',\r\n    title: '',\r\n    active: false\r\n  },\r\n  {\r\n    color: '#9575cd',\r\n    title: '',\r\n    active: false\r\n  },\r\n  {\r\n    color: '#ff9f1a',\r\n    title: '',\r\n    active: false\r\n  },\r\n  {\r\n    color: '#EA4746',\r\n    title: '',\r\n    active: false\r\n  },\r\n  {\r\n    color: '#0079bf',\r\n    title: '',\r\n    active: false\r\n  },\r\n]","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\ninterface Board {\r\n  _id: string\r\n  title: string\r\n  background: string\r\n  lists: []\r\n  cards: []\r\n  labels: {\r\n    color: string\r\n    title: string\r\n    active: boolean\r\n  }[]\r\n}\r\n// const url = 'http://localhost:5000/'\r\nconst url = 'https://lukas-backend.herokuapp.com/'\r\n\r\ntype BoardResponse = Board[]\r\n\r\nexport const boardApi = createApi({\r\n  reducerPath: 'boardApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: url }),\r\n  tagTypes: ['Board'],\r\n  endpoints: (builder) => ({\r\n    getAllBoards: builder.query<BoardResponse, void>({\r\n      query: () => `boards`,\r\n      providesTags: ['Board'],\r\n    }),\r\n    getBoard: builder.query<Board, any>({\r\n      query: (id) => `boards/${id}`,\r\n      providesTags: ['Board'],\r\n    }),\r\n    createBoard: builder.mutation({\r\n      query: (body: {}) => ({\r\n        url: 'boards',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Board'],\r\n    }),\r\n    updateBoard: builder.mutation({\r\n      query: ({ id, ...patch }) => ({\r\n        url: `boards/${id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Board'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useCreateBoardMutation,\r\n  useUpdateBoardMutation,\r\n} = boardApi\r\n","import React, { useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport styles from './styles.module.scss'\r\n\r\nimport { MdArrowForwardIos } from \"react-icons/md\";\r\nimport { CgCalculator } from \"react-icons/cg\";\r\nimport { GiDeliveryDrone } from \"react-icons/gi\";\r\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\r\nimport { IoLogoJavascript } from \"react-icons/io\";\r\nimport { CgComponents } from \"react-icons/cg\";\r\nimport { GrTask } from \"react-icons/gr\";\r\n\r\nimport { labelItems } from '../../components/Tasks/localData'\r\nimport { defaultBackground } from '../../components/Tasks/localData'\r\n\r\nimport {\r\n  useCreateBoardMutation,\r\n} from '../../store/reducers/boardsReducer'\r\n\r\nconst menuItems = [\r\n  {\r\n    name: 'Zadania',\r\n    path: '/',\r\n    icon: <GrTask />\r\n  },\r\n  {\r\n    name: 'Kalkulator',\r\n    path: '/calculator',\r\n    icon: <CgCalculator />\r\n  },\r\n  {\r\n    name: 'Materiały',\r\n    path: '/View-2',\r\n    icon: <CgComponents />\r\n  },\r\n  {\r\n    name: 'Dostawcy',\r\n    path: '/View-3',\r\n    icon: <GiDeliveryDrone />\r\n  },\r\n  {\r\n    name: 'Informacje',\r\n    path: '/View-4',\r\n    icon: <AiOutlineInfoCircle />\r\n  },\r\n]\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const [createBoard] = useCreateBoardMutation()\r\n  const location = useLocation()\r\n  const [sidebarOpen, setSidebarOpen] = useState(false)\r\n\r\n\r\n\r\n  return (\r\n    <nav\r\n      // className={styles.container}\r\n      className={`${styles.sidebar} ${sidebarOpen ? styles.sidebarHide : styles.sidebar}`}\r\n    >\r\n      <button\r\n        className={`${styles.navButton} ${sidebarOpen ? styles.navButton : styles.navButtonHide}`}\r\n        onClick={() => setSidebarOpen((p) => !p)}>\r\n        <MdArrowForwardIos />\r\n      </button>\r\n      <div className={styles.logo} onClick={() => createBoard({\r\n        labels: [],\r\n        background: defaultBackground\r\n      })}><IoLogoJavascript /></div>\r\n      <ul className={styles.linksContainer}>\r\n        {menuItems.map((item) => (\r\n          <li key={item.name}\r\n            className={styles.navItem}\r\n          >\r\n            <Link\r\n              to={item.path}\r\n            >\r\n              <div className={`${styles.navLink} ${location.pathname === item.path ? styles.active : styles.navLink}`}>\r\n                <div className={styles.icon}>{item.icon}</div>\r\n                <p>{!sidebarOpen ? item.name : null}</p>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\nconst Appbar: React.FC = () => {\r\n  return <div className={styles.container}></div>\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport Sidebar from './Sidebar/Sidebar'\r\nimport Appbar from './Appbar/Appbar'\r\n\r\nconst Layout: React.FC = ({ children }) => {\r\n  return (\r\n    <div className={styles.layout}>\r\n      <Appbar />\r\n      <div className={styles.container}>\r\n        <Sidebar />\r\n        <div className={styles.pagesContainer}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\ninterface List {\r\n  _id: string\r\n  title: string\r\n  index: number\r\n  boardId: string\r\n  sourceIndex: number\r\n  destinationIndex: number\r\n  sortIndex: number\r\n  cards: []\r\n  list: any\r\n}\r\n\r\ntype ListResponse = List[]\r\n// const url = 'http://localhost:5000/'\r\nconst url = 'https://lukas-backend.herokuapp.com/'\r\n\r\nexport const listApi = createApi({\r\n  reducerPath: 'listApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: url }),\r\n  tagTypes: ['List'],\r\n  endpoints: (builder) => ({\r\n    getAllTasks: builder.query<ListResponse, void>({\r\n      query: () => `lists`,\r\n      providesTags: ['List'],\r\n    }),\r\n    getTask: builder.query<ListResponse, Partial<List>>({\r\n      query: (id) => `lists/${id}`,\r\n      providesTags: ['List'],\r\n    }),\r\n    addTask: builder.mutation({\r\n      query: (body: {}) => ({\r\n        url: 'lists',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    deleteTask: builder.mutation<{ success: boolean; id: string | number }, string>({\r\n      query: (id) => ({\r\n        url: `lists/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    updateTask: builder.mutation({\r\n      query: ({ id, ...patch }) => ({\r\n        url: `lists/${id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    getCards: builder.query<ListResponse, void>({\r\n      query: (id) => `lists/${id}`,\r\n      providesTags: ['List'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllTasksQuery,\r\n  useGetTaskQuery,\r\n  useAddTaskMutation,\r\n  useDeleteTaskMutation,\r\n  useUpdateTaskMutation,\r\n  useGetCardsQuery,\r\n} = listApi\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\ninterface Cards {\r\n  _id: string\r\n  boardId: string\r\n  listId: string\r\n  title: string\r\n  description: string\r\n  deadline: Date\r\n  completed: boolean\r\n  createdAt: Date\r\n  updateDate: Date\r\n  text: string\r\n  files: {\r\n    fileName: string,\r\n    filePath: string,\r\n    fileType: string,\r\n    fileSize: string,\r\n  }[]\r\n  labels: {\r\n    color: string\r\n    title: string\r\n    active: boolean\r\n  }[]\r\n}\r\n\r\n// const url = 'http://localhost:5000/'\r\nconst url = 'https://lukas-backend.herokuapp.com/'\r\n\r\ntype CardsResponse = Cards[]\r\n\r\nexport const cardsApi = createApi({\r\n  reducerPath: 'cardsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: url }),\r\n  tagTypes: ['Cards'],\r\n  endpoints: (builder) => ({\r\n    getAllCards: builder.query<CardsResponse, void>({\r\n      query: () => `cards`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    getCard: builder.query({\r\n      query: (id) => `cards/${id}`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    addCard: builder.mutation<Cards, Partial<Cards>>({\r\n      query: (body: {}) => ({\r\n        url: 'cards',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    uploadFilesCard: builder.mutation({\r\n      query: ({ id, ...post }) => ({\r\n        url: `cards/${id}/files`,\r\n        method: 'POST',\r\n        body: post,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    getCardFiles: builder.query({\r\n      query: (id) => `cards/${id}/files`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    deleteFile: builder.mutation<{ success: boolean; id: string }, string>({\r\n      query: (id) => ({\r\n        url: `cards/${id}/files`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    deleteCard: builder.mutation<{ success: boolean; id: string }, string>({\r\n      query: (id) => ({\r\n        url: `cards/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    updateCard: builder.mutation({\r\n      query: ({ id, ...patch }) => ({\r\n        url: `cards/${id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    deleteAll: builder.mutation({\r\n      query: () => ({\r\n        url: `cards`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllCardsQuery,\r\n  useGetCardQuery,\r\n  useAddCardMutation,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n  useDeleteAllMutation,\r\n  useDeleteFileMutation,\r\n  useUploadFilesCardMutation,\r\n  useGetCardFilesQuery,\r\n} = cardsApi\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\n\r\ntype ButtonProps = {\r\n  icon?: any\r\n  height?: string\r\n  margin?: string\r\n  name: string\r\n  onClick: () => void\r\n}\r\n\r\nconst TaskButton: React.FC<ButtonProps> = ({ onClick, name, icon, height, margin }) => {\r\n  return (\r\n    <button style={{height: height, margin: margin}} className={styles.taskButton} onClick={onClick}>\r\n      <div className={styles.icon}>{icon}</div>\r\n      {name}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default TaskButton\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport TaskButton from '../TaskButton/TaskButton'\r\nimport { BsImage } from \"react-icons/bs\";\r\n\r\ntype BoardHeaderProps = {\r\n  name: string\r\n  onClick: () => void\r\n}\r\n\r\nconst BoardHeader: React.FC<BoardHeaderProps> = ({ name, onClick }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div style={{ width: '130px' }}>\r\n        <TaskButton onClick={onClick} name={name} icon={<BsImage />} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardHeader","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface ButtonProps {\r\n  onClick?: (e: any) => void\r\n  title?: string\r\n  bgColor?: string\r\n  type: any\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({onClick, bgColor, title, type}) => (\r\n  <button\r\n    className={styles.button}\r\n    onClick={onClick} \r\n    type={type}\r\n    style={{ backgroundColor: `${bgColor}`}}>\r\n    {title}\r\n  </button>\r\n)\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface IconButtonProps {\r\n  onClick?: () => void;\r\n  icon?: any,\r\n  title?: string,\r\n  padding?: string\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = (props) => (\r\n  <button\r\n    className={styles.iconButton}\r\n    onClick={props.onClick}\r\n    type='button'\r\n  >\r\n    {props.children}\r\n  </button>\r\n)\r\n\r\nexport default IconButton\r\n","import React, { useRef } from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\n\r\nimport Button from '../../Details/Button/Button'\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\n\r\ntype Props = {\r\n  id: string\r\n  handleSubmit: (value: any) => void\r\n  handleChange: (value: any) => void\r\n  onFocus?: (value: any) => void\r\n  closeForm: () => void\r\n  onBlur?: () => void\r\n  value: string | undefined\r\n  titleBtn: string\r\n}\r\n\r\nconst TaskForm: React.FC<Props> = ({ handleChange, handleSubmit, closeForm, value, id, onBlur, onFocus, titleBtn }) => {\r\n  const placeholder = id === 'list' ? 'Dodaj listę zadań' : 'Dodaj nową kartę'\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <TextareaAutosize\r\n        id={id}\r\n        maxRows={20}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={styles.textarea}\r\n        autoFocus\r\n        onChange={handleChange}\r\n        onBlur={onBlur}\r\n        onFocus={onFocus}\r\n        required />\r\n      <div className={styles.actionsForm}>\r\n        <Button onClick={handleSubmit} title={titleBtn} type={'submit'}/>\r\n        <div style={{ marginRight: '1rem' }} />\r\n        <IconButton onClick={closeForm}><BsXLg /></IconButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm\r\n","import { RefObject, useEffect } from 'react'\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent\r\n\r\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void,\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return\r\n      }\r\n\r\n      handler(event)\r\n    }\r\n\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler])\r\n}\r\n\r\nexport default useOnClickOutside","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\ninterface File {\r\n  cardId: string,\r\n  fileName: string,\r\n  filePath: string,\r\n  fileType: string,\r\n  fileSize: string\r\n}\r\n\r\ntype FilesResponse = File[]\r\n// const url = 'http://localhost:5000/'\r\nconst url = 'https://lukas-backend.herokuapp.com/'\r\n\r\nexport const filesApi = createApi({\r\n  reducerPath: 'filesApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: url }),\r\n  tagTypes: ['Files'],\r\n  endpoints: (builder) => ({\r\n    getAllFiles: builder.query<FilesResponse, void>({\r\n      query: () => `files`,\r\n      providesTags: ['Files'],\r\n    }),\r\n    getFile: builder.query<FilesResponse, Partial<File>>({\r\n      query: (id) => `files/${id}`,\r\n      providesTags: ['Files'],\r\n    }),\r\n    uploadFile: builder.mutation({\r\n      query: (body: {}) => ({\r\n        url: `files`,\r\n        method: 'POST',\r\n        body\r\n      }),\r\n      invalidatesTags: ['Files'],\r\n    }),\r\n    deleteFile: builder.mutation<{ success: boolean; id: string | number }, string>({\r\n      query: (id) => ({\r\n        url: `files/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Files'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllFilesQuery,\r\n  useGetFileQuery,\r\n  useUploadFileMutation,\r\n  useDeleteFileMutation,\r\n} = filesApi\r\n","import React, { useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport IconButton from '../IconButton/IconButton'\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport { MdOutlineArrowBackIos } from \"react-icons/md\";\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside'\r\n\r\ntype Props = {\r\n  trigger: boolean\r\n  title: string\r\n  closePopup: () => void\r\n  editWindow?: boolean\r\n  backToMainWindow?: () => void\r\n}\r\nconst Popup: React.FC<Props> = ({ children, trigger, title, closePopup, editWindow, backToMainWindow }) => {\r\n  const refPopup = useRef(null)\r\n  useOnClickOutside(refPopup, closePopup)\r\n  \r\n  return (\r\n    trigger ? (\r\n      <div className={styles.popup} ref={refPopup}>\r\n        <div className={styles.menuHeader}>\r\n          {editWindow ? <IconButton onClick={backToMainWindow}><MdOutlineArrowBackIos /></IconButton> : null}\r\n          <h3>{title}</h3>\r\n          <IconButton onClick={closePopup}><BsXLg /></IconButton>\r\n        </div>\r\n        <div className={styles.popupContent}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    ) : null\r\n  )\r\n}\r\n\r\nexport default Popup","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { BiCheck } from 'react-icons/bi';\r\nimport IconButton from '../../../../Details/IconButton/IconButton'\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport LabelForm from '../LabelForm/LabelForm';\r\n\r\ntype Props = {\r\n  labelId: string\r\n  title: string\r\n  color: string\r\n  cardLabels: []\r\n  checkedLabel: (value: any) => void\r\n  openLabelEditWindow: () => void\r\n}\r\n\r\nconst Label: React.FC<Props> = ({ title, color, cardLabels, checkedLabel, openLabelEditWindow, labelId }) => {\r\n  const activeLabels = cardLabels.filter((label: { _id: string }) => label._id === labelId)\r\n  return (\r\n    <div className={styles.container}>\r\n      <div onClick={checkedLabel} style={{ background: `${color}` }} className={styles.boxColor}>\r\n        <p>{title}</p>\r\n        {activeLabels.length ? < BiCheck style={{ color: 'white' }} /> : null}\r\n      </div>\r\n      <IconButton onClick={openLabelEditWindow}><BsPencil /></IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Label","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ntype Props = {\r\n  data: any\r\n  children: any\r\n  title: string\r\n}\r\n\r\nconst ItemsContainer: React.FC<Props> = ({ children, title, data }) => {\r\n  const isDataExist = Array.isArray(data) ? (data.length ? true : false) : (data === null || data === undefined ? false : true)\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isDataExist ? (\r\n          <div className={styles.container}>\r\n            <h4>{title}</h4>\r\n            <div className={styles.items}>\r\n              {children}\r\n            </div>\r\n          </div>\r\n        ) : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ItemsContainer","import React, { useState } from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\nimport Button from '../../../../Details/Button/Button'\r\nimport { HexColorPicker } from \"react-colorful\";\r\n\r\ntype Props = {\r\n  formId: string\r\n  value: string | undefined\r\n  handleSubmit: (value: any) => void\r\n  handleChange: (value: any) => void\r\n  onFocus?: (value: any) => void\r\n  deleteLabel: () => void\r\n  setSelectColor: (vlaue: string) => void\r\n  selectColor: string\r\n}\r\n\r\nconst LabelForm: React.FC<Props> = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  deleteLabel,\r\n  value,\r\n  formId,\r\n  onFocus,\r\n  setSelectColor,\r\n  selectColor }) => {\r\n  const placeholder = 'Dodaj nazwę etykiety...'\r\n\r\n  return (\r\n    <form className={styles.form}>\r\n      <p style={{ marginBottom: '5px' }}>Nazwa</p>\r\n      <TextareaAutosize\r\n        id={formId}\r\n        maxRows={20}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={styles.textarea}\r\n        autoFocus\r\n        onChange={handleChange}\r\n        onFocus={onFocus}\r\n      />\r\n      <p style={{ marginBottom: '5px' }}>Wybierz kolor</p>\r\n      <HexColorPicker className={styles.reactColorful} color={selectColor} onChange={setSelectColor} />\r\n      <div className={styles.actionsForm}>\r\n        <Button onClick={handleSubmit} title={'Zapisz'} type={'submit'}/>\r\n        <div style={{ marginRight: '1rem' }} />\r\n        <Button onClick={deleteLabel} title={'Usuń'} bgColor={'#EA4746'} type={'button'}/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LabelForm","import React, { useCallback, useRef, useState } from 'react'\r\nimport { Line } from 'rc-progress';\r\nimport styles from './styles.module.scss'\r\n\r\nimport storage from '../../../../../config/firebase'\r\nimport Button from '../../../../Details/Button/Button'\r\n\r\ntype Props = {\r\n  name: string\r\n  size: number\r\n  label: string\r\n  type: string\r\n  nameFiles: string[]\r\n  handleSubmitFile: (value: any) => void\r\n  handleInputState: (value: any) => void\r\n}\r\n\r\nconst FileForm: React.FC<Props> = ({ name, size, nameFiles, label, type, handleInputState, handleSubmitFile, ...rest }) => {\r\n  const inputRef = useRef()\r\n  const [progress, setProgress] = useState<number>(0)\r\n\r\n  const uploadOptions =  {\r\n    onUploadProgress: (progressEvent: { loaded: any; total: any; }) => {\r\n      const {loaded, total} = progressEvent;\r\n      const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\r\n      setProgress(percentage);\r\n  }\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <form className={styles.formFile}>\r\n        <label id={\"formId\"} className={styles.labelFile}>\r\n          <input\r\n            id={\"formId\"}\r\n            type={type}\r\n            name={name}\r\n            onChange={handleInputState}\r\n            multiple\r\n            hidden\r\n            {...rest}\r\n          />\r\n          Dodaj załączniki\r\n        </label>\r\n        <div className={styles.spanContainer}>\r\n          {\r\n            nameFiles.map((name, index) => (\r\n              <span key={index} className={styles.nameFileSpan}>{name}</span>\r\n            ))\r\n          }\r\n        </div>\r\n        {/* <Line percent:number=\"10\" strokeWidth=\"4\" strokeColor=\"#D3D3D3\" /> */}\r\n        {\r\n          nameFiles.length ? (\r\n            <Button onClick={handleSubmitFile} title={\"Załącz\"} type={'submit'} />\r\n          ) : null\r\n        }\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileForm","import React from 'react'\r\nimport TaskButton from '../../../TaskButton/TaskButton'\r\nimport styles from './styles.module.scss'\r\n\r\ntype Props = {\r\n  title: string,\r\n  src: string,\r\n  created: string,\r\n  deleteFile: () => void\r\n  downloadFile: () => void\r\n}\r\n\r\nconst Files: React.FC<Props> = ({ created, title, src, deleteFile, downloadFile }) => {\r\n  return (\r\n    <div className={styles.conatiner}>\r\n      <div className={styles.fileImg}>\r\n        <img src={src} className=\"card-img-top img-responsive\" alt=\"img\" />\r\n      </div>\r\n      <div className={styles.fileDetails}>\r\n        <h4>{title}</h4>\r\n        <span>{created}</span>\r\n        <div className={styles.fileButtons}>\r\n          <TaskButton height={'25px'} margin={'0 8px 0 0'} onClick={deleteFile} name={'Skasuj'} />\r\n          <TaskButton height={'25px'} margin={'0'} onClick={downloadFile} name={'Pobierz'} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Files","import React, { useState, useRef, useEffect, useCallback } from 'react'\r\nimport axios from 'axios';\r\nimport styles from './styles.module.scss'\r\nimport dayjs from 'dayjs';\r\nimport fileDownload from 'js-file-download'\r\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\r\nimport isToday from 'dayjs/plugin/isToday';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport updateLocale from 'dayjs/plugin/updateLocale'\r\nimport duration from 'dayjs/plugin/duration'\r\nimport Dropzone from 'react-dropzone'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport storage from '../../../config/firebase';\r\nimport { ref, getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\r\n\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nimport TaskForm from '../TaskForm/TaskForm'\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside'\r\n\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport { parseISO, format } from 'date-fns'\r\nimport { pl } from 'date-fns/locale'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { BsXLg } from 'react-icons/bs';\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport { BiTask } from 'react-icons/bi';\r\nimport { GrAttachment } from 'react-icons/gr';\r\nimport { BsStopwatch } from 'react-icons/bs';\r\nimport { MdOutlineLabel } from 'react-icons/md';\r\nimport { CgArrowRight, CgChevronDoubleLeft } from 'react-icons/cg';\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { RiDeleteBinLine } from 'react-icons/ri';\r\n// import { SwatchesPicker } from 'react-color';\r\n\r\nimport {\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\n\r\nimport {\r\n  useGetCardQuery,\r\n  useGetCardFilesQuery,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n  useUploadFilesCardMutation,\r\n  // useDeleteFileMutation,\r\n} from \"../../../store/reducers/cardsReducer\";\r\n\r\nimport {\r\n  useGetAllFilesQuery,\r\n  useGetFileQuery,\r\n  useUploadFileMutation,\r\n  useDeleteFileMutation,\r\n} from '../../../store/reducers/filesReducer'\r\n\r\n// import { GrAdd } from 'react-icons/gr';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\nimport Popup from '../../Details/Popup/Popup';\r\nimport Label from './CardWindowDetails/Label/Label';\r\nimport { BiCheck } from 'react-icons/bi';\r\n// import { labelItems } from '../localData';\r\n\r\nimport ItemsContainer from './CardWindowDetails/ItemsContainer/ItemsContainer'\r\nimport LabelForm from './CardWindowDetails/LabelForm/LabelForm'\r\nimport Button from '../../Details/Button/Button';\r\n\r\nimport FileForm from './CardWindowDetails/FileForm/FileForm'\r\nimport Files from './CardWindowDetails/Files/Files';\r\nimport { promises } from 'dns';\r\n\r\ntype Props = {\r\n  cardId: string\r\n  title: string\r\n  description: string\r\n  boardId: string\r\n  nameList: string | undefined\r\n  deadlineCard: Date | null\r\n  cardLabels: any\r\n  cardFiles: any\r\n  cardCompleted: boolean\r\n  dateIsSameOrBefore: boolean\r\n  deadlineIsSoon: boolean\r\n  cardDateDisplay: {\r\n    style: {\r\n      backgroundColor: string\r\n    },\r\n    title: string\r\n    name: string\r\n  }\r\n  setIsCardWindowOpen: () => void\r\n  setCardCompleted: (value: any) => void\r\n  setDeadlineCard: (value: any) => void\r\n  setCardLabels: (value: any) => void\r\n}\r\n\r\nconst CardWindow: React.FC<Props> = ({\r\n  cardId,\r\n  title,\r\n  boardId,\r\n  nameList,\r\n  description,\r\n  cardLabels,\r\n  deadlineCard,\r\n  cardCompleted,\r\n  setDeadlineCard,\r\n  setCardCompleted,\r\n  setIsCardWindowOpen,\r\n  setCardLabels,\r\n  dateIsSameOrBefore,\r\n  deadlineIsSoon,\r\n  cardDateDisplay,\r\n  cardFiles\r\n\r\n}) => {\r\n  dayjs.locale('pl');\r\n  const { data: board, error, isLoading } = useGetBoardQuery(boardId);\r\n  const [updateCard] = useUpdateCardMutation();\r\n  const [deleteCard] = useDeleteCardMutation();\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n  // const [uploadFiles] = useUploadFilesCardMutation();\r\n  const [uploadFiles] = useUploadFileMutation();\r\n  const [deleteFile] = useDeleteFileMutation();\r\n\r\n  const refWindow = useRef(null)\r\n  const [cardTitle, setCardTitle] = useState<string>(title)\r\n  const [cardDescription, setCardDescription] = useState<string | undefined>(description)\r\n  const [labels, setLabels] = useState([] as any)\r\n  const [formIsOpen, setFormIsOpen] = useState(false)\r\n  const [labelsTrigger, setLabelsTrigger] = useState<boolean>(false)\r\n  const [dateTrigger, setDateTrigger] = useState<boolean>(false)\r\n  const [fileTrigger, setFileTrigger] = useState<boolean>(false)\r\n  const [isOpenLabelEditWindow, setIsOpenLabelEditWindow] = useState<boolean>(false)\r\n  const [isOpenAddNewLabelWindow, setIsOpenAddNewLabelWindow] = useState<boolean>(false)\r\n  const [currentLabelTitle, setCurrentLabelTitle] = useState<string>('')\r\n  const [currentLabelId, setCurrentLabelId] = useState<string>('')\r\n  const [currentLabelColor, setCurrentLabelColor] = useState<string>('')\r\n  const [labelTitle, setLabelTitle] = useState<string>('')\r\n\r\n  const [selectedFiles, setSelectedFiles] = useState<any>('');\r\n  const [selectedNameFiles, setSelectedNameFiles] = useState<string[]>([]);\r\n  // const []\r\n  const [progress, setProgress] = useState(0);\r\n\r\n  useEffect(() => {\r\n    if (board) {\r\n      setLabels(board.labels)\r\n    }\r\n  }, [board])\r\n\r\n  const handleEditCardTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card-title') setCardTitle(e.target.value)\r\n    updateCard({\r\n      id: cardId,\r\n      title: e.target.value\r\n    })\r\n    updateBoard({\r\n      id: boardId\r\n    })\r\n  }\r\n\r\n  const handleEditCardDescription = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card-description')\r\n      setCardDescription(e.target.value)\r\n  }\r\n\r\n  const handleSaveCardDescription = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      id: cardId,\r\n      description: cardDescription\r\n    })\r\n    updateBoard({\r\n      id: boardId\r\n    })\r\n    setFormIsOpen(false)\r\n  }\r\n\r\n  const handleChangeLabelTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'label-title-edit') setCurrentLabelTitle(e.target.value)\r\n    if (e.target.id === 'label-title-add') setLabelTitle(e.target.value)\r\n  }\r\n\r\n  const handleSaveLabelEdit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    const newLabels = [...labels]\r\n    const newCardLabels = [...cardLabels]\r\n    if (labels) {\r\n      const newLabelState = newLabels.map((label: any) => {\r\n        if (label._id !== currentLabelId) return label;\r\n        return { ...label, title: currentLabelTitle, color: currentLabelColor };\r\n      });\r\n\r\n      const newCardLabelState = newCardLabels.map((label: any) => {\r\n        if (label._id !== currentLabelId) return label;\r\n        return { ...label, title: currentLabelTitle, color: currentLabelColor };\r\n      })\r\n\r\n      setCardLabels(newCardLabelState)\r\n      setLabels(newLabelState)\r\n      updateBoard({\r\n        id: boardId,\r\n        labels: newLabelState\r\n      })\r\n      setIsOpenLabelEditWindow(false)\r\n    }\r\n  }\r\n\r\n  const handleAddNewLabel = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    const newLabels = [...labels, { color: currentLabelColor, title: labelTitle, active: false }]\r\n    updateBoard({\r\n      id: boardId,\r\n      labels: newLabels\r\n    })\r\n    setIsOpenAddNewLabelWindow(false)\r\n  }\r\n\r\n  const handleCheckedLabel = (item: any) => {\r\n    const copyCardLabels = [...cardLabels]\r\n    const newLabel = { ...item, active: !item.active };\r\n    const existLabel = copyCardLabels.find((label: { _id: string; }) => label._id === newLabel._id)\r\n\r\n    if (existLabel) {\r\n      const newLabels = copyCardLabels.filter((label: { _id: string; }) => label._id !== existLabel._id)\r\n      setCardLabels(newLabels)\r\n      updateCard({\r\n        id: cardId,\r\n        labels: newLabels\r\n      })\r\n    } else {\r\n      const newLabels = [...copyCardLabels, newLabel]\r\n      setCardLabels(newLabels)\r\n      updateCard({\r\n        id: cardId,\r\n        labels: newLabels\r\n      })\r\n    }\r\n    updateBoard({\r\n      id: boardId,\r\n    })\r\n  }\r\n\r\n  const handleDeleteLabel = () => {\r\n    const newLabels = [...labels]\r\n    const newCardLabels = [...cardLabels]\r\n    const newLabelsState = newLabels.filter((label) => label._id !== currentLabelId);\r\n    const newCardLabelsState = newCardLabels.filter((label) => label._id !== currentLabelId);\r\n    setLabels(newLabelsState)\r\n    setCardLabels(newCardLabelsState)\r\n    updateCard({\r\n      id: cardId,\r\n      labels: newCardLabelsState\r\n    })\r\n    updateBoard({\r\n      id: boardId,\r\n      labels: newLabelsState\r\n    })\r\n    setIsOpenLabelEditWindow(false)\r\n  }\r\n\r\n  const handleGetCurrentEditLabel = (id: string) => {\r\n    const newLabels = [...labels]\r\n    const activeLabel = newLabels.filter((label: { _id: string }) => label._id === id)\r\n    const activeLabelTitle = activeLabel.map((label: { title: string }) => label.title).toString()\r\n    const activeLabelColor = activeLabel.map((label: { color: string }) => label.color).toString()\r\n    setCurrentLabelTitle(activeLabelTitle)\r\n    setCurrentLabelColor(activeLabelColor)\r\n    setCurrentLabelId(id)\r\n  }\r\n\r\n  const handleSaveDeadline = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      id: cardId,\r\n      deadline: deadlineCard\r\n    })\r\n    updateBoard({ id: boardId })\r\n    setDateTrigger(false)\r\n  }\r\n\r\n  const handleDeleteDeadline = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    setDeadlineCard(null)\r\n    updateCard({\r\n      id: cardId,\r\n      deadline: null\r\n    })\r\n    updateBoard({ id: boardId })\r\n    setDateTrigger(false)\r\n  }\r\n\r\n  const handleChangeCompleted = () => {\r\n    setCardCompleted(!cardCompleted);\r\n    updateCard({\r\n      id: cardId,\r\n      completed: !cardCompleted\r\n    })\r\n    updateBoard({\r\n      id: boardId\r\n    })\r\n  };\r\n\r\n  const handleUploadImage = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.files !== null) {\r\n      setSelectedFiles(e.currentTarget.files)\r\n      const arr = []\r\n      for (let i = 0; i < e.currentTarget.files.length; i++) {\r\n        arr.push(e.currentTarget.files[i].name)\r\n        setSelectedNameFiles(arr)\r\n      }\r\n    }\r\n  },\r\n    [],\r\n  );\r\n\r\n\r\n  const handleSubmitFile = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault()\r\n    if (!selectedFiles.length) return;\r\n    const formData = new FormData();\r\n    formData.append('cardId', cardId)\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      formData.append('files', selectedFiles[i]);\r\n    }\r\n    const config = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      }\r\n    }\r\n    updateCard({\r\n      id: cardId,\r\n      files: cardFiles\r\n    })\r\n    await axios.post(`https://lukas-backend.herokuapp.com/files`, formData, config)\r\n      .then(res => {\r\n        console.log(res)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n      })\r\n    setSelectedNameFiles([])\r\n    setFileTrigger(false)\r\n  }\r\n\r\n  const handleDeleteFile = (fileId: string) => {\r\n    deleteFile(fileId)\r\n    updateCard({\r\n      id: cardId,\r\n      files: cardFiles\r\n    })\r\n  }\r\n\r\n  const handleDownloadFile = (filePath: string) => {\r\n    axios.get(`https://lukas-backend.herokuapp.com/${filePath}`, {\r\n      responseType: 'blob',\r\n    }).then((res) => {\r\n      let filename = filePath.replace(/^.*[\\\\\\/]/, '')\r\n      let fileExtension;\r\n      fileExtension = filePath.split('.');\r\n      fileExtension = fileExtension[fileExtension.length - 1];\r\n      fileDownload(res.data, `${filename}.${fileExtension}`);\r\n    });\r\n  }\r\n\r\n  useOnClickOutside(refWindow, setIsCardWindowOpen)\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.overlay} onClick={setIsCardWindowOpen}></div>\r\n      <div ref={refWindow} className={styles.cardWindow}>\r\n        <div className={styles.cardHeader}>\r\n          <div className={styles.cardHeaderText}>\r\n            <TextareaAutosize\r\n              id='card-title'\r\n              autoFocus={false}\r\n              value={cardTitle}\r\n              className={styles.textareaTitle}\r\n              onChange={handleEditCardTitle}\r\n              onFocus={(e) => e.target.select()}\r\n              rows={20}\r\n              required\r\n            />\r\n            <p>Na liscie: <strong>{nameList}</strong></p>\r\n          </div>\r\n          <IconButton onClick={setIsCardWindowOpen}><BsXLg /></IconButton>\r\n        </div>\r\n        <div className={styles.cardContainer}>\r\n          <div className={styles.windowMain}>\r\n            <ItemsContainer data={cardLabels} title={'Etykiety'}>\r\n              {\r\n                cardLabels.map((label: { title: string; active: any; color: any; _id: string }) => (\r\n                  <div\r\n                    key={label._id}\r\n                    style={{ backgroundColor: `${label.color}` }}\r\n                    className={styles.label}\r\n                    onClick={() => setLabelsTrigger(true)}\r\n                  >\r\n                    <span>{label.title}</span>\r\n                  </div>\r\n                ))\r\n              }\r\n            </ItemsContainer>\r\n            <ItemsContainer data={deadlineCard} title={'Termin'}>\r\n              {\r\n                deadlineCard ? (\r\n                  <>\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      checked={cardCompleted}\r\n                      onChange={handleChangeCompleted}\r\n                      style={{ height: '100%', width: '1rem', marginRight: '8px' }} />\r\n                    <button onClick={() => setDateTrigger(true)}\r\n                      className={styles.selectedDateBtn}>\r\n                      <span>{dayjs(deadlineCard).format('DD-MM-YYYY HH:mm')}</span>\r\n                      {\r\n                        dateIsSameOrBefore && !cardCompleted ? (\r\n                          <span\r\n                            title={cardDateDisplay.title}\r\n                            style={{ backgroundColor: cardDateDisplay.style.backgroundColor }} className={styles.datedateNotificationSpan}>\r\n                            {cardDateDisplay.name}\r\n                          </span>\r\n                        ) : null\r\n                      }\r\n                      {\r\n                        deadlineIsSoon && !cardCompleted ? (\r\n                          <span\r\n                            title={cardDateDisplay.title}\r\n                            style={{ backgroundColor: cardDateDisplay.style.backgroundColor }} className={styles.datedateNotificationSpan}>\r\n                            {cardDateDisplay.name}\r\n                          </span>\r\n                        ) : null\r\n                      }\r\n                      {\r\n                        cardCompleted ? (\r\n                          <span\r\n                            title={cardDateDisplay.title}\r\n                            style={{ backgroundColor: cardDateDisplay.style.backgroundColor }} className={styles.datedateNotificationSpan}>\r\n                            {cardDateDisplay.name}\r\n                          </span>\r\n                        ) : null\r\n                      }\r\n\r\n                    </button>\r\n                  </>\r\n                ) : null\r\n              }\r\n            </ItemsContainer>\r\n            <div className={styles.descriptionContainer}>\r\n              <div className={styles.descriptionHeader}>\r\n                <h4>Opis</h4>\r\n                <div style={{ maxWidth: '100px', marginLeft: '1rem' }}>\r\n                  {\r\n                    !formIsOpen && cardDescription !== undefined && cardDescription !== '' ? (\r\n                      <TaskButton onClick={() => setFormIsOpen(true)} name={'Edytuj'} icon={<BsPencil />} />\r\n                    ) : null\r\n                  }\r\n                </div>\r\n              </div>\r\n              {\r\n                formIsOpen ?\r\n                  <TaskForm\r\n                    id={'card-description'}\r\n                    handleChange={handleEditCardDescription}\r\n                    handleSubmit={handleSaveCardDescription}\r\n                    closeForm={() => { setFormIsOpen(false); setCardDescription(description) }}\r\n                    value={cardDescription}\r\n                    onFocus={(e) => e.target.select()}\r\n                    titleBtn={'Zapisz'}\r\n                  /> :\r\n                  <div>\r\n                    {cardDescription !== '' && cardDescription !== undefined ? <p onClick={() => setFormIsOpen(true)}>{cardDescription}</p> :\r\n                      <TaskButton onClick={() => setFormIsOpen(true)} name={'Dodaj opis...'} icon={<IoMdAdd />} />}\r\n                  </div>\r\n              }\r\n            </div>\r\n            <ItemsContainer data={cardFiles} title={'Załącznik'}>\r\n              <div className={styles.filesContainer}>\r\n                {\r\n                  cardFiles?.map((file: { _id: string; fileName: string; createdAt: string; filePath: string; }) => (\r\n                    <Files\r\n                      key={file._id}\r\n                      title={file.fileName}\r\n                      created={`Dodano ${dayjs(file.createdAt).format('DD MMM')} o ${dayjs(file.createdAt).format('HH:mm')}`}\r\n                      // src={`http://localhost:5000/${file.filePath}`}\r\n                      src={`https://lukas-backend.herokuapp.com/${file.filePath}`}\r\n                      deleteFile={() => handleDeleteFile(file._id)}\r\n                      downloadFile={() => handleDownloadFile(file.filePath)}\r\n                    />\r\n                  ))\r\n                }\r\n              </div>\r\n            </ItemsContainer>\r\n          </div>\r\n          <div className={styles.cardSidebar} >\r\n            <Popup\r\n              title={isOpenLabelEditWindow ? 'Edytuj etykietę' : isOpenAddNewLabelWindow ? 'Dodaj Etykietę' : 'Etykiety'}\r\n              trigger={labelsTrigger}\r\n              closePopup={() => { setLabelsTrigger(false); setIsOpenLabelEditWindow(false); setIsOpenAddNewLabelWindow(false) }}\r\n              editWindow={isOpenLabelEditWindow || isOpenAddNewLabelWindow}\r\n              backToMainWindow={() => { setIsOpenLabelEditWindow(false); setIsOpenAddNewLabelWindow(false) }}\r\n            >\r\n              <div className={styles.labels}>\r\n                {\r\n                  !isOpenLabelEditWindow &&\r\n                    !isOpenAddNewLabelWindow ? (\r\n                    <>\r\n                      <div className={styles.labelsList}>\r\n                        {\r\n                          labels.map((label: any) => (\r\n                            <Label\r\n                              key={label._id}\r\n                              labelId={label._id}\r\n                              title={label.title}\r\n                              color={label.color}\r\n                              cardLabels={cardLabels}\r\n                              openLabelEditWindow={() => {\r\n                                setIsOpenLabelEditWindow(true)\r\n                                handleGetCurrentEditLabel(label._id)\r\n                              }}\r\n                              checkedLabel={() => handleCheckedLabel(label)}\r\n                            >\r\n                            </Label>\r\n                          ))\r\n                        }\r\n                      </div>\r\n                      <TaskButton onClick={() => setIsOpenAddNewLabelWindow(true)} name={'Utwórz nową etykietę'} />\r\n                    </>\r\n                  ) : (\r\n                    <LabelForm\r\n                      formId={isOpenLabelEditWindow ? 'label-title-edit' : isOpenAddNewLabelWindow ? 'label-title-add' : ''}\r\n                      handleChange={handleChangeLabelTitle}\r\n                      handleSubmit={isOpenLabelEditWindow ? handleSaveLabelEdit : isOpenAddNewLabelWindow ? handleAddNewLabel : () => console.log('label does not exist')}\r\n                      deleteLabel={handleDeleteLabel}\r\n                      value={isOpenLabelEditWindow ? currentLabelTitle : isOpenAddNewLabelWindow ? labelTitle : ''}\r\n                      onFocus={(e) => e.target.select()}\r\n                      selectColor={currentLabelColor}\r\n                      setSelectColor={setCurrentLabelColor}\r\n                    />\r\n                  )\r\n                }\r\n              </div>\r\n            </Popup>\r\n            <Popup\r\n              title={'data'}\r\n              trigger={dateTrigger}\r\n              closePopup={() => setDateTrigger(false)}\r\n              backToMainWindow={() => setDateTrigger(false)}\r\n            >\r\n              <DatePicker\r\n                dateFormat='DD/MM/YYYY'\r\n                timeFormat=\"hh:mm\"\r\n                selected={deadlineCard ? new Date(deadlineCard) : null}\r\n                onChange={(date: Date) => setDeadlineCard(date)}\r\n                inline\r\n                showTimeInput\r\n              />\r\n              <label>Termin <br></br>\r\n                <input style={{ maxWidth: '100px', marginRight: '10px' }} placeholder={dayjs(deadlineCard).format('DD/MM/YYYY')} />\r\n                <input style={{ maxWidth: '100px' }} placeholder={dayjs(deadlineCard).format('HH:mm')} />\r\n              </label>\r\n              <div className={styles.actionsForm}>\r\n                <Button onClick={handleSaveDeadline} title={'Zapisz'} type={'button'} />\r\n                <div style={{ marginRight: '1rem' }} />\r\n                <Button onClick={handleDeleteDeadline} title={'Usuń'} bgColor={'#EA4746'} type={'button'} />\r\n              </div>\r\n            </Popup>\r\n            <Popup\r\n              title={'załącznik'}\r\n              trigger={fileTrigger}\r\n              closePopup={() => setFileTrigger(false)}\r\n              backToMainWindow={() => setFileTrigger(false)}\r\n            >\r\n              <FileForm\r\n                name={'załącznik'}\r\n                size={0}\r\n                label={'załącznik'}\r\n                type={'file'}\r\n                nameFiles={selectedNameFiles}\r\n                handleInputState={handleUploadImage} handleSubmitFile={handleSubmitFile} />\r\n            </Popup>\r\n            <TaskButton onClick={() => setLabelsTrigger(true)} name={'Etykiety'} icon={<MdOutlineLabel />} />\r\n            <TaskButton onClick={() => setDateTrigger(true)} name={'Data'} icon={<BsStopwatch />} />\r\n            <TaskButton onClick={() => setFileTrigger(true)} name={'Załącznik'} icon={<GrAttachment />} />\r\n            <TaskButton onClick={() => setFormIsOpen(true)} name={'Lista zadań'} icon={<BiTask />} />\r\n            <div className={styles.divider}></div>\r\n            <TaskButton onClick={() => setFormIsOpen(true)} name={'Przenieś'} icon={<CgArrowRight />} />\r\n            <TaskButton onClick={() => {\r\n              deleteCard(cardId);\r\n              updateBoard({ id: boardId })\r\n            }} name={'Usuń'} icon={<RiDeleteBinLine />} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default CardWindow","import { RefObject, useRef, useEffect, useLayoutEffect } from 'react'\r\n\r\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\r\n\r\nfunction useEventListener<K extends keyof WindowEventMap>(\r\n  eventName: K,\r\n  handler: (event: WindowEventMap[K]) => void,\r\n): void\r\nfunction useEventListener<\r\n  K extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement = HTMLDivElement,\r\n>(\r\n  eventName: K,\r\n  handler: (event: HTMLElementEventMap[K]) => void,\r\n  element: RefObject<T>,\r\n): void\r\n\r\nfunction useEventListener<\r\n  KW extends keyof WindowEventMap,\r\n  KH extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement | void = void,\r\n>(\r\n  eventName: KW | KH,\r\n  handler: (\r\n    event: WindowEventMap[KW] | HTMLElementEventMap[KH] | Event,\r\n  ) => void,\r\n  element?: RefObject<T>,\r\n) {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef(handler)\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    savedHandler.current = handler\r\n  }, [handler])\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener: typeof handler = event => savedHandler.current(event)\r\n\r\n    targetElement.addEventListener(eventName, eventListener)\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      targetElement.removeEventListener(eventName, eventListener)\r\n    }\r\n  }, [eventName, element])\r\n}\r\n\r\nexport default useEventListener","import { RefObject, useState } from 'react'\r\n\r\nimport useEventListener from './useEventListener'\r\n\r\nfunction useHover<T extends HTMLElement = HTMLElement>(\r\n  elementRef: RefObject<T>,\r\n): boolean {\r\n  const [value, setValue] = useState<boolean>(false)\r\n\r\n  const handleMouseEnter = () => setValue(true)\r\n  const handleMouseLeave = () => setValue(false)\r\n\r\n  useEventListener('mouseenter', handleMouseEnter, elementRef)\r\n  useEventListener('mouseleave', handleMouseLeave, elementRef)\r\n\r\n  return value\r\n}\r\n\r\nexport default useHover\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\n// import TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport dayjs from 'dayjs';\r\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\r\nimport isToday from 'dayjs/plugin/isToday';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport updateLocale from 'dayjs/plugin/updateLocale'\r\nimport duration from 'dayjs/plugin/duration'\r\n\r\nimport 'dayjs/locale/pl';\r\nimport CardWindow from '../CardWindow/CardWindow';\r\n// import TextareaAutosize from 'react-textarea-autosize';\r\nimport {\r\n  // useGetAllTasksQuery,\r\n  // useAddTaskMutation,\r\n  // useDeleteTaskMutation,\r\n  // useUpdateTaskMutation,\r\n  // useAddCardMutation,\r\n} from \"../../../store/reducers/listsReducer\";\r\nimport {\r\n  // useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\nimport {\r\n  useGetCardQuery,\r\n  // useAddCardMutation,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n} from \"../../../store/reducers/cardsReducer\";\r\n\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport { GrTextAlignFull } from 'react-icons/gr';\r\nimport { BsStopwatch } from 'react-icons/bs';\r\nimport { ImCheckboxUnchecked } from 'react-icons/im';\r\nimport { ImCheckboxChecked } from 'react-icons/im';\r\nimport { GrAttachment } from 'react-icons/gr';\r\n// import TaskButton from '../TaskButton/TaskButton';\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\nimport Button from '../../Details/Button/Button';\r\n\r\nimport useHover from '../../../hooks/useHover'\r\n\r\ntype Props = {\r\n  boardId: string\r\n  title: string\r\n  description: string\r\n  listId?: string\r\n  cardId: string\r\n  index: number\r\n  deadline: Date | null\r\n  completed: boolean\r\n  updateDate?: Date\r\n  labels: []\r\n  files: []\r\n  nameList: string | undefined\r\n  onClickDelete?: () => void\r\n  dragDisabled: (value: boolean) => void\r\n}\r\n\r\nconst Card: React.FC<Props> = ({\r\n  cardId,\r\n  boardId,\r\n  title,\r\n  index,\r\n  nameList,\r\n  description,\r\n  completed,\r\n  labels,\r\n  deadline,\r\n  dragDisabled,\r\n}) => {\r\n  const { data: card, error, isLoading } = useGetCardQuery(cardId);\r\n  const [deleteCard] = useDeleteCardMutation()\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const [isCardWindowOpen, setIsCardWindowOpen] = useState<boolean>(false)\r\n  const [showText, setShowText] = useState<boolean>(false)\r\n  const [cardLabels, setCardLabels] = useState(labels)\r\n  const [cardCompleted, setCardCompleted] = useState<boolean>(completed)\r\n  const [deadlineCard, setDeadlineCard] = useState<Date | null>(deadline)\r\n  const [nowDate, setNowDate] = useState(Date.now())\r\n  const [files, setFiles] = useState([] as any)\r\n\r\n  dayjs.locale('pl');\r\n  dayjs.extend(isSameOrBefore)\r\n  dayjs.extend(duration)\r\n  dayjs.extend(relativeTime)\r\n\r\n  useEffect(() => {\r\n    const intervalIsSameOrBefore = setInterval(() => setNowDate(Date.now()), 100000)\r\n    return () => clearInterval(intervalIsSameOrBefore)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (card) {\r\n      setFiles(card.files)\r\n    }\r\n  }, [card])\r\n\r\n  const handleMouseEnter = () => {\r\n    setShowText(true)\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    setShowText(false)\r\n  }\r\n\r\n  const handleOpenCardWindow = () => {\r\n    setIsCardWindowOpen(true)\r\n    dragDisabled(true)\r\n  }\r\n\r\n  const handleCloseCardWindow = () => {\r\n    setIsCardWindowOpen(false)\r\n    dragDisabled(false)\r\n  }\r\n\r\n  const handleChangeCompleted = () => {\r\n    setCardCompleted(!cardCompleted);\r\n    updateCard({\r\n      id: cardId,\r\n      completed: !cardCompleted\r\n    })\r\n    updateBoard({\r\n      id: boardId\r\n    })\r\n  };\r\n\r\n  const fiveHours = 300 //minutes\r\n  const dateIsSameOrBefore = dayjs(deadlineCard).isSameOrBefore(nowDate, 'minute')\r\n  const timeToDeadline = dayjs(deadlineCard).diff(dayjs(nowDate), 'minute', true)\r\n  const deadlineIsSoon = (timeToDeadline < fiveHours && timeToDeadline > 0) ? true : false\r\n\r\n  const cardDateDisplay = {\r\n    style: {\r\n      color: (cardCompleted || dateIsSameOrBefore || deadlineIsSoon) ? 'white' : 'black',\r\n      backgroundColor: cardCompleted ? 'green' : dateIsSameOrBefore ? 'red' : deadlineIsSoon ? 'orange' : 'transparent'\r\n    },\r\n    title: cardCompleted ? 'Ta karta została ukończona' :\r\n      dateIsSameOrBefore ? 'Ta karta jest przeterminowana' :\r\n        deadlineIsSoon ? `Deadline ${dayjs(deadlineCard).fromNow()}` : 'Karta jest na później',\r\n    name: cardCompleted ? 'zrealizowany' :\r\n      dateIsSameOrBefore ? 'termin przekroczony' :\r\n        deadlineIsSoon ? `wkrótce` : '',\r\n    iconStyle: {\r\n      marginRight: '5px',\r\n      fontSize: '14px',\r\n    }\r\n  }\r\n\r\n  const hoverRef = useRef(null)\r\n  const isHover = useHover(hoverRef)\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isCardWindowOpen ?\r\n          <CardWindow\r\n            nameList={nameList}\r\n            cardId={cardId}\r\n            title={title}\r\n            description={description}\r\n            boardId={boardId}\r\n            deadlineCard={deadlineCard}\r\n            cardLabels={cardLabels}\r\n            cardCompleted={cardCompleted}\r\n            setCardLabels={setCardLabels}\r\n            setDeadlineCard={setDeadlineCard}\r\n            setCardCompleted={setCardCompleted}\r\n            setIsCardWindowOpen={handleCloseCardWindow}\r\n            dateIsSameOrBefore={dateIsSameOrBefore}\r\n            deadlineIsSoon={deadlineIsSoon}\r\n            cardDateDisplay={cardDateDisplay}\r\n            cardFiles={files}\r\n          /> : null\r\n      }\r\n      <Draggable draggableId={String(cardId)} index={index} >\r\n        {provided => (\r\n          <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n            <div className={styles.card}\r\n              onMouseEnter={handleMouseEnter}\r\n              onMouseLeave={handleMouseLeave}\r\n            >\r\n              <div className={styles.cardContainer} >\r\n                <div className={styles.cardClickableArea} onClick={handleOpenCardWindow}></div>\r\n                {\r\n                  cardLabels.length ? (\r\n                    <div className={styles.cardLabels} onClick={handleOpenCardWindow}>\r\n                      {\r\n                        cardLabels.map((label: { active: any; color: any; _id: string; title: string }) => (\r\n                          <div title={`${label.title}`} key={label._id} className={styles.cardLabel} style={{ backgroundColor: `${label.color}` }}></div>\r\n                        ))\r\n                      }\r\n                    </div>\r\n                  ) : null\r\n                }\r\n                <span >{title}</span>\r\n                <div className={styles.iconsContainer}>\r\n                  <div ref={hoverRef}>\r\n                    {\r\n                      deadline ? (\r\n                        <button\r\n                          className={styles.dateBtn}\r\n                          onClick={handleChangeCompleted}\r\n                          style={cardDateDisplay.style}\r\n                          title={cardDateDisplay.title}\r\n\r\n                        >\r\n                          {isHover ? (cardCompleted ? <ImCheckboxChecked style={cardDateDisplay.iconStyle} /> : <ImCheckboxUnchecked style={cardDateDisplay.iconStyle} />) : <BsStopwatch style={cardDateDisplay.iconStyle} />}\r\n                          {dayjs(deadline).format('DD MMM')}\r\n                        </button>\r\n                      ) : null\r\n                    }\r\n                  </div>\r\n                  {description ? <div className={styles.icons} title=\"Ta karta ma opis.\"><GrTextAlignFull onClick={handleOpenCardWindow} /></div> : null}\r\n                  {files.length ? <div className={styles.icons} title=\"Załączniki\"><GrAttachment /><span>{files.length}</span></div> : null}\r\n                </div>\r\n              </div>\r\n              <div className={styles.btnContainer}>\r\n                {\r\n                  showText ? <IconButton onClick={() => {\r\n                    deleteCard(cardId);\r\n                    updateBoard({ id: boardId })\r\n                  }}>\r\n                    <BsPencil />\r\n                  </IconButton> : null\r\n                }\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Draggable>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card\r\n","import React, { useState, useRef, useEffect } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport TaskForm from '../TaskForm/TaskForm';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\nimport IconButton from '../../Details/IconButton/IconButton'\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\n\r\nimport { labelItems } from '../localData';\r\n\r\nimport {\r\n  // useGetAllTasksQuery,\r\n  // useAddTaskMutation,\r\n  useDeleteTaskMutation,\r\n  useUpdateTaskMutation,\r\n  // useAddCardMutation,\r\n} from \"../../../store/reducers/listsReducer\";\r\nimport {\r\n  // useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\nimport {\r\n  // useGetAllCardsQuery,\r\n  useAddCardMutation,\r\n  // useDeleteCardMutation,\r\n  // useUpdateCardMutation,\r\n} from \"../../../store/reducers/cardsReducer\";\r\nimport Card from '../Card/Card';\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { MdOutlineAdd } from \"react-icons/md\";\r\nimport { GoPlus } from \"react-icons/go\";\r\n// import { dangerouslyDisableDefaultSrc } from 'helmet/dist/middlewares/content-security-policy';\r\n\r\ntype Props = {\r\n  listId: string\r\n  title: string\r\n  index: number\r\n  boardId: string\r\n  cards: []\r\n\r\n  // openCardDetails: (value: boolean) => void\r\n}\r\nconst List: React.FC<Props> = ({ title, listId, index, cards, boardId }) => {\r\n  const { data: board, error, isLoading } = useGetBoardQuery(boardId);\r\n  const ref = useRef(null)\r\n  const [addCard] = useAddCardMutation()\r\n  // const [deleteCard] = useDeleteCardMutation()\r\n  // const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n  const [updateList] = useUpdateTaskMutation()\r\n  const [deleteList] = useDeleteTaskMutation()\r\n\r\n  const [listTitle, setListTitle] = useState<string | undefined>(title)\r\n  const [cardTitle, setCardTitle] = useState<string>('')\r\n  const [openCardForm, setOpenCardForm] = useState<boolean>(false)\r\n  const [openTitleForm, setOpenTitleForm] = useState<boolean>(false)\r\n  const [dragDisabled, setDragDisabled] = useState<boolean>(false)\r\n  // const [labels, setLabels] = useState([] as any)\r\n\r\n  // useEffect(() => {\r\n  //   if (board) {\r\n  //     setLabels(board.labels)\r\n  //   }\r\n  // }, [board])\r\n\r\n\r\n  const handleChangeCardValue = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card') setCardTitle(e.target.value)\r\n  }\r\n\r\n  const handleEditListTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'list') setListTitle(e.target.value)\r\n    updateList({\r\n      id: listId,\r\n      title: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleAddCard = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    if (cardTitle.length === 0) return\r\n    addCard({\r\n      listId: listId,\r\n      title: cardTitle,\r\n    })\r\n    updateBoard({\r\n      id: boardId,\r\n    })\r\n\r\n    setOpenCardForm(false)\r\n    setCardTitle('')\r\n  }\r\n\r\n  const handleCloseForm = () => { setOpenCardForm(false); setCardTitle(''); }\r\n  useOnClickOutside(ref, handleCloseForm)\r\n\r\n  return (\r\n    <div>\r\n      <Draggable draggableId={String(listId)} index={index} isDragDisabled={dragDisabled}>\r\n        {provided => (\r\n          <div className={styles.container} {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}>\r\n            <div className={styles.listHeader} onClick={() => setOpenTitleForm(true)} ref={ref}>\r\n              {\r\n                openTitleForm ?\r\n                  <div className={styles.textWrapper}>\r\n                    <TextareaAutosize\r\n                      id='list'\r\n                      autoFocus={true}\r\n                      value={listTitle}\r\n                      className={styles.textarea}\r\n                      onChange={handleEditListTitle}\r\n                      onFocus={(e) => e.target.select()}\r\n                      onBlur={() => setOpenTitleForm(false)}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  : <div className={styles.textWrapper}><h2>{listTitle}</h2></div>\r\n              }\r\n              <IconButton onClick={() => {\r\n                deleteList(listId);\r\n                updateBoard({ id: boardId })\r\n              }}><BsThreeDots style={{ fontSize: \"1.3em\" }} /></IconButton>\r\n            </div>\r\n            <Droppable droppableId={String(listId)} type=\"card\">\r\n              {provided => (\r\n                <div className={styles.cardsContainer}\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                >\r\n                  {\r\n                    cards?.map((card: {\r\n                      listId: string;\r\n                      _id: string;\r\n                      title: string;\r\n                      updateDate: Date,\r\n                      labels: [],\r\n                      description: string,\r\n                      deadline: Date,\r\n                      completed: boolean,\r\n                      files: []\r\n                    },\r\n                      index: number) => (\r\n                      <Card\r\n                        index={index}\r\n                        key={card._id}\r\n                        cardId={card._id}\r\n                        boardId={boardId}\r\n                        title={card.title}\r\n                        deadline={card.deadline}\r\n                        completed={card.completed}\r\n                        description={card.description}\r\n                        updateDate={card.updateDate}\r\n                        labels={card.labels}\r\n                        files={card.files}\r\n                        nameList={listTitle}\r\n                        dragDisabled={setDragDisabled}\r\n                      />\r\n                    ))\r\n                  }\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n            <div className={styles.actionsList}>\r\n              {openCardForm ?\r\n                <div ref={ref}>\r\n                  <TaskForm\r\n                    id={'card'}\r\n                    handleChange={handleChangeCardValue}\r\n                    handleSubmit={handleAddCard}\r\n                    closeForm={() => { setOpenCardForm(false); setCardTitle('') }}\r\n                    value={cardTitle}\r\n                    titleBtn={'Dodaj Kartę'}\r\n                  // onBlur={handleBlur}\r\n                  />\r\n                </div>\r\n                : <TaskButton onClick={() => setOpenCardForm(true)} name={'Dodaj kartę'} icon={<GoPlus />} />\r\n              }\r\n            </div>\r\n          </div>\r\n        )\r\n        }\r\n      </Draggable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n\r\n","const unsplash = {\r\n  clientKey: 'TqG5JhrasvAl1tEr7Gn82XanmpWr7OhuPhqQydr_ieA',\r\n}\r\n\r\nexport default unsplash","import axios from 'axios'\r\nimport unsplash from '../../config/unsplash'\r\n\r\nconst getImages = async () => {\r\n  const page = Math.floor(Math.random() * 20 + 1)\r\n  const numberPhotos = 14\r\n  const urlImages = `https://api.unsplash.com/search/photos?page=${page}&per_page=${numberPhotos}&query=Landscape&client_id=${unsplash.clientKey}`\r\n\r\n  const res = await axios.get(urlImages)\r\n  const photos = res.data.results.map(\r\n    (image: {\r\n      id: any\r\n      urls: { thumb: any; full: any }\r\n      user: { username: any; links: { html: any } }\r\n    }) => ({\r\n      id: image.id,\r\n      thumb: image.urls.thumb,\r\n      full: image.urls.full,\r\n      user: {\r\n        username: image.user.username,\r\n        link: image.user.links.html,\r\n      },\r\n    })\r\n  )\r\n  return photos\r\n}\r\n\r\nexport default getImages\r\n","import React, { useState, useEffect } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport getImages from '../../../store/api/unsplashApi';\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\nimport { colors, defaultBackground, defaultColor } from '../localData';\r\nimport {\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\n\r\ntype SideMenuProps = {\r\n  boardId: string\r\n  closeMenu: () => void\r\n  setBackgroundUrl: (value: string) => void;\r\n}\r\n\r\nconst SideMenu: React.FC<SideMenuProps> = ({ closeMenu, setBackgroundUrl, boardId }) => {\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n  const [optionColors, setOptionsColors] = useState<boolean>(false)\r\n  const [optionImages, setOptionsImages] = useState<boolean>(false)\r\n  const [images, setImages] = useState<any>([])\r\n\r\n  const getListOfImages = async () => {\r\n    const listOfImages = await getImages()\r\n    setImages(listOfImages)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getListOfImages()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.sideMenu}>\r\n      <div className={styles.menuHeader}>\r\n        <h3>Zmień tło</h3>\r\n        <IconButton onClick={closeMenu}><BsXLg /></IconButton>\r\n      </div>\r\n      <div className={styles.options}>\r\n        <div className={styles.box}\r\n          onClick={() => {\r\n            setOptionsImages(true)\r\n            setOptionsColors(false)\r\n          }}\r\n          style={{\r\n            backgroundImage: `url(${defaultBackground})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n          }}><p>Zdjęcia</p></div>\r\n        <div className={styles.box}\r\n          onClick={() => {\r\n            setOptionsImages(false)\r\n            setOptionsColors(true)\r\n          }}\r\n          style={{\r\n            backgroundImage: `url(${defaultColor})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n          }}\r\n        ><p>Kolory</p></div>\r\n      </div>\r\n\r\n      <div className={styles.optionsContainer}>\r\n        {\r\n          optionImages ? (\r\n            images.map((photo: { id: React.Key | null | undefined; thumb: any; full: string; }) => (\r\n              <div\r\n                key={photo.id}\r\n                className={styles.box}\r\n                style={{\r\n                  backgroundImage: `url(${photo.thumb})`,\r\n                  backgroundSize: 'cover',\r\n                  backgroundRepeat: 'no-repeat',\r\n                  backgroundPosition: 'center'\r\n                }}\r\n                onClick={() => {\r\n                  setBackgroundUrl(photo.full)\r\n                  updateBoard({\r\n                    id: boardId,\r\n                    background: photo.full\r\n                  })\r\n                }}\r\n              ></div>\r\n            ))\r\n          ) : null\r\n        }\r\n        {\r\n          optionColors ? (\r\n            colors.map((color, index) => (\r\n              <div\r\n                key={index}\r\n                className={styles.box}\r\n                style={{\r\n                  backgroundColor: `${color}`,\r\n                }}\r\n                onClick={() => {\r\n                  setBackgroundUrl(color)\r\n                  updateBoard({\r\n                    id: boardId,\r\n                    background: color\r\n                  })\r\n                }}\r\n              ></div>\r\n            ))\r\n          ) : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SideMenu","import React, { useEffect, useState, useRef } from 'react'\r\n// import { isEmpty, cloneDeep } from 'lodash'\r\nimport styles from './styles.module.scss'\r\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd'\r\n// import { renderToString } from 'react-dom/server';\r\nimport {\r\n  // useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\nimport {\r\n  // useGetAllTasksQuery,\r\n  useAddTaskMutation,\r\n  // useDeleteTaskMutation,\r\n  useUpdateTaskMutation,\r\n  // useGetTaskQuery,\r\n  // useGetCardsQuery,\r\n} from \"../../../store/reducers/listsReducer\";\r\nimport {\r\n  // useGetAllCardsQuery,\r\n  // useAddCardMutation,\r\n  // useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n  // useDeleteAllMutation,\r\n} from \"../../../store/reducers/cardsReducer\";\r\n\r\nimport BoardHeader from '../BoardHeader/BoardHeader';\r\nimport List from '../List/List'\r\nimport TaskButton from '../TaskButton/TaskButton'\r\nimport TaskForm from '../TaskForm/TaskForm'\r\n// import TaskCard from '../Card/Card';\r\nimport SideMenu from '../SideMenu/SideMenu';\r\n// import CardDetails from '../CardDetails/CardDetails';\r\n// import CardModal from '../CardDetails/CardModal/CardModal';\r\n\r\nimport { defaultBackground } from '../localData';\r\n\r\n// import { setSourceMapRange } from 'typescript';\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n\r\n// import { GrAdd } from \"react-icons/gr\";\r\nimport { GoPlus } from \"react-icons/go\";\r\n// import { BsCardImage } from \"react-icons/bs\";\r\n\r\nconst Board: React.FC = () => {\r\n  const boardId = '624f02f011fa05ce01907c07'\r\n  const { data, error, isLoading } = useGetBoardQuery(boardId);\r\n\r\n  const [addList] = useAddTaskMutation()\r\n  // const [deleteList] = useDeleteTaskMutation()\r\n  const [updateList] = useUpdateTaskMutation()\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const formRef = useRef(null)\r\n  // const refCardModal = useRef(null)\r\n\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string>('')\r\n  const [listTitle, setListTitle] = useState<string>('');\r\n  const [openForm, setOpenForm] = useState<boolean>(false)\r\n  const [openSideMenu, setOpenSideMenu] = useState<boolean>(false)\r\n\r\n  const [board, setBoard] = useState({} as any)\r\n  const [lists, setLists] = useState([] as any)\r\n\r\n  const closeForm = () => { setOpenForm(false); setListTitle('') }\r\n  useOnClickOutside(formRef, closeForm)\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const newBoard = { ...data }\r\n      const boardBG = newBoard.background === '' ? defaultBackground : newBoard.background\r\n      setBoard(newBoard)\r\n      setLists(newBoard.lists)\r\n      setBackgroundUrl(boardBG)\r\n    }\r\n  }, [data]);\r\n\r\n\r\n  const handleChangeListTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'list') setListTitle(e.target.value)\r\n  }\r\n\r\n  const handleAddList = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    if (listTitle.length === 0) return\r\n    addList({\r\n      title: listTitle,\r\n      boardId: boardId,\r\n    })\r\n    updateBoard({\r\n      id: boardId,\r\n    })\r\n\r\n    setListTitle('')\r\n    setOpenForm(false)\r\n  }\r\n\r\n  // if (isEmpty(board)) return <div>no data</div>\r\n  const onDragEnd = (result: DropResult) => {\r\n    const { destination, source, type, draggableId } = result\r\n    if (!destination) return;\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n    const newLists = [...lists]\r\n\r\n    if (board) {\r\n      if (type === 'list') {\r\n\r\n        const [removed] = newLists.splice(source.index, 1)\r\n        newLists.splice(destination.index, 0, removed)\r\n\r\n        setLists(newLists)\r\n        updateBoard({\r\n          id: boardId,\r\n          lists: newLists\r\n        })\r\n      }\r\n\r\n      if (type === 'card') {\r\n        // const newLists = [...lists]\r\n        const sourceList = newLists.find((list: { _id: string; }) => list._id === source.droppableId)\r\n        const destinationList = newLists.find((list: { _id: string; }) => list._id === destination.droppableId)\r\n\r\n        if (source.droppableId === destination.droppableId) {\r\n          const newCards = [...sourceList.cards]\r\n\r\n          const [removed] = newCards.splice(source.index, 1)\r\n          newCards.splice(destination.index, 0, removed)\r\n\r\n          const updateState = {\r\n            ...sourceList,\r\n            cards: newCards\r\n          }\r\n\r\n          //replace the contents of the list\r\n          const newState = newLists.map(obj => [updateState].find(o => o._id === obj._id) || obj);\r\n\r\n          setLists(newState)\r\n          updateList({\r\n            id: source.droppableId,\r\n            cards: newCards\r\n          })\r\n\r\n        }\r\n\r\n        if (source.droppableId !== destination.droppableId) {\r\n          const startCards = [...sourceList.cards]\r\n          const finishCards = [...destinationList.cards]\r\n\r\n          const [removed] = startCards.splice(source.index, 1)\r\n          const startState = {\r\n            ...sourceList,\r\n            cards: startCards\r\n          }\r\n\r\n          finishCards.splice(destination.index, 0, removed)\r\n          const finishState = {\r\n            ...destinationList,\r\n            cards: finishCards\r\n          }\r\n\r\n          //converted to array\r\n          const newCards = [startState, finishState]\r\n\r\n          //replace the contents of the lists\r\n          const newState = newLists.map(obj => newCards.find(o => o._id === obj._id) || obj);\r\n\r\n          setLists(newState)\r\n\r\n          updateCard({\r\n            id: draggableId,\r\n            listId: destination.droppableId\r\n          })\r\n          // update source list\r\n          updateList({\r\n            id: source.droppableId,\r\n            cards: startCards\r\n          })\r\n          //update destination list\r\n          updateList({\r\n            id: destination.droppableId,\r\n            cards: finishCards\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const boardBackgroundStyle = {\r\n    backgroundColor: backgroundUrl,\r\n    backgroundImage: `url(${backgroundUrl})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  }\r\n\r\n  if (isLoading) return <h2>Loading...</h2>\r\n  if (error) return <h2>Brak połączenia</h2>\r\n\r\n  return (\r\n    <div className={styles.board}\r\n      style={boardBackgroundStyle}\r\n    >\r\n      <BoardHeader\r\n        name={'Zmień tło'}\r\n        onClick={() => setOpenSideMenu(true)}\r\n      />\r\n      {\r\n        openSideMenu ?\r\n          <SideMenu\r\n            boardId={boardId}\r\n            setBackgroundUrl={setBackgroundUrl}\r\n            closeMenu={() => setOpenSideMenu(false)}\r\n          /> : null\r\n      }\r\n      <DragDropContext onDragEnd={onDragEnd} >\r\n        <div className={styles.container}>\r\n          <Droppable droppableId=\"all-list\" direction=\"horizontal\" type=\"list\">\r\n            {provided => (\r\n              <div className={styles.listContainer}\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {\r\n                  lists?.map((list: any, index: number) => (\r\n                    <List\r\n                      index={index}\r\n                      boardId={list.boardId}\r\n                      key={list._id}\r\n                      listId={list._id}\r\n                      title={list.title}\r\n                      cards={list.cards}\r\n                    />\r\n                  ))\r\n                }\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          <div className={styles.actionsForm}>\r\n            {openForm ?\r\n              <div className={styles.formContainer} ref={formRef}>\r\n                <TaskForm\r\n                  id='list'\r\n                  handleChange={handleChangeListTitle}\r\n                  handleSubmit={handleAddList}\r\n                  closeForm={() => { setOpenForm(false); setListTitle('') }}\r\n                  value={listTitle}\r\n                  titleBtn={'Dodaj Listę'}\r\n                />\r\n              </div>\r\n              : <TaskButton onClick={() => setOpenForm(true)} name={'Dodaj listę zadań'} icon={<GoPlus style={{ margin: '.3rem 0' }} />} />\r\n            }\r\n          </div>\r\n        </div>\r\n      </DragDropContext>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board\r\n\r\n\r\n","import React from 'react'\r\nimport Board from '../../components/Tasks/Board/Board';\r\n// import SideMenu from '../../components/Tasks/SideMenu/SideMenu';\r\n// import BoardHeader from '../../components/Tasks/BoardHeader/BoardHeader';\r\nimport styles from './styles.module.scss'\r\n\r\nconst boardId = '620b88e199b7a598ce7b7187'\r\n\r\nconst TasksPage: React.FC = () => {\r\n  return (\r\n    <>\r\n      < Board />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TasksPage\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst View2: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Magayzn\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View2\r\n","import React from 'react'\r\n\r\nconst View3: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Dostawcy\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View3\r\n","import React from 'react'\r\n\r\nconst View4: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Informacje\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View4\r\n","import React from 'react'\r\n\r\nconst Calculator = () => {\r\n  return (\r\n    <div>Calculator</div>\r\n  )\r\n}\r\n\r\nexport default Calculator","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Layout from './components/Layout';\r\nimport TasksPage from './views/TasksPage/TasksPage';\r\nimport View2 from './views/View2/View2';\r\nimport View3 from './views/View3/View3';\r\nimport View4 from './views/View4/View4';\r\nimport Calculator from './views/Calculator/Calculator';\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path='/' component={TasksPage} />\r\n          <Route path='/calculator' component={Calculator} />\r\n          <Route path='/View-2' component={View2} />\r\n          <Route path='/View-3' component={View3} />\r\n          <Route path='/View-4' component={View4} />\r\n        </Switch>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\n// import counterReducer from '../reducers/reducer'\r\nimport { boardApi } from './reducers/boardsReducer'\r\nimport { listApi } from './reducers/listsReducer'\r\nimport { cardsApi } from './reducers/cardsReducer'\r\nimport { filesApi } from './reducers/filesReducer'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [boardApi.reducerPath]: boardApi.reducer,\r\n    [listApi.reducerPath]: listApi.reducer,\r\n    [cardsApi.reducerPath]: cardsApi.reducer,\r\n    [filesApi.reducerPath]: filesApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(\r\n      boardApi.middleware,\r\n      listApi.middleware,\r\n      cardsApi.middleware,\r\n      filesApi.middleware,\r\n    ),\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from './store/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles_sidebar__xK0YJ\",\"sidebarHide\":\"styles_sidebarHide__2t2M2\",\"logo\":\"styles_logo__2pM0Q\",\"navButton\":\"styles_navButton__3BNKT\",\"navButtonHide\":\"styles_navButtonHide__38XhY\",\"linksContainer\":\"styles_linksContainer__3Ym__\",\"navItem\":\"styles_navItem__TbxPM\",\"navLink\":\"styles_navLink__VPAcP\",\"icon\":\"styles_icon__rSpbJ\",\"active\":\"styles_active__20cX5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"styles_card__2Vpi0\",\"cardContainer\":\"styles_cardContainer__v6erv\",\"cardClickableArea\":\"styles_cardClickableArea__2gAoQ\",\"textarea\":\"styles_textarea__3yOuz\",\"btnContainer\":\"styles_btnContainer__1CdlS\",\"cardLabels\":\"styles_cardLabels__2XYfY\",\"cardLabel\":\"styles_cardLabel__1QOow\",\"iconsContainer\":\"styles_iconsContainer__oeQXm\",\"dateContainer\":\"styles_dateContainer__1awiA\",\"dateBtn\":\"styles_dateBtn__MHftz\",\"icons\":\"styles_icons__F6ETe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideMenu\":\"styles_sideMenu__1WL-5\",\"menuHeader\":\"styles_menuHeader__1I00P\",\"options\":\"styles_options__1opB-\",\"optionsContainer\":\"styles_optionsContainer__2BqBR\",\"description\":\"styles_description__2kWXu\",\"box\":\"styles_box__2R1CZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2JAAH\",\"listHeader\":\"styles_listHeader__358ey\",\"textWrapper\":\"styles_textWrapper__OtXvf\",\"cardsContainer\":\"styles_cardsContainer__3CxCn\",\"textarea\":\"styles_textarea__2eU67\",\"actionsList\":\"styles_actionsList__2anKf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles_board__1NKs9\",\"container\":\"styles_container__35LdP\",\"listContainer\":\"styles_listContainer__W9gYL\",\"actionsForm\":\"styles_actionsForm__3C_qJ\",\"formContainer\":\"styles_formContainer__2R8KT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__3qYD0\",\"textarea\":\"styles_textarea__8Nziw\",\"actionsForm\":\"styles_actionsForm__2V1XT\",\"reactColorful\":\"styles_reactColorful__273KT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formFile\":\"styles_formFile__Hmbm5\",\"labelFile\":\"styles_labelFile__JrJpy\",\"spanContainer\":\"styles_spanContainer__2MrkE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"conatiner\":\"styles_conatiner__3ffYI\",\"fileImg\":\"styles_fileImg__1UmmF\",\"fileDetails\":\"styles_fileDetails__3k7ks\",\"fileButtons\":\"styles_fileButtons__1a2bT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"styles_layout__3nIik\",\"container\":\"styles_container__7Bm4v\",\"pagesContainer\":\"styles_pagesContainer__BB6vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1hyU1\",\"textarea\":\"styles_textarea__2Y0rn\",\"actionsForm\":\"styles_actionsForm__4Ypdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"styles_popup__1Gn8a\",\"menuHeader\":\"styles_menuHeader__2xC_s\",\"popupContent\":\"styles_popupContent__A0vyv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskButton\":\"styles_taskButton__25h-I\",\"icon\":\"styles_icon__1Rn7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container___i14Y\",\"boxColor\":\"styles_boxColor__3vAsb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1gs2Q\",\"items\":\"styles_items__3ezeA\"};"],"sourceRoot":""}