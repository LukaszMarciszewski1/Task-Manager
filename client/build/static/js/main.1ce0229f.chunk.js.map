{"version":3,"sources":["components/Appbar/styles.module.scss","components/Details/Button/styles.module.scss","components/Tasks/BoardHeader/styles.module.scss","components/Details/IconButton/styles.module.scss","components/Details/Loading/styles.module.scss","components/Tasks/Card/CardModal/styles.module.scss","components/Tasks/localData.ts","store/api/boards.ts","components/Sidebar/Sidebar.tsx","components/Details/Button/Button.tsx","components/Appbar/Appbar.tsx","components/Layout.tsx","store/api/lists.ts","store/api/cards.ts","hooks/useOnClickOutside.ts","components/Tasks/TaskButton/TaskButton.tsx","components/Tasks/BoardHeader/BoardHeader.tsx","components/Details/IconButton/IconButton.tsx","components/Tasks/TaskForm/TaskForm.tsx","hooks/isFileImage.ts","store/api/files.ts","components/Details/Popup/Popup.tsx","components/Tasks/Card/CardModal/CardModalDetails/Label/Label.tsx","components/Tasks/Card/CardModal/CardModalDetails/Container/Container.tsx","components/Tasks/Card/CardModal/CardModalDetails/LabelForm/LabelForm.tsx","components/Tasks/Card/CardModal/CardModalDetails/FileForm/FileForm.tsx","components/Tasks/Card/CardModal/CardModalDetails/Files/Files.tsx","components/Tasks/Card/CardModal/CardModal.tsx","hooks/useEventListener.ts","hooks/useHover.ts","components/Tasks/Card/Card.tsx","components/Tasks/List/List.tsx","api/unsplashApi.ts","components/Tasks/SideMenu/SideMenu.tsx","components/Tasks/Board/Board.tsx","views/TasksPage/TasksPage.tsx","views/View2/View2.tsx","views/View3/View3.tsx","views/View4/View4.tsx","views/Calculator/Calculator.tsx","components/Details/Loading/Loading.tsx","views/Auth/Login/Login.tsx","views/Auth/Signup/Signup.tsx","App.tsx","store/store.ts","index.tsx","components/Sidebar/styles.module.scss","components/Tasks/Card/styles.module.scss","views/Auth/Signup/styles.module.scss","components/Tasks/List/styles.module.scss","views/Auth/Login/styles.module.scss","components/Tasks/SideMenu/styles.module.scss","components/Tasks/Card/CardModal/CardModalDetails/LabelForm/styles.module.scss","components/Tasks/Board/styles.module.scss","components/Tasks/Card/CardModal/CardModalDetails/Files/styles.module.scss","components/styles.module.scss","components/Tasks/Card/CardModal/CardModalDetails/FileForm/styles.module.scss","components/Tasks/TaskForm/styles.module.scss","components/Details/Popup/styles.module.scss","components/Tasks/TaskButton/styles.module.scss","components/Tasks/Card/CardModal/CardModalDetails/Label/styles.module.scss","components/Tasks/Card/CardModal/CardModalDetails/Container/styles.module.scss"],"names":["module","exports","defaultBackground","presetColors","boardApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","process","tagTypes","endpoints","builder","getAllBoards","query","providesTags","getBoard","id","createBoard","mutation","body","url","method","invalidatesTags","updateBoard","_id","patch","useGetBoardQuery","useGetAllBoardsQuery","useCreateBoardMutation","useUpdateBoardMutation","menuItems","name","path","icon","Sidebar","location","useLocation","useState","isSidebarOpen","setISSidebarOpen","className","styles","sidebar","sidebarHidden","navButton","navButtonHidden","onClick","p","logo","labels","background","linksContainer","map","item","navItem","to","navLink","pathname","active","Button","bgColor","title","type","button","style","backgroundColor","Appbar","navigate","useNavigate","container","localStorage","removeItem","Layout","children","layout","appbar","content","pagesContainer","listsApi","getAllLists","getList","addList","updateList","deleteList","deleteAllCardsOfList","useAddListMutation","useGetAllListsQuery","useGetListQuery","useUpdateListMutation","useDeleteListMutation","useDeleteAllCardsOfListMutation","cardsApi","getAllCards","getCard","addCard","updateCard","deleteCard","useGetAllCardsQuery","useAddCardMutation","useGetCardQuery","useDeleteCardMutation","useUpdateCardMutation","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","TaskButton","height","margin","taskButton","BoardHeader","width","IconButton","props","iconButton","TaskForm","value","titleBtn","onBlur","onFocus","handleChange","handleSubmit","closeForm","placeholder","form","maxRows","textarea","autoFocus","onChange","onKeyDown","e","key","code","stopPropagation","required","actionsForm","marginRight","isFileImage","match","filesApi","getAllFiles","getFile","uploadFile","deleteFile","useDeleteFileMutation","useGetAllFilesQuery","useGetFileQuery","useUploadFileMutation","Popup","trigger","isEditWindow","closePopup","backToMainWindow","refPopup","useRef","popup","header","popupContent","Label","color","cardLabels","handleCheckedLabel","openLabelEditWindow","labelId","activeLabels","filter","label","boxColor","length","Container","data","isDataExist","Array","isArray","undefined","items","LabelForm","handleChangeTitle","handleChangeLabelTitle","handleDeleteLabel","formId","setSelectColor","selectColor","marginBottom","picker","reactColorful","pickerSwatches","slice","presetColor","pickerSwatch","FileForm","listNames","handleInputState","handleSubmitFiles","formFile","labelFile","multiple","hidden","spanContainer","index","nameFileSpan","Files","created","src","handleDeleteFile","handleDownloadFile","handleSelectCover","fileExtension","split","pop","fileImg","alt","selectCover","checked","fileDetails","fileButtons","CardModal","boardId","description","completed","deadline","cover","files","nameList","dateIsSameOrBefore","deadlineIsSoon","cardDateDisplay","cardFileIndex","setCardCompleted","setIsCardWindowOpen","setCardCover","setCardFileIndex","dayjs","locale","registerLocale","pl","board","cards","cardTitle","setCardTitle","cardDescription","setCardDescription","setCardLabels","cardDeadline","setCardDeadline","boardLabels","setBoardLabels","labelTitle","setLabelTitle","isDescriptionFormOpen","setIsDescriptionFormOpen","isLabelEditPopupOpen","setIsLabelEditPopupOpen","isAddNewLabelPopupOpen","setIsAddNewLabelPopupOpen","currentLabelTitle","setCurrentLabelTitle","currentLabelId","setCurrentLabelId","currentLabelColor","setCurrentLabelColor","labelsTrigger","setLabelsTrigger","dateTrigger","setDateTrigger","fileTrigger","setFileTrigger","valuationTrigger","setValuationTrigger","storageTrigger","setStorageTrigger","selectedFiles","setSelectedFiles","selectedNameFiles","setSelectedNameFiles","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","refModal","handleUploadFiles","useCallback","from","arr","i","push","a","preventDefault","formData","FormData","append","uploadFileOptions","headers","onUploadProgress","progressEvent","loaded","total","percent","Math","floor","axios","post","then","res","setTimeout","catch","error","console","log","modal","cardModal","cardModalCover","newWindow","window","open","opener","closeModalBtn","cardModalContainer","cardModalHeader","cardModalHeaderTextarea","cardModalTextareaTitle","select","rows","cardModalContent","cardModalMainContent","cardModalLabel","cardModalSelectedDateBtn","format","dateNotificationSpan","cardModalDescriptionContainer","cardModalDescriptionHeader","maxWidth","marginLeft","filesContainer","file","fileName","createdAt","fileUrl","fileType","fileId","get","responseType","filename","replace","fileDownload","cardModalSidebar","cardModalLabels","newLabels","newLabelsBoardState","card","newBoardLabelsState","newCardLabelsState","cardModalLabelsList","activeLabel","activeLabelTitle","toString","activeLabelColor","handleGetCurrentEditLabel","newCardLabels","newLabel","existLabel","find","newStateLabels","dateFormat","timeFormat","selected","Date","date","inline","showTimeInput","timeInputLabel","size","strokeWidth","strokeColor","divider","useIsomorphicLayoutEffect","useLayoutEffect","useEventListener","eventName","element","savedHandler","targetElement","eventListener","useHover","elementRef","setValue","Card","setIsDragDisabled","isCardModalOpen","setIsCardModalOpen","isDisplayEditIcon","setIsDisplayEditIcon","cardCompleted","now","nowDate","setNowDate","cardCover","cardFiles","setCardFiles","extend","isSameOrBefore","duration","relativeTime","intervalIsSameOrBefore","setInterval","clearInterval","displayCover","newFiles","filesOnlyImages","selectedCover","activeIndex","indexOf","indexOnlyImages","findIndex","handleMouseEnter","handleMouseLeave","handleOpenCardModal","handleChangeCompleted","timeToDeadline","diff","fromNow","iconStyle","fontSize","hoverRef","isHover","draggableId","provided","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","cardContainer","cardClickableArea","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","cardDetails","cardLabel","iconsContainer","dateBtn","icons","btnContainer","List","listTitle","setListTitle","isCardFormOpen","setIsCardFormOpen","isTitleFormOpen","setIsTitleFormOpen","isDragDisabled","popupTrigger","setPopupTrigger","handleChangeListTitle","handleAddCardTitle","handleOnKeyDownListTitle","handleAddCard","listId","handleDeleteAllCardsOfList","handleDeleteList","handleSortCardsByDate","sortedCards","newCards","sort","b","String","list","listHeader","textareaWrapper","droppableId","droppableProps","cardsContainer","addCardForm","getImages","page","random","urlImages","photos","results","image","thumb","urls","full","user","username","link","links","html","SideMenu","handleCloseMenu","setBackgroundUrl","optionColors","setOptionsColors","optionImages","setOptionsImages","images","setImages","getListOfImages","listImages","sideMenu","menuHeader","menuOptions","itemBox","optionsContainer","photo","Board","useParams","isLoading","backgroundUrl","isOpenForm","setIsOpenForm","isOpenSideMenu","setIsOpenSideMenu","setBoard","lists","setLists","formRef","boardBG","boardBackgroundStyle","onDragEnd","result","destination","source","newLists","splice","removed","sourceList","destinationList","updateState","newState","obj","o","startCards","finishCards","startState","direction","listContainer","formContainer","addListForm","TasksPage","View2","View3","View4","Calculator","Loading","loadingContainer","Login","email","password","setEmail","setPassword","setError","loading","setLoading","config","setItem","JSON","stringify","href","login_container","login_form_container","left","form_container","onSubmit","input","error_msg","green_btn","right","white_btn","Signup","setName","confirmPassword","setConfirmPassword","message","response","status","signup_container","signup_form_container","App","getItem","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1ce0229f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2iRdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__1Radr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2SZpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"styles_iconButton__7QADk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingContainer\":\"styles_loadingContainer__1_DHo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal__PaFSK\",\"cardModal\":\"styles_cardModal__1hBiL\",\"cardModalContainer\":\"styles_cardModalContainer__2Q2Ad\",\"cardModalHeader\":\"styles_cardModalHeader__3M-Vq\",\"cardModalHeaderTextarea\":\"styles_cardModalHeaderTextarea__zDm5h\",\"cardModalTextareaTitle\":\"styles_cardModalTextareaTitle__1ffID\",\"cardModalContent\":\"styles_cardModalContent__6p4AF\",\"cardModalMainContent\":\"styles_cardModalMainContent__31ywS\",\"cardModalDescriptionContainer\":\"styles_cardModalDescriptionContainer__3tssZ\",\"cardModalDescriptionHeader\":\"styles_cardModalDescriptionHeader__1UO1F\",\"actionsForm\":\"styles_actionsForm__17ri-\",\"cardModalSidebar\":\"styles_cardModalSidebar__3k_db\",\"divider\":\"styles_divider__b0TFE\",\"cardModalLabels\":\"styles_cardModalLabels__2oIDU\",\"cardModalLabelsList\":\"styles_cardModalLabelsList__BY2o7\",\"cardModalLabel\":\"styles_cardModalLabel__3uh4c\",\"dateNotificationSpan\":\"styles_dateNotificationSpan__3oLBx\",\"cardModalSelectedDateBtn\":\"styles_cardModalSelectedDateBtn__36P1C\",\"filesContainer\":\"styles_filesContainer__1X4Tk\",\"cardModalCover\":\"styles_cardModalCover__29Bx9\",\"closeModalBtn\":\"styles_closeModalBtn__251_w\"};","export const defaultBackground = \"https://images.unsplash.com/photo-1501785888041-af3ef285b470?crop=entropy&cs=srgb&fm=jpg&ixid=MnwzMDMxMTR8MHwxfHNlYXJjaHw2fHxM\";\r\nexport const defaultColor = \"https://images.pexels.com/photos/226589/pexels-photo-226589.jpeg?cs=srgb&dl=closeup-photo-of-multi-color-stick-226589.jpg&fm=jpg\"\r\nexport const presetColors = [\r\n  '#FB8B24',\r\n  '#9575cd',\r\n  '#F36935',\r\n  '#EA4746',\r\n  '#AE0366',\r\n  '#53416B',\r\n  '#ba68c8',\r\n  '#2F8278',\r\n  '#C5D86D',\r\n  '#30B68E',\r\n  '#A2D2FF',\r\n  '#FFDAB9',\r\n  '#3f3c3c',\r\n  '#e1e1e1',\r\n];\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { Board } from '../../models/board'\r\n\r\ntype BoardResponse = Board[]\r\n\r\nexport const boardApi = createApi({\r\n  reducerPath: 'boardApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_API_URL }),\r\n  tagTypes: ['Board'],\r\n  endpoints: (builder) => ({\r\n    getAllBoards: builder.query<BoardResponse, void>({\r\n      query: () => `boards`,\r\n      providesTags: ['Board'],\r\n    }),\r\n    getBoard: builder.query<Board, string>({\r\n      query: (id) => `boards/${id}`,\r\n      providesTags: ['Board'],\r\n    }),\r\n    createBoard: builder.mutation<Board, Partial<Board>>({\r\n      query: (body: {}) => ({\r\n        url: 'boards',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Board'],\r\n    }),\r\n    updateBoard: builder.mutation<Board, Partial<Board>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `boards/${_id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Board'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useCreateBoardMutation,\r\n  useUpdateBoardMutation,\r\n} = boardApi\r\n","import React, { useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport styles from './styles.module.scss'\r\n\r\nimport { MdArrowForwardIos } from \"react-icons/md\";\r\nimport { CgCalculator } from \"react-icons/cg\";\r\nimport { GiDeliveryDrone } from \"react-icons/gi\";\r\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\r\nimport { IoLogoJavascript } from \"react-icons/io\";\r\nimport { CgComponents } from \"react-icons/cg\";\r\nimport { GrTask } from \"react-icons/gr\";\r\n\r\nimport { defaultBackground } from '../../components/Tasks/localData'\r\n\r\nimport { useCreateBoardMutation } from '../../store/api/boards'\r\n\r\nconst menuItems = [\r\n  {\r\n    name: 'Zadania',\r\n    path: '/',\r\n    icon: <GrTask />\r\n  },\r\n  {\r\n    name: 'Kalkulator',\r\n    path: '/calculator',\r\n    icon: <CgCalculator />\r\n  },\r\n  {\r\n    name: 'Materiały',\r\n    path: '/View-2',\r\n    icon: <CgComponents />\r\n  },\r\n  {\r\n    name: 'Dostawcy',\r\n    path: '/View-3',\r\n    icon: <GiDeliveryDrone />\r\n  },\r\n  {\r\n    name: 'Informacje',\r\n    path: '/View-4',\r\n    icon: <AiOutlineInfoCircle />\r\n  },\r\n]\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const [createBoard] = useCreateBoardMutation()\r\n  const location = useLocation()\r\n  const [isSidebarOpen, setISSidebarOpen] = useState(true)\r\n\r\n  return (\r\n    <nav className={`${styles.sidebar} ${isSidebarOpen ? styles.sidebarHidden : styles.sidebar}`}>\r\n      <button\r\n        className={`${styles.navButton} ${isSidebarOpen ? styles.navButton : styles.navButtonHidden}`}\r\n        onClick={() => setISSidebarOpen((p) => !p)}>\r\n        <MdArrowForwardIos />\r\n      </button>\r\n      <div className={styles.logo} onClick={() => createBoard({\r\n        labels: [],\r\n        background: defaultBackground\r\n      })}><IoLogoJavascript /></div>\r\n      <ul className={styles.linksContainer}>\r\n        {menuItems.map((item) => (\r\n          <li key={item.name}\r\n            className={styles.navItem}\r\n          >\r\n            <Link\r\n              to={item.path}\r\n            >\r\n              <div className={`${styles.navLink} ${location.pathname === item.path ? styles.active : styles.navLink}`}>\r\n                <div className={styles.icon}>{item.icon}</div>\r\n                <p>{!isSidebarOpen ? item.name : null}</p>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface ButtonProps {\r\n  onClick?: (e: any) => void\r\n  title?: string\r\n  bgColor?: string\r\n  type: \"button\" | \"submit\" | \"reset\" | undefined\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ onClick, bgColor, title, type }) => (\r\n  <button\r\n    className={styles.button}\r\n    onClick={onClick}\r\n    type={type}\r\n    style={{ backgroundColor: `${bgColor}` }}>\r\n    {title}\r\n  </button>\r\n)\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport Button from '../Details/Button/Button'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\n\r\nconst Appbar: React.FC = () => {\r\n  let navigate = useNavigate()\r\n  return (\r\n    <div className={styles.container}>\r\n      <Button\r\n        title={'Wyloguj'}\r\n        onClick={() => {\r\n          localStorage.removeItem('token')\r\n          navigate('/login')\r\n        }}\r\n        type={'button'} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport Sidebar from './Sidebar/Sidebar'\r\nimport Appbar from './Appbar/Appbar'\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nconst Layout: React.FC = ({ children }) => {\r\n  return (\r\n    <div className={styles.layout}>\r\n      <div className={styles.appbar}>\r\n        <Appbar />\r\n      </div>\r\n      <div className={styles.content}>\r\n        <Sidebar />\r\n        <div className={styles.pagesContainer}>\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { List } from '../../models/list'\r\n\r\ntype ListResponse = List[]\r\n\r\nexport const listsApi = createApi({\r\n  reducerPath: 'listApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_API_URL }),\r\n  tagTypes: ['List'],\r\n  endpoints: (builder) => ({\r\n    getAllLists: builder.query<ListResponse, void>({\r\n      query: () => `lists`,\r\n      providesTags: ['List'],\r\n    }),\r\n    getList: builder.query<List, string>({\r\n      query: (id) => `lists/${id}`,\r\n      providesTags: ['List'],\r\n    }),\r\n    addList: builder.mutation<List, Partial<List>>({\r\n      query: (body: {}) => ({\r\n        url: 'lists',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    updateList: builder.mutation<List, Partial<List>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `lists/${_id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    deleteList: builder.mutation<{ success: boolean; id: string | number }, string>({\r\n      query: (id) => ({\r\n        url: `lists/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    deleteAllCardsOfList: builder.mutation<List, Partial<List>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `lists/${_id}/cards`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllListsQuery,\r\n  useGetListQuery,\r\n  useAddListMutation,\r\n  useUpdateListMutation,\r\n  useDeleteListMutation,\r\n  useDeleteAllCardsOfListMutation,\r\n} = listsApi\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { Card } from '../../models/card'\r\n\r\ntype CardsResponse = Card[]\r\n\r\nexport const cardsApi = createApi({\r\n  reducerPath: 'cardsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_API_URL }),\r\n  tagTypes: ['Cards'],\r\n  endpoints: (builder) => ({\r\n    getAllCards: builder.query<CardsResponse, void>({\r\n      query: () => `cards`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    getCard: builder.query<Card, string>({\r\n      query: (id) => `cards/${id}`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    addCard: builder.mutation<Card, Partial<Card>>({\r\n      query: (body: {}) => ({\r\n        url: 'cards',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    updateCard: builder.mutation<Card, Partial<Card>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `cards/${_id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    deleteCard: builder.mutation<{ success: boolean; id: string }, string>({\r\n      query: (id) => ({\r\n        url: `cards/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllCardsQuery,\r\n  useGetCardQuery,\r\n  useAddCardMutation,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n} = cardsApi\r\n","import { RefObject, useEffect } from 'react'\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent\r\n\r\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void,\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return\r\n      }\r\n\r\n      handler(event)\r\n    }\r\n\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler])\r\n}\r\n\r\nexport default useOnClickOutside","import React from 'react'\r\nimport styles from './styles.module.scss'\r\ninterface TaskButtonProps {\r\n  icon?: {}\r\n  height?: string\r\n  margin?: string\r\n  name: string\r\n  onClick: () => void\r\n}\r\n\r\nconst TaskButton: React.FC<TaskButtonProps> = ({ onClick, name, icon, height, margin }) => {\r\n  return (\r\n    <button style={{height: height, margin: margin}} className={styles.taskButton} onClick={onClick}>\r\n      <div className={styles.icon}>{icon}</div>\r\n      {name}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default TaskButton\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport TaskButton from '../TaskButton/TaskButton'\r\nimport { BsImage } from \"react-icons/bs\";\r\n\r\ntype BoardHeaderProps = {\r\n  name: string\r\n  onClick: () => void\r\n}\r\n\r\nconst BoardHeader: React.FC<BoardHeaderProps> = ({ name, onClick }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div style={{ width: '130px' }}>\r\n        <TaskButton onClick={onClick} name={name} icon={<BsImage />} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardHeader","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface IconButtonProps {\r\n  onClick?: () => void;\r\n  icon?: any,\r\n  title?: string,\r\n  padding?: string\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = (props) => (\r\n  <button\r\n    className={styles.iconButton}\r\n    onClick={props.onClick}\r\n    type='button'\r\n  >\r\n    {props.children}\r\n  </button>\r\n)\r\n\r\nexport default IconButton\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport Button from '../../Details/Button/Button'\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\n\r\ninterface TaskFormProps {\r\n  id: string\r\n  handleSubmit: (value: any) => void\r\n  handleChange: (value: any) => void\r\n  closeForm: () => void\r\n  onFocus?: (value: any) => void\r\n  onBlur?: () => void\r\n  value: string\r\n  titleBtn: string\r\n}\r\n\r\nconst TaskForm: React.FC<TaskFormProps> = ({ value, id, titleBtn, onBlur, onFocus, handleChange, handleSubmit, closeForm }) => {\r\n  const placeholder = id === 'list' ? 'Dodaj listę zadań' : 'Dodaj nową kartę'\r\n\r\n  const onKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    if (e.key === 'Enter' || e.code === \"NumpadEnter\") {\r\n      e.stopPropagation();\r\n      handleSubmit(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={styles.form} >\r\n      <TextareaAutosize\r\n        id={id}\r\n        maxRows={20}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={styles.textarea}\r\n        autoFocus={true}\r\n        onChange={handleChange}\r\n        onBlur={onBlur}\r\n        onFocus={onFocus}\r\n        onKeyDown={onKeyDown}\r\n        required\r\n      />\r\n      <div className={styles.actionsForm}>\r\n        <Button title={titleBtn} type={'submit'} onClick={handleSubmit} />\r\n        <div style={{ marginRight: '16px' }} />\r\n        <IconButton onClick={closeForm}><BsXLg /></IconButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm\r\n","export const isFileImage = (url: string) => {\r\n  if (typeof url !== 'string') {\r\n    return false;\r\n  }\r\n  return (url.match(/^http[^\\?]*.(jpg|jpeg|gif|png|tiff|bmp|webp)(\\?(.*))?$/gmi) !== null);\r\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { File } from '../../models/file'\r\n\r\ntype FilesResponse = File[]\r\n\r\nexport const filesApi = createApi({\r\n  reducerPath: 'filesApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_API_URL }),\r\n  tagTypes: ['Files'],\r\n  endpoints: (builder) => ({\r\n    getAllFiles: builder.query<FilesResponse, void>({\r\n      query: () => `files`,\r\n      providesTags: ['Files'],\r\n    }),\r\n    getFile: builder.query<File, string>({\r\n      query: (id) => `files/${id}`,\r\n      providesTags: ['Files'],\r\n    }),\r\n    uploadFile: builder.mutation<FilesResponse, Partial<File>>({\r\n      query: (body: {}) => ({\r\n        url: `files`,\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Files'],\r\n    }),\r\n    deleteFile: builder.mutation<\r\n      { success: boolean; id: string | number },\r\n      string\r\n    >({\r\n      query: (id) => ({\r\n        url: `files/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Files'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllFilesQuery,\r\n  useGetFileQuery,\r\n  useUploadFileMutation,\r\n  useDeleteFileMutation,\r\n} = filesApi\r\n","import React, { useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport IconButton from '../IconButton/IconButton'\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport { MdOutlineArrowBackIos } from \"react-icons/md\";\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside'\r\n\r\ntype Props = {\r\n  trigger?: boolean\r\n  title: string\r\n  isEditWindow?: boolean\r\n  closePopup: () => void\r\n  backToMainWindow?: () => void\r\n}\r\nconst Popup: React.FC<Props> = ({ children, trigger, title, isEditWindow, closePopup, backToMainWindow }) => {\r\n  const refPopup = useRef(null)\r\n  useOnClickOutside(refPopup, closePopup)\r\n  \r\n  return (\r\n    trigger ? (\r\n      <div className={styles.popup} ref={refPopup}>\r\n        <div className={styles.header}>\r\n          {isEditWindow ? <IconButton onClick={backToMainWindow}><MdOutlineArrowBackIos /></IconButton> : null}\r\n          <h3>{title}</h3>\r\n          <IconButton onClick={closePopup}><BsXLg /></IconButton>\r\n        </div>\r\n        <div className={styles.popupContent}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    ) : null\r\n  )\r\n}\r\n\r\nexport default Popup","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { BiCheck } from 'react-icons/bi';\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport IconButton from '../../../../../Details/IconButton/IconButton'\r\n\r\ninterface LabelProps {\r\n  labelId: string\r\n  title: string\r\n  color: string\r\n  cardLabels: {\r\n    _id: string\r\n    active: boolean\r\n    color: string\r\n    title: string\r\n  }[]\r\n  handleCheckedLabel: (value: any) => void\r\n  openLabelEditWindow: () => void\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({ title, color, cardLabels, handleCheckedLabel, openLabelEditWindow, labelId }) => {\r\n  const activeLabels = cardLabels.filter((label: { _id: string }) => label._id === labelId)\r\n  return (\r\n    <div className={styles.container}>\r\n      <div onClick={handleCheckedLabel} style={{ background: `${color}` }} className={styles.boxColor}>\r\n        <p>{title}</p>\r\n        {activeLabels.length ? < BiCheck style={{ color: 'white' }} /> : null}\r\n      </div>\r\n      <IconButton onClick={openLabelEditWindow}><BsPencil /></IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Label","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ntype Props = {\r\n  data: any\r\n  children: JSX.Element | JSX.Element[];\r\n  title: string\r\n}\r\n\r\nconst Container: React.FC<Props> = ({ children, title, data }) => {\r\n  const isDataExist = Array.isArray(data) ? (data.length ? true : false) : (data === null || data === undefined ? false : true)\r\n  return (\r\n    <>\r\n      {\r\n        isDataExist ? (\r\n          <div className={styles.container}>\r\n            <h4>{title}</h4>\r\n            <div className={styles.items}>\r\n              {children}\r\n            </div>\r\n          </div>\r\n        ) : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Container","import React from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\nimport Button from '../../../../../Details/Button/Button'\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport { presetColors } from '../../../../localData'\r\ninterface LabelProps {\r\n  formId: string\r\n  value: string | undefined\r\n  selectColor: string\r\n  handleChangeLabelTitle: (value: any) => void\r\n  handleChangeTitle: (value: any) => void\r\n  onFocus?: (value: any) => void\r\n  handleDeleteLabel: () => void\r\n  setSelectColor: (value: string) => void\r\n}\r\n\r\nconst LabelForm: React.FC<LabelProps> = ({\r\n  handleChangeTitle,\r\n  handleChangeLabelTitle,\r\n  handleDeleteLabel,\r\n  value,\r\n  formId,\r\n  onFocus,\r\n  setSelectColor,\r\n  selectColor }) => {\r\n  const placeholder = 'Dodaj nazwę etykiety...'\r\n\r\n  return (\r\n    <form className={styles.form}>\r\n      <p style={{ marginBottom: '5px' }}>Nazwa</p>\r\n      <TextareaAutosize\r\n        id={formId}\r\n        maxRows={20}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={styles.textarea}\r\n        autoFocus\r\n        onChange={handleChangeTitle}\r\n        onFocus={onFocus}\r\n      />\r\n      <p style={{ marginBottom: '5px' }}>Wybierz kolor</p>\r\n      <div className={styles.picker}>\r\n        <HexColorPicker\r\n          className={styles.reactColorful}\r\n          color={selectColor}\r\n          onChange={setSelectColor}\r\n        />\r\n        <div className={styles.pickerSwatches}>\r\n          {presetColors.slice(0, 14).map((presetColor) => (\r\n            <div\r\n              key={presetColor}\r\n              className={styles.pickerSwatch}\r\n              style={{ background: presetColor }}\r\n              onClick={() => setSelectColor(presetColor)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className={styles.actionsForm}>\r\n        <Button onClick={handleChangeLabelTitle} title={'Zapisz'} type={'submit'} />\r\n        <div style={{ marginRight: '1rem' }} />\r\n        <Button onClick={handleDeleteLabel} title={'Usuń'} bgColor={'#EA4746'} type={'button'} />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LabelForm","import React from 'react'\r\nimport { Line } from 'rc-progress';\r\nimport styles from './styles.module.scss'\r\nimport Button from '../../../../../Details/Button/Button'\r\ninterface FileFormProps {\r\n  name: string\r\n  size: number\r\n  label: string\r\n  type: string\r\n  listNames: string[]\r\n  handleSubmitFiles: (value: any) => void\r\n  handleInputState: (value: any) => void\r\n}\r\n\r\nconst FileForm: React.FC<FileFormProps> = ({ name, listNames, type, handleInputState, handleSubmitFiles }) => {\r\n\r\n  return (\r\n    <div >\r\n      <form className={styles.formFile}>\r\n        <label id={\"formId\"} className={styles.labelFile}>\r\n          <input\r\n            id={\"formId\"}\r\n            type={type}\r\n            name={name}\r\n            onChange={handleInputState}\r\n            multiple\r\n            hidden\r\n          />\r\n          Dodaj załączniki\r\n        </label>\r\n        <div className={styles.spanContainer}>\r\n          {\r\n            listNames.map((name, index) => (\r\n              <span key={index} className={styles.nameFileSpan}>{name}</span>\r\n            ))\r\n          }\r\n        </div>\r\n        {\r\n          listNames.length ? (\r\n            <Button onClick={handleSubmitFiles} title={\"Załącz\"} type={'submit'} />\r\n          ) : null\r\n        }\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileForm","import React  from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { isFileImage } from '../../../../../../hooks/isFileImage'\r\nimport TaskButton from '../../../../TaskButton/TaskButton'\r\ninterface FileProps {\r\n  title: string\r\n  src: string\r\n  created: string\r\n  index: number\r\n  active: number\r\n  type: string\r\n  handleDeleteFile: () => void\r\n  handleDownloadFile: () => void\r\n  handleSelectCover: () => void\r\n}\r\n\r\nconst Files: React.FC<FileProps> = ({ created, title, src, type, index, active, handleDeleteFile, handleDownloadFile, handleSelectCover }) => {\r\nconst fileExtension = type.split('/').pop();\r\n\r\n  return (\r\n    <div className={styles.container} >\r\n      <div className={styles.fileImg}>\r\n        {\r\n          isFileImage(src) ? (\r\n            <>\r\n              <img src={src} className=\"card-img-top img-responsive\" alt=\"img\" />\r\n              <div className={styles.selectCover} title='ustaw okładkę'>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={active === index ? true : false}\r\n                  onChange={handleSelectCover}\r\n                  style={{ height: '100%', width: '1rem', marginRight: '8px' }} />\r\n              </div>\r\n            </>\r\n          ) : (<p>{fileExtension}</p>)\r\n        }\r\n      </div>\r\n      <div className={styles.fileDetails}>\r\n        <h4>{title}</h4>\r\n        <span>{created}</span>\r\n        <div className={styles.fileButtons}>\r\n          <TaskButton height={'25px'} margin={'0 8px 0 0'} onClick={handleDeleteFile} name={'Skasuj'} />\r\n          <TaskButton height={'25px'} margin={'0'} onClick={handleDownloadFile} name={'Pobierz'} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Files","import React, { useState, useRef, useEffect, useCallback } from 'react'\r\nimport axios from 'axios';\r\nimport styles from './styles.module.scss'\r\nimport dayjs from 'dayjs';\r\nimport fileDownload from 'js-file-download'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport TaskForm from '../../TaskForm/TaskForm'\r\nimport IconButton from '../../../Details/IconButton/IconButton';\r\nimport useOnClickOutside from '../../../../hooks/useOnClickOutside'\r\nimport { isFileImage } from '../../../../hooks/isFileImage'\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { BsXLg } from 'react-icons/bs';\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport { BiTask } from 'react-icons/bi';\r\nimport { GrAttachment } from 'react-icons/gr';\r\nimport { BsStopwatch } from 'react-icons/bs';\r\nimport { MdOutlineLabel } from 'react-icons/md';\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { RiDeleteBinLine } from 'react-icons/ri';\r\n\r\nimport {\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../../store/api/boards'\r\n\r\nimport {\r\n  useGetAllCardsQuery,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n} from \"../../../../store/api/cards\";\r\n\r\nimport {\r\n  useDeleteFileMutation,\r\n} from '../../../../store/api/files'\r\n\r\nimport TaskButton from '../../TaskButton/TaskButton';\r\nimport Popup from '../../../Details/Popup/Popup';\r\nimport Label from './CardModalDetails/Label/Label';\r\nimport Container from './CardModalDetails/Container/Container'\r\nimport LabelForm from './CardModalDetails/LabelForm/LabelForm'\r\nimport Button from '../../../Details/Button/Button';\r\nimport FileForm from './CardModalDetails/FileForm/FileForm'\r\nimport Files from './CardModalDetails/Files/Files';\r\n\r\nimport { Line as ProgressLine } from 'rc-progress';\r\nimport { Card as CardModel } from '../../../../models/card'\r\nimport { Labels as LabelsInterface } from '../../../../models/labels'\r\nimport pl from \"date-fns/locale/pl\";\r\n\r\n\r\ninterface CardModalProps extends CardModel {\r\n  dateIsSameOrBefore: boolean\r\n  deadlineIsSoon: boolean\r\n  cardFileIndex: number\r\n  cardDateDisplay: {\r\n    style: {\r\n      backgroundColor: string\r\n    },\r\n    title: string\r\n    name: string\r\n  }\r\n  setIsCardWindowOpen: () => void\r\n  setCardCompleted: (value: boolean) => void\r\n  setCardCover: (value: string) => void\r\n  setCardFileIndex: (value: number) => void\r\n}\r\n\r\nconst CardModal: React.FC<CardModalProps> = ({\r\n  _id,\r\n  boardId,\r\n  title,\r\n  description,\r\n  completed,\r\n  labels,\r\n  deadline,\r\n  cover,\r\n  files,\r\n  nameList,\r\n  dateIsSameOrBefore,\r\n  deadlineIsSoon,\r\n  cardDateDisplay,\r\n  cardFileIndex,\r\n  setCardCompleted,\r\n  setIsCardWindowOpen,\r\n  setCardCover,\r\n  setCardFileIndex,\r\n}) => {\r\n  dayjs.locale('pl');\r\n  registerLocale(\"pl\", pl);\r\n  const { data: board } = useGetBoardQuery(boardId);\r\n  const { data: cards } = useGetAllCardsQuery()\r\n\r\n  const [updateCard] = useUpdateCardMutation();\r\n  const [deleteCard] = useDeleteCardMutation();\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n  const [deleteFile] = useDeleteFileMutation();\r\n\r\n  const [cardTitle, setCardTitle] = useState<string>(title)\r\n  const [cardDescription, setCardDescription] = useState<string>(description)\r\n  const [cardLabels, setCardLabels] = useState<LabelsInterface[]>(labels)\r\n  const [cardDeadline, setCardDeadline] = useState(deadline)\r\n  const [boardLabels, setBoardLabels] = useState<any>([])\r\n  const [labelTitle, setLabelTitle] = useState('')\r\n  const [isDescriptionFormOpen, setIsDescriptionFormOpen] = useState(false)\r\n  const [isLabelEditPopupOpen, setIsLabelEditPopupOpen] = useState(false)\r\n  const [isAddNewLabelPopupOpen, setIsAddNewLabelPopupOpen] = useState(false)\r\n  const [currentLabelTitle, setCurrentLabelTitle] = useState('')\r\n  const [currentLabelId, setCurrentLabelId] = useState('')\r\n  const [currentLabelColor, setCurrentLabelColor] = useState('')\r\n  const [labelsTrigger, setLabelsTrigger] = useState(false)\r\n  const [dateTrigger, setDateTrigger] = useState(false)\r\n  const [fileTrigger, setFileTrigger] = useState(false)\r\n  const [valuationTrigger, setValuationTrigger] = useState(false)\r\n  const [storageTrigger, setStorageTrigger] = useState(false)\r\n\r\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\r\n  const [selectedNameFiles, setSelectedNameFiles] = useState<string[]>([]);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState<boolean | null>(null)\r\n\r\n  const refModal = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if (board) {\r\n      setBoardLabels(board.labels)\r\n    }\r\n  }, [board])\r\n\r\n  const handleEditCardTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card-title') setCardTitle(e.target.value)\r\n    updateCard({\r\n      _id: _id,\r\n      title: e.target.value\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n  }\r\n\r\n  const handleEditCardDescription = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card-description')\r\n      setCardDescription(e.target.value)\r\n  }\r\n\r\n  const handleSaveCardDescription = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      _id: _id,\r\n      description: cardDescription\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n    setIsDescriptionFormOpen(false)\r\n  }\r\n\r\n  const handleChangeLabelTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'label-title-edit') setCurrentLabelTitle(e.target.value)\r\n    if (e.target.id === 'label-title-add') setLabelTitle(e.target.value)\r\n  }\r\n\r\n  const handleSaveLabelEditing = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    const newLabels = [...boardLabels]\r\n\r\n    if (boardLabels) {\r\n      const newLabelsBoardState = newLabels.map((label) => {\r\n        if (label._id !== currentLabelId) return label;\r\n        return { ...label, title: currentLabelTitle, color: currentLabelColor };\r\n      });\r\n\r\n      cards?.map(card => {\r\n        const newLabels = card.labels.map(label => {\r\n          if (label._id !== currentLabelId) return label;\r\n          return { ...label, title: currentLabelTitle, color: currentLabelColor };\r\n        })\r\n        updateCard({\r\n          _id: card._id,\r\n          labels: newLabels\r\n        })\r\n        setCardLabels(newLabels)\r\n      })\r\n\r\n      setBoardLabels(newLabelsBoardState)\r\n\r\n      updateBoard({\r\n        _id: boardId,\r\n        labels: newLabelsBoardState\r\n      })\r\n      setIsLabelEditPopupOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleAddNewLabel = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    const newLabels = [...boardLabels, { color: currentLabelColor, title: labelTitle, active: false }]\r\n    updateBoard({\r\n      _id: boardId,\r\n      labels: newLabels\r\n    })\r\n    setIsAddNewLabelPopupOpen(false)\r\n  }\r\n\r\n  const handleCheckedLabel = (item: LabelsInterface) => {\r\n    const newCardLabels = [...cardLabels]\r\n    const newLabel = { ...item, active: !item.active };\r\n    const existLabel = newCardLabels.find((label: { _id: string; }) => label._id === newLabel._id)\r\n\r\n    if (existLabel) {\r\n      const newStateLabels = [...cardLabels].filter((label: { _id: string; }) => label._id !== existLabel._id)\r\n      setCardLabels(newStateLabels)\r\n      updateCard({\r\n        _id: _id,\r\n        labels: newStateLabels\r\n      })\r\n    } else {\r\n      const newStateLabels = [...cardLabels, newLabel]\r\n      setCardLabels(newStateLabels)\r\n      updateCard({\r\n        _id: _id,\r\n        labels: newStateLabels\r\n      })\r\n    }\r\n    updateBoard({\r\n      _id: boardId,\r\n    })\r\n  }\r\n\r\n  const handleDeleteLabel = () => {\r\n    const newBoardLabelsState = [...boardLabels].filter((label) => label._id !== currentLabelId);\r\n    cards?.map(card => {\r\n      const newCardLabelsState = card.labels.filter((label) => label._id !== currentLabelId);\r\n      setCardLabels(newCardLabelsState)\r\n      updateCard({\r\n        _id: card._id,\r\n        labels: newCardLabelsState\r\n      })\r\n    })\r\n    setBoardLabels(newBoardLabelsState)\r\n    updateBoard({\r\n      _id: boardId,\r\n      labels: newBoardLabelsState\r\n    })\r\n    setIsLabelEditPopupOpen(false)\r\n  }\r\n\r\n  const handleGetCurrentEditLabel = (id: string) => {\r\n    const newLabels = [...boardLabels]\r\n    const activeLabel = newLabels.filter((label: { _id: string }) => label._id === id)\r\n    const activeLabelTitle = activeLabel.map((label: { title: string }) => label.title).toString()\r\n    const activeLabelColor = activeLabel.map((label: { color: string }) => label.color).toString()\r\n    setCurrentLabelTitle(activeLabelTitle)\r\n    setCurrentLabelColor(activeLabelColor)\r\n    setCurrentLabelId(id)\r\n  }\r\n\r\n  const handleSaveDeadline = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      _id: _id,\r\n      deadline: cardDeadline\r\n    })\r\n    updateBoard({ _id: boardId })\r\n    setDateTrigger(false)\r\n  }\r\n\r\n  const handleDeleteDeadline = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    setCardDeadline(null)\r\n    updateCard({\r\n      _id: _id,\r\n      deadline: null\r\n    })\r\n    updateBoard({ _id: boardId })\r\n    setDateTrigger(false)\r\n  }\r\n\r\n  const handleChangeCompleted = () => {\r\n    setCardCompleted(!completed);\r\n    updateCard({\r\n      _id: _id,\r\n      completed: !completed\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n  };\r\n\r\n  const handleUploadFiles = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { target: { files } } = e\r\n    if (files !== null) {\r\n      files?.length && setSelectedFiles(Array.from(files))\r\n      const arr = []\r\n      for (let i = 0; i < files.length; i++) {\r\n        arr.push(files[i].name)\r\n        setSelectedNameFiles(arr)\r\n      }\r\n    }\r\n    setUploadStatus(true)\r\n    setUploadProgress(0)\r\n  },\r\n    [],\r\n  );\r\n\r\n  const handleSubmitFiles = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault()\r\n    if (!selectedFiles.length) return;\r\n    if (!uploadStatus) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('cardId', _id)\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      formData.append('files', selectedFiles[i]);\r\n    }\r\n\r\n    const uploadFileOptions = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      },\r\n      onUploadProgress: (progressEvent: { loaded: number; total: number; }) => {\r\n        const { loaded, total } = progressEvent;\r\n        let percent = Math.floor((loaded * 100) / total)\r\n        setUploadProgress(percent)\r\n      }\r\n    }\r\n\r\n    await axios.post(`${process.env.REACT_APP_API_URL}files`, formData, uploadFileOptions)\r\n      .then(res => {\r\n        updateCard({\r\n          _id: _id,\r\n        })\r\n        updateBoard({\r\n          _id: boardId\r\n        })\r\n        setUploadStatus(true)\r\n        setTimeout(() => {\r\n          setUploadProgress(0)\r\n          setSelectedNameFiles([])\r\n          setFileTrigger(false)\r\n        }, 500)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        setUploadStatus(false)\r\n      })\r\n  }\r\n\r\n  const handleDeleteFile = (fileId: string) => {\r\n    deleteFile(fileId)\r\n    updateCard({\r\n      _id: _id,\r\n      files: files\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n    if (files.length) {\r\n      setCardCover(files[0].fileUrl)\r\n    }\r\n    else {\r\n      setCardCover('')\r\n    }\r\n  }\r\n\r\n  const handleDownloadFile = (fileUrl: string) => {\r\n    axios.get(`${fileUrl}`, {\r\n      responseType: 'blob',\r\n    }).then((res) => {\r\n      let filename = fileUrl.replace(/^.*[\\\\\\/]/, '')\r\n      let fileExtension;\r\n      fileExtension = fileUrl.split('.');\r\n      fileExtension = fileExtension[fileExtension.length - 1];\r\n      fileDownload(res.data, `${filename}.${fileExtension}`);\r\n    });\r\n  }\r\n\r\n  const onClickHandler = () => {\r\n    const newWindow = window.open(`${cover}`, \"_blank\", 'noopener,noreferrer');\r\n    if (newWindow) newWindow.opener = null\r\n  }\r\n\r\n  const handleSelectCover = (index: number) => {\r\n    setCardFileIndex(index)\r\n    setCardCover(files[index].fileUrl)\r\n    updateCard({\r\n      _id: _id,\r\n      cover: files[index].fileUrl\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n  }\r\n\r\n  useOnClickOutside(refModal, setIsCardWindowOpen)\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.modal} onClick={setIsCardWindowOpen}></div>\r\n      <div ref={refModal} className={styles.cardModal}>\r\n        {\r\n          cover && isFileImage(cover) ? (\r\n            <div className={styles.cardModalCover} >\r\n              <img onClick={onClickHandler} src={cover} alt={cover} />\r\n            </div>\r\n          ) : null\r\n        }\r\n\r\n        <div className={styles.closeModalBtn}>\r\n          <IconButton onClick={setIsCardWindowOpen}><BsXLg /></IconButton>\r\n        </div>\r\n        <div className={styles.cardModalContainer}>\r\n          <div className={styles.cardModalHeader}>\r\n            <div className={styles.cardModalHeaderTextarea}>\r\n              <TextareaAutosize\r\n                id='card-title'\r\n                autoFocus={false}\r\n                value={cardTitle}\r\n                className={styles.cardModalTextareaTitle}\r\n                onChange={handleEditCardTitle}\r\n                onFocus={(e) => e.target.select()}\r\n                rows={20}\r\n                required\r\n              />\r\n              <p>Na liscie: <strong>{nameList}</strong></p>\r\n            </div>\r\n          </div>\r\n          <div className={styles.cardModalContent}>\r\n            <div className={styles.cardModalMainContent}>\r\n              <Container data={cardLabels} title={'Etykiety'}>\r\n                {\r\n                  cardLabels.map((label: { title: string; active: any; color: any; _id: string }) => (\r\n                    <div\r\n                      key={label._id}\r\n                      style={{ backgroundColor: `${label.color}` }}\r\n                      className={styles.cardModalLabel}\r\n                      onClick={() => setLabelsTrigger(true)}\r\n                    >\r\n                      <span>{label.title}</span>\r\n                    </div>\r\n                  ))\r\n                }\r\n              </Container>\r\n              <Container data={deadline} title={'Termin'}>\r\n                <>\r\n                  {\r\n                    deadline ? (\r\n                      <>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={completed}\r\n                          onChange={handleChangeCompleted}\r\n                          style={{ height: '100%', width: '1rem', marginRight: '8px' }} />\r\n                        <button onClick={() => setDateTrigger(true)}\r\n                          className={styles.cardModalSelectedDateBtn}>\r\n                          <span>{dayjs(deadline).format('DD-MM-YYYY HH:mm')}</span>\r\n                          {\r\n                            dateIsSameOrBefore && !completed ? (\r\n                              <span\r\n                                title={cardDateDisplay.title}\r\n                                style={{ backgroundColor: cardDateDisplay.style.backgroundColor }} className={styles.dateNotificationSpan}>\r\n                                {cardDateDisplay.name}\r\n                              </span>\r\n                            ) : null\r\n                          }\r\n                          {\r\n                            deadlineIsSoon && !completed ? (\r\n                              <span\r\n                                title={cardDateDisplay.title}\r\n                                style={{ backgroundColor: cardDateDisplay.style.backgroundColor }} className={styles.dateNotificationSpan}>\r\n                                {cardDateDisplay.name}\r\n                              </span>\r\n                            ) : null\r\n                          }\r\n                          {\r\n                            completed ? (\r\n                              <span\r\n                                title={cardDateDisplay.title}\r\n                                style={{ backgroundColor: cardDateDisplay.style.backgroundColor }} className={styles.dateNotificationSpan}>\r\n                                {cardDateDisplay.name}\r\n                              </span>\r\n                            ) : null\r\n                          }\r\n                        </button>\r\n                      </>\r\n                    ) : null\r\n                  }\r\n                </>\r\n              </Container>\r\n              <div className={styles.cardModalDescriptionContainer}>\r\n                <div className={styles.cardModalDescriptionHeader}>\r\n                  <h4>Opis</h4>\r\n                  <div style={{ maxWidth: '100px', marginLeft: '1rem' }}>\r\n                    {\r\n                      !isDescriptionFormOpen && cardDescription !== undefined && cardDescription !== '' ? (\r\n                        <TaskButton onClick={() => setIsDescriptionFormOpen(true)} name={'Edytuj'} icon={<BsPencil />} />\r\n                      ) : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n                {\r\n                  isDescriptionFormOpen ?\r\n                    <TaskForm\r\n                      id={'card-description'}\r\n                      handleChange={handleEditCardDescription}\r\n                      handleSubmit={handleSaveCardDescription}\r\n                      closeForm={() => { setIsDescriptionFormOpen(false); setCardDescription(description) }}\r\n                      value={cardDescription}\r\n                      onFocus={(e) => e.target.select()}\r\n                      titleBtn={'Zapisz'}\r\n                    /> :\r\n                    <div>\r\n                      {cardDescription !== '' && cardDescription !== undefined ? <p onClick={() => setIsDescriptionFormOpen(true)}>{cardDescription}</p> :\r\n                        <TaskButton onClick={() => setIsDescriptionFormOpen(true)} name={'Dodaj opis...'} icon={<IoMdAdd />} />}\r\n                    </div>\r\n                }\r\n              </div>\r\n              <Container data={files} title={'Załącznik'}>\r\n                <div className={styles.filesContainer}>\r\n                  {\r\n                    files?.map((file: { _id: string; fileName: string; createdAt: string; fileUrl: string; fileType: string }, index: number) => (\r\n                      <Files\r\n                        key={file._id}\r\n                        title={file.fileName}\r\n                        created={`Dodano ${dayjs(file.createdAt).format('DD MMM')} o ${dayjs(file.createdAt).format('HH:mm')}`}\r\n                        active={cardFileIndex}\r\n                        index={index}\r\n                        src={`${file.fileUrl}`}\r\n                        type={file.fileType}\r\n                        handleDeleteFile={() => handleDeleteFile(file._id)}\r\n                        handleDownloadFile={() => handleDownloadFile(file.fileUrl)}\r\n                        handleSelectCover={() => handleSelectCover(index)}\r\n                      />\r\n                    ))\r\n                  }\r\n                </div>\r\n              </Container>\r\n            </div>\r\n            <div className={styles.cardModalSidebar} >\r\n              <Popup\r\n                title={isLabelEditPopupOpen ? 'Edytuj etykietę' : isAddNewLabelPopupOpen ? 'Dodaj Etykietę' : 'Etykiety'}\r\n                trigger={labelsTrigger}\r\n                closePopup={() => { setLabelsTrigger(false); setIsLabelEditPopupOpen(false); setIsAddNewLabelPopupOpen(false) }}\r\n                isEditWindow={isLabelEditPopupOpen || isAddNewLabelPopupOpen}\r\n                backToMainWindow={() => { setIsLabelEditPopupOpen(false); setIsAddNewLabelPopupOpen(false) }}\r\n              >\r\n                <div className={styles.cardModalLabels}>\r\n                  {\r\n                    !isLabelEditPopupOpen &&\r\n                      !isAddNewLabelPopupOpen ? (\r\n                      <>\r\n                        <div className={styles.cardModalLabelsList}>\r\n                          {\r\n                            boardLabels.map((label: LabelsInterface) => (\r\n                              <Label\r\n                                key={label._id}\r\n                                labelId={label._id}\r\n                                title={label.title}\r\n                                color={label.color}\r\n                                cardLabels={labels}\r\n                                openLabelEditWindow={() => {\r\n                                  setIsLabelEditPopupOpen(true)\r\n                                  handleGetCurrentEditLabel(label._id)\r\n                                }}\r\n                                handleCheckedLabel={() => handleCheckedLabel(label)}\r\n                              >\r\n                              </Label>\r\n                            ))\r\n                          }\r\n                        </div>\r\n                        <TaskButton onClick={() => setIsAddNewLabelPopupOpen(true)} name={'Utwórz nową etykietę'} />\r\n                      </>\r\n                    ) : (\r\n                      <LabelForm\r\n                        formId={isLabelEditPopupOpen ? 'label-title-edit' : isAddNewLabelPopupOpen ? 'label-title-add' : ''}\r\n                        handleChangeTitle={handleChangeLabelTitle}\r\n                        handleChangeLabelTitle={isLabelEditPopupOpen ? handleSaveLabelEditing : isAddNewLabelPopupOpen ? handleAddNewLabel : () => console.log('label does not exist')}\r\n                        handleDeleteLabel={handleDeleteLabel}\r\n                        value={isLabelEditPopupOpen ? currentLabelTitle : isAddNewLabelPopupOpen ? labelTitle : ''}\r\n                        onFocus={(e) => e.target.select()}\r\n                        selectColor={currentLabelColor}\r\n                        setSelectColor={setCurrentLabelColor}\r\n                      />\r\n                    )\r\n                  }\r\n                </div>\r\n              </Popup>\r\n              <Popup\r\n                title={'Data'}\r\n                trigger={dateTrigger}\r\n                closePopup={() => setDateTrigger(false)}\r\n                backToMainWindow={() => setDateTrigger(false)}\r\n              >\r\n                <DatePicker\r\n                  dateFormat='DD/MM/YYYY'\r\n                  timeFormat=\"hh:mm\"\r\n                  locale=\"pl\"\r\n                  selected={deadline ? new Date(deadline) : null}\r\n                  onChange={(date: Date) => setCardDeadline(date)}\r\n                  inline\r\n                  showTimeInput\r\n                  timeInputLabel=\"Godzina:\"\r\n                />\r\n                <label>Termin <br></br>\r\n                  <input style={{ maxWidth: '100px', marginRight: '10px' }} placeholder={dayjs(deadline).format('DD/MM/YYYY')} />\r\n                  <input style={{ maxWidth: '100px' }} placeholder={dayjs(deadline).format('HH:mm')} />\r\n                </label>\r\n                <div className={styles.actionsForm}>\r\n                  <Button onClick={handleSaveDeadline} title={'Zapisz'} type={'button'} />\r\n                  <div style={{ marginRight: '1rem' }} />\r\n                  <Button onClick={handleDeleteDeadline} title={'Usuń'} bgColor={'#EA4746'} type={'button'} />\r\n                </div>\r\n              </Popup>\r\n              <Popup\r\n                title={'Załącznik'}\r\n                trigger={fileTrigger}\r\n                closePopup={() => setFileTrigger(false)}\r\n                backToMainWindow={() => setFileTrigger(false)}\r\n              >\r\n                <FileForm\r\n                  name={'załącznik'}\r\n                  size={0}\r\n                  label={'załącznik'}\r\n                  type={'file'}\r\n                  listNames={selectedNameFiles}\r\n                  handleInputState={handleUploadFiles}\r\n                  handleSubmitFiles={handleSubmitFiles}\r\n                />\r\n                {uploadProgress > 0 ? (\r\n                  <>\r\n                    {\r\n                      uploadStatus !== null && uploadStatus === true ? (\r\n                        <div><ProgressLine percent={uploadProgress} strokeWidth={4} strokeColor=\"#D3D3D3\" /><p>{uploadProgress}%</p></div>\r\n                      ) : null\r\n                    }\r\n                    {\r\n                      uploadStatus === false ?\r\n                        <p style={{ color: 'red' }}>Błąd przesyłania<small> (max 10mb, lub nieprawidłowy format pliku)</small></p>\r\n                        : null\r\n                    }\r\n                  </>\r\n                ) : null\r\n                }\r\n              </Popup>\r\n              <Popup\r\n                title={'Dodaj wycenę'}\r\n                trigger={valuationTrigger}\r\n                closePopup={() => setValuationTrigger(false)}\r\n              >\r\n                <div>\r\n                  <p>In progress ...</p>\r\n                </div>\r\n              </Popup>\r\n              <Popup\r\n                title={'Magazyn'}\r\n                trigger={storageTrigger}\r\n                closePopup={() => setStorageTrigger(false)}\r\n              >\r\n                <div>\r\n                  <p>In progress ...</p>\r\n                </div>\r\n              </Popup>\r\n              <TaskButton onClick={() => setLabelsTrigger(true)} name={'Etykiety'} icon={<MdOutlineLabel />} />\r\n              <TaskButton onClick={() => setDateTrigger(true)} name={'Data'} icon={<BsStopwatch />} />\r\n              <TaskButton onClick={() => setFileTrigger(true)} name={'Załącznik'} icon={<GrAttachment />} />\r\n              <TaskButton onClick={() => setValuationTrigger(true)} name={'Dodaj wycenę'} icon={<BiTask />} />\r\n              <TaskButton onClick={() => setStorageTrigger(true)} name={'Magazyn'} icon={<BiTask />} />\r\n              <div className={styles.divider}></div>\r\n              <TaskButton onClick={() => {\r\n                deleteCard(_id);\r\n                updateBoard({ _id: boardId })\r\n              }} name={'Usuń'} icon={<RiDeleteBinLine />} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CardModal","import { RefObject, useRef, useEffect, useLayoutEffect } from 'react'\r\n\r\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\r\n\r\nfunction useEventListener<K extends keyof WindowEventMap>(\r\n  eventName: K,\r\n  handler: (event: WindowEventMap[K]) => void,\r\n): void\r\nfunction useEventListener<\r\n  K extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement = HTMLDivElement,\r\n>(\r\n  eventName: K,\r\n  handler: (event: HTMLElementEventMap[K]) => void,\r\n  element: RefObject<T>,\r\n): void\r\n\r\nfunction useEventListener<\r\n  KW extends keyof WindowEventMap,\r\n  KH extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement | void = void,\r\n>(\r\n  eventName: KW | KH,\r\n  handler: (\r\n    event: WindowEventMap[KW] | HTMLElementEventMap[KH] | Event,\r\n  ) => void,\r\n  element?: RefObject<T>,\r\n) {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef(handler)\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    savedHandler.current = handler\r\n  }, [handler])\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener: typeof handler = event => savedHandler.current(event)\r\n\r\n    targetElement.addEventListener(eventName, eventListener)\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      targetElement.removeEventListener(eventName, eventListener)\r\n    }\r\n  }, [eventName, element])\r\n}\r\n\r\nexport default useEventListener","import { RefObject, useState } from 'react'\r\n\r\nimport useEventListener from './useEventListener'\r\n\r\nfunction useHover<T extends HTMLElement = HTMLElement>(\r\n  elementRef: RefObject<T>,\r\n): boolean {\r\n  const [value, setValue] = useState<boolean>(false)\r\n\r\n  const handleMouseEnter = () => setValue(true)\r\n  const handleMouseLeave = () => setValue(false)\r\n\r\n  useEventListener('mouseenter', handleMouseEnter, elementRef)\r\n  useEventListener('mouseleave', handleMouseLeave, elementRef)\r\n\r\n  return value\r\n}\r\n\r\nexport default useHover\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\n// import TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport dayjs from 'dayjs';\r\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport duration from 'dayjs/plugin/duration'\r\n\r\nimport 'dayjs/locale/pl';\r\nimport CardModal from './CardModal/CardModal';\r\nimport {\r\n  useUpdateBoardMutation,\r\n} from '../../../store/api/boards'\r\nimport {\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n} from \"../../../store/api/cards\";\r\n\r\nimport { MdOutlineLabel } from 'react-icons/md';\r\nimport { RiDeleteBin6Line } from 'react-icons/ri';\r\nimport { GrTextAlignFull } from 'react-icons/gr';\r\nimport { BsStopwatch } from 'react-icons/bs';\r\nimport { ImCheckboxUnchecked } from 'react-icons/im';\r\nimport { ImCheckboxChecked } from 'react-icons/im';\r\nimport { GrAttachment } from 'react-icons/gr';\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\nimport useHover from '../../../hooks/useHover'\r\nimport { isFileImage } from '../../../hooks/isFileImage'\r\nimport { Card as CardModel } from '../../../models/card'\r\nimport { Labels as LabelsInterface } from '../../../models/labels'\r\n\r\nexport interface CardProps extends CardModel {\r\n  index: number\r\n  setIsDragDisabled: (value: boolean) => void\r\n}\r\n\r\nconst Card: React.FC<CardProps> = ({\r\n  _id,\r\n  boardId,\r\n  title,\r\n  index,\r\n  nameList,\r\n  description,\r\n  completed,\r\n  labels,\r\n  deadline,\r\n  cover,\r\n  files,\r\n  createdAt,\r\n  setIsDragDisabled,\r\n}) => {\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const [isCardModalOpen, setIsCardModalOpen] = useState<boolean>(false)\r\n  const [isDisplayEditIcon, setIsDisplayEditIcon] = useState(false)\r\n  const [cardCompleted, setCardCompleted] = useState(completed)\r\n  const [nowDate, setNowDate] = useState(Date.now())\r\n  const [cardCover, setCardCover] = useState(cover)\r\n  const [cardFileIndex, setCardFileIndex] = useState(0)\r\n  const [cardFiles, setCardFiles] = useState([] as any)\r\n\r\n  dayjs.locale('pl');\r\n  dayjs.extend(isSameOrBefore)\r\n  dayjs.extend(duration)\r\n  dayjs.extend(relativeTime)\r\n\r\n  useEffect(() => {\r\n    const intervalIsSameOrBefore = setInterval(() => setNowDate(Date.now()), 100000)\r\n    return () => clearInterval(intervalIsSameOrBefore)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (files) {\r\n      setCardFiles(files)\r\n    }\r\n  }, [files])\r\n\r\n  useEffect(() => {\r\n    displayCover()\r\n  }, [cardFiles])\r\n\r\n  const displayCover = () => {\r\n    if (cardFiles) {\r\n      const newFiles = [...cardFiles]\r\n      const filesOnlyImages = newFiles.filter(file => isFileImage(file.fileUrl))\r\n      const selectedCover = filesOnlyImages.find((file: { fileUrl: string }) => file.fileUrl === cover)\r\n      let activeIndex = filesOnlyImages.indexOf(selectedCover);\r\n      const indexOnlyImages = newFiles.findIndex(el => isFileImage(el.fileUrl))\r\n      if (filesOnlyImages.length) {\r\n        if (activeIndex < 0) {\r\n          setCardCover(filesOnlyImages[0].fileUrl)\r\n          setCardFileIndex(indexOnlyImages)\r\n        } else {\r\n          setCardCover(filesOnlyImages[activeIndex].fileUrl)\r\n          setCardFileIndex(activeIndex)\r\n        }\r\n      }\r\n      else {\r\n        setCardCover('')\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleMouseEnter = () => {\r\n    setIsDisplayEditIcon(true)\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsDisplayEditIcon(false)\r\n  }\r\n\r\n  const handleOpenCardModal = () => {\r\n    setIsCardModalOpen(true)\r\n    setIsDragDisabled(true)\r\n  }\r\n\r\n  const handleCloseCardModal = () => {\r\n    setIsCardModalOpen(false)\r\n    setIsDragDisabled(false)\r\n  }\r\n\r\n  const handleChangeCompleted = () => {\r\n    setCardCompleted(!cardCompleted);\r\n    updateCard({\r\n      _id: _id,\r\n      completed: !cardCompleted\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n  };\r\n\r\n  const fiveHours = 300 //minutes\r\n  const dateIsSameOrBefore = dayjs(deadline).isSameOrBefore(nowDate, 'minute')\r\n  const timeToDeadline = dayjs(deadline).diff(dayjs(nowDate), 'minute', true)\r\n  const deadlineIsSoon = (timeToDeadline < fiveHours && timeToDeadline > 0) ? true : false\r\n\r\n  const cardDateDisplay = {\r\n    style: {\r\n      color: (cardCompleted || dateIsSameOrBefore || deadlineIsSoon) ? 'white' : 'black',\r\n      backgroundColor: cardCompleted ? 'green' : dateIsSameOrBefore ? 'red' : deadlineIsSoon ? 'orange' : 'transparent'\r\n    },\r\n    title: cardCompleted ? 'Ta karta została ukończona' :\r\n      dateIsSameOrBefore ? 'Ta karta jest przeterminowana' :\r\n        deadlineIsSoon ? `Deadline ${dayjs(deadline).fromNow()}` : 'Karta jest na później',\r\n    name: cardCompleted ? 'zrealizowany' :\r\n      dateIsSameOrBefore ? 'termin przekroczony' :\r\n        deadlineIsSoon ? `wkrótce` : '',\r\n    iconStyle: {\r\n      marginRight: '5px',\r\n      fontSize: '14px',\r\n    }\r\n  }\r\n\r\n  const hoverRef = useRef(null)\r\n  const isHover = useHover(hoverRef)\r\n\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        isCardModalOpen ?\r\n          <CardModal\r\n            _id={_id}\r\n            nameList={nameList}\r\n            title={title}\r\n            description={description}\r\n            boardId={boardId}\r\n            deadline={deadline}\r\n            labels={labels}\r\n            files={cardFiles}\r\n            cover={cardCover}\r\n            completed={cardCompleted}\r\n            cardFileIndex={cardFileIndex}\r\n            dateIsSameOrBefore={dateIsSameOrBefore}\r\n            deadlineIsSoon={deadlineIsSoon}\r\n            cardDateDisplay={cardDateDisplay}\r\n            createdAt={createdAt}\r\n            setCardCompleted={setCardCompleted}\r\n            setIsCardWindowOpen={handleCloseCardModal}\r\n            setCardFileIndex={setCardFileIndex}\r\n            setCardCover={setCardCover}\r\n          /> : null\r\n      }\r\n      <div>\r\n        <Draggable draggableId={_id} index={index} >\r\n          {provided => (\r\n            <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n              <div className={styles.card}\r\n                onMouseEnter={handleMouseEnter}\r\n                onMouseLeave={handleMouseLeave}\r\n              >\r\n                <div className={styles.cardContainer} >\r\n                  <div className={styles.cardClickableArea} onClick={handleOpenCardModal}></div>\r\n                  {\r\n                    cardFiles.length ? (\r\n                      <div className={styles.cardCover} style={\r\n                        {\r\n                          backgroundColor: cardCover,\r\n                          backgroundImage: `url(${cardCover})`,\r\n                          backgroundSize: 'cover',\r\n                          backgroundRepeat: 'no-repeat',\r\n                          backgroundPosition: 'center'\r\n                        }\r\n                      }>\r\n                      </div>\r\n                    ) : null\r\n                  }\r\n                  <div className={styles.cardDetails}>\r\n                    {\r\n                      labels.length ? (\r\n                        <div className={styles.cardLabels} onClick={handleOpenCardModal}>\r\n                          {\r\n                            labels.map((label: { active: any; color: any; _id: string; title: string }) => (\r\n                              <div title={`${label.title}`} key={label._id} className={styles.cardLabel} style={{ backgroundColor: `${label.color}` }}></div>\r\n                            ))\r\n                          }\r\n                        </div>\r\n                      ) : null\r\n                    }\r\n                    <p >{title}</p>\r\n                    <div className={styles.iconsContainer}>\r\n                      <div ref={hoverRef}>\r\n                        {\r\n                          deadline ? (\r\n                            <button\r\n                              className={styles.dateBtn}\r\n                              onClick={handleChangeCompleted}\r\n                              style={cardDateDisplay.style}\r\n                              title={cardDateDisplay.title}\r\n\r\n                            >\r\n                              {isHover ? (cardCompleted ? <ImCheckboxChecked style={cardDateDisplay.iconStyle} /> : <ImCheckboxUnchecked style={cardDateDisplay.iconStyle} />) : <BsStopwatch style={cardDateDisplay.iconStyle} />}\r\n                              {dayjs(deadline).format('DD MMM')}\r\n                            </button>\r\n                          ) : null\r\n                        }\r\n                      </div>\r\n                      {description ? <div className={styles.icons} title=\"Ta karta ma opis.\"><GrTextAlignFull onClick={handleOpenCardModal} /></div> : null}\r\n                      {cardFiles.length ? <div className={styles.icons} title=\"Załączniki\"><GrAttachment /><span>{cardFiles.length}</span></div> : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className={styles.btnContainer}>\r\n                  {\r\n                    isDisplayEditIcon ? (\r\n                      <IconButton onClick={() => {\r\n\r\n                        setIsDragDisabled(true)\r\n                      }}>\r\n                        <RiDeleteBin6Line />\r\n                      </IconButton>) : null\r\n                  }\r\n                </div>\r\n\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card","import React, { useState, useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport {\r\n  useDeleteListMutation,\r\n  useUpdateListMutation,\r\n  useDeleteAllCardsOfListMutation,\r\n} from \"../../../store/api/lists\";\r\nimport { useUpdateBoardMutation } from '../../../store/api/boards'\r\nimport { useAddCardMutation } from \"../../../store/api/cards\";\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside';\r\nimport { List as ListInterface } from '../../../models/list'\r\nimport Card from '../Card/Card';\r\nimport TaskForm from '../TaskForm/TaskForm';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\nimport IconButton from '../../Details/IconButton/IconButton'\r\nimport Popup from '../../Details/Popup/Popup';\r\ninterface PropsList extends ListInterface {\r\n  index: number\r\n}\r\n\r\nconst List: React.FC<PropsList> = ({ _id, boardId, title, cards, index }) => {\r\n  const [addCard] = useAddCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n  const [updateList] = useUpdateListMutation()\r\n  const [deleteList] = useDeleteListMutation()\r\n  const [deleteAllCardsOfList] = useDeleteAllCardsOfListMutation()\r\n\r\n  const [listTitle, setListTitle] = useState<string>(title)\r\n  const [cardTitle, setCardTitle] = useState<string>('')\r\n  const [isCardFormOpen, setIsCardFormOpen] = useState(false)\r\n  const [isTitleFormOpen, setIsTitleFormOpen] = useState(false)\r\n  const [isDragDisabled, setIsDragDisabled] = useState(false)\r\n  const [popupTrigger, setPopupTrigger] = useState(false)\r\n  const ref = useRef(null)\r\n\r\n\r\n  const handleChangeListTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'list') setListTitle(e.target.value)\r\n    updateList({\r\n      _id: _id,\r\n      title: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleAddCardTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card') setCardTitle(e.target.value)\r\n  }\r\n\r\n  const handleOnKeyDownListTitle = (e: React.KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    if (e.key === 'Enter' || e.code === \"NumpadEnter\") {\r\n      e.stopPropagation();\r\n      setIsTitleFormOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleAddCard = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    if (cardTitle.length === 0) return\r\n    addCard({\r\n      listId: _id,\r\n      title: cardTitle\r\n    })\r\n    updateBoard({ _id: boardId })\r\n    setIsCardFormOpen(false)\r\n    setCardTitle('')\r\n  }\r\n\r\n  const handleDeleteAllCardsOfList = () => {\r\n    deleteAllCardsOfList({ _id })\r\n    updateBoard({ _id: boardId })\r\n    setPopupTrigger(false)\r\n  }\r\n\r\n  const handleDeleteList = () => {\r\n    deleteList(_id)\r\n    updateBoard({ _id: boardId })\r\n  }\r\n\r\n  const handleSortCardsByDate = (props: string) => {\r\n    const newCards = [...cards]\r\n    let sortedCards\r\n    if (props === 'sort-from-oldest') sortedCards = newCards.sort((a, b) => +new Date(a.createdAt) - +new Date(b.createdAt))\r\n    if (props === 'sort-from-newest') sortedCards = newCards.sort((a, b) => +new Date(b.createdAt) - +new Date(a.createdAt))\r\n    updateList({\r\n      _id,\r\n      cards: sortedCards\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n    setPopupTrigger(false)\r\n  }\r\n\r\n  const handleCloseForm = () => { setIsCardFormOpen(false); setCardTitle('') }\r\n  useOnClickOutside(ref, handleCloseForm)\r\n\r\n  return (\r\n    <div>\r\n      <Draggable draggableId={String(_id)} index={index} isDragDisabled={isDragDisabled}>\r\n        {provided => (\r\n          <div className={styles.list} {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}>\r\n            <div className={styles.listHeader}>\r\n              <div onClick={() => setIsTitleFormOpen(true)} ref={ref}>\r\n                {\r\n                  isTitleFormOpen ?\r\n                    <div className={styles.textareaWrapper}>\r\n                      <TextareaAutosize\r\n                        id='list'\r\n                        autoFocus={true}\r\n                        value={listTitle}\r\n                        className={styles.textarea}\r\n                        onChange={handleChangeListTitle}\r\n                        onFocus={(e) => e.target.select()}\r\n                        onBlur={() => setIsTitleFormOpen(false)}\r\n                        onKeyDown={handleOnKeyDownListTitle}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    : <div className={styles.textareaWrapper}><h2>{listTitle}</h2></div>\r\n                }\r\n              </div>\r\n              <IconButton onClick={() => {\r\n                setPopupTrigger(true)\r\n                setIsDragDisabled(true)\r\n              }}>\r\n                <BsThreeDots style={{ fontSize: \"1.3em\" }} />\r\n              </IconButton>\r\n              <Popup\r\n                title={'Akcje listy'}\r\n                trigger={popupTrigger}\r\n                closePopup={() => {\r\n                  setPopupTrigger(false)\r\n                  setIsDragDisabled(false)\r\n                }}\r\n              >\r\n                <div className={styles.popupContent}>\r\n                  <TaskButton\r\n                    onClick={() => handleSortCardsByDate('sort-from-newest')}\r\n                    name={'Sortuj karty od najnowszych'}\r\n                  />\r\n                  <TaskButton\r\n                    onClick={() => handleSortCardsByDate('sort-from-oldest')}\r\n                    name={'Sortuj karty od najstarszych'}\r\n                  />\r\n                  <div className={styles.divider}></div>\r\n                  <TaskButton\r\n                    onClick={handleDeleteAllCardsOfList}\r\n                    name={'Usuń wszystkie karty'}\r\n                  />\r\n                  <TaskButton\r\n                    onClick={handleDeleteList}\r\n                    name={'Usuń listę'}\r\n                  />\r\n                </div>\r\n              </Popup>\r\n            </div>\r\n            <Droppable droppableId={String(_id)} type=\"card\">\r\n              {provided => (\r\n                <div {...provided.droppableProps} ref={provided.innerRef} className={styles.cards}>\r\n                  <div className={styles.cardsContainer}>\r\n                    {\r\n                      cards?.map((card, index: number) => (\r\n                        <Card\r\n                          _id={card._id}\r\n                          index={index}\r\n                          key={card._id}\r\n                          boardId={boardId}\r\n                          title={card.title}\r\n                          deadline={card.deadline}\r\n                          completed={card.completed}\r\n                          description={card.description}\r\n                          labels={card.labels}\r\n                          files={card.files}\r\n                          cover={card.cover}\r\n                          nameList={listTitle}\r\n                          createdAt={card.createdAt}\r\n                          setIsDragDisabled={setIsDragDisabled}\r\n                        />\r\n                      ))\r\n                    }\r\n                    {provided.placeholder}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n            <div className={styles.addCardForm}>\r\n              {isCardFormOpen ?\r\n                <div ref={ref}>\r\n                  <TaskForm\r\n                    id={'card'}\r\n                    handleChange={handleAddCardTitle}\r\n                    handleSubmit={handleAddCard}\r\n                    closeForm={() => { setIsCardFormOpen(false); setCardTitle('') }}\r\n                    value={cardTitle}\r\n                    titleBtn={'Dodaj Kartę'}\r\n                  />\r\n                </div>\r\n                : <TaskButton onClick={() => setIsCardFormOpen(true)} name={'Dodaj kartę'} icon={<GoPlus />} />\r\n              }\r\n            </div>\r\n          </div>\r\n        )\r\n        }\r\n      </Draggable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List","import axios from 'axios'\r\n\r\nconst getImages = async () => {\r\n  const page = Math.floor(Math.random() * 20 + 1)\r\n  const numberPhotos = 14\r\n  const urlImages = `https://api.unsplash.com/search/photos?page=${page}&per_page=${numberPhotos}&query=Landscape&client_id=${process.env.REACT_APP_UNSPLASH_KEY}`\r\n\r\n  const res = await axios.get(urlImages)\r\n  const photos = res.data.results.map(\r\n    (image: {\r\n      id: any\r\n      urls: { thumb: any; full: any }\r\n      user: { username: any; links: { html: any } }\r\n    }) => ({\r\n      id: image.id,\r\n      thumb: image.urls.thumb,\r\n      full: image.urls.full,\r\n      user: {\r\n        username: image.user.username,\r\n        link: image.user.links.html,\r\n      },\r\n    })\r\n  )\r\n  return photos\r\n}\r\n\r\nexport default getImages\r\n","import React, { useState, useEffect } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { presetColors, defaultBackground, defaultColor } from '../localData'\r\nimport getImages from '../../../api/unsplashApi'\r\nimport { useUpdateBoardMutation } from '../../../store/api/boards'\r\nimport { BsXLg } from \"react-icons/bs\"\r\nimport IconButton from '../../Details/IconButton/IconButton'\r\n\r\ninterface SideMenuProps {\r\n  boardId: string\r\n  handleCloseMenu: () => void\r\n  setBackgroundUrl: (value: string) => void;\r\n}\r\n\r\nconst SideMenu: React.FC<SideMenuProps> = ({ handleCloseMenu, setBackgroundUrl, boardId }) => {\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n  const [optionColors, setOptionsColors] = useState<boolean>(false)\r\n  const [optionImages, setOptionsImages] = useState<boolean>(false)\r\n  const [images, setImages] = useState<any>([])\r\n\r\n  const getListOfImages = async () => {\r\n    const listImages = await getImages()\r\n    setImages(listImages)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getListOfImages()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.sideMenu}>\r\n      <div className={styles.menuHeader}>\r\n        <h3>Zmień tło</h3>\r\n        <IconButton onClick={handleCloseMenu}><BsXLg /></IconButton>\r\n      </div>\r\n      <div className={styles.menuOptions}>\r\n        <div className={styles.itemBox}\r\n          onClick={() => {\r\n            setOptionsImages(true)\r\n            setOptionsColors(false)\r\n          }}\r\n          style={{\r\n            backgroundImage: `url(${defaultBackground})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n          }}><p>Zdjęcia</p></div>\r\n        <div className={styles.itemBox}\r\n          onClick={() => {\r\n            setOptionsImages(false)\r\n            setOptionsColors(true)\r\n          }}\r\n          style={{\r\n            backgroundImage: `url(${defaultColor})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n          }}\r\n        ><p>Kolory</p></div>\r\n      </div>\r\n\r\n      <div className={styles.optionsContainer}>\r\n        {\r\n          optionImages ? (\r\n            images.map((photo: { id: string | undefined; thumb: string; full: string; }) => (\r\n              <div\r\n                key={photo.id}\r\n                className={styles.itemBox}\r\n                style={{\r\n                  backgroundImage: `url(${photo.thumb})`,\r\n                  backgroundSize: 'cover',\r\n                  backgroundRepeat: 'no-repeat',\r\n                  backgroundPosition: 'center'\r\n                }}\r\n                onClick={() => {\r\n                  setBackgroundUrl(photo.full)\r\n                  updateBoard({\r\n                    _id: boardId,\r\n                    background: photo.full\r\n                  })\r\n                }}\r\n              ></div>\r\n            ))\r\n          ) : null\r\n        }\r\n        {\r\n          optionColors ? (\r\n            presetColors.map((color, index) => (\r\n              <div\r\n                key={index}\r\n                className={styles.itemBox}\r\n                style={{\r\n                  backgroundColor: `${color}`,\r\n                }}\r\n                onClick={() => {\r\n                  setBackgroundUrl(color)\r\n                  updateBoard({\r\n                    _id: boardId,\r\n                    background: color\r\n                  })\r\n                }}\r\n              ></div>\r\n            ))\r\n          ) : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SideMenu","import React, { useEffect, useState, useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd'\r\nimport {useGetBoardQuery, useUpdateBoardMutation} from '../../../store/api/boards'\r\nimport {useAddListMutation, useUpdateListMutation} from \"../../../store/api/lists\";\r\nimport {useUpdateCardMutation} from \"../../../store/api/cards\";\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside';\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { defaultBackground } from '../localData';\r\nimport { Board as BoardResponse } from '../../../models/board'\r\nimport { List as ListResponse } from '../../../models/list'\r\nimport BoardHeader from '../BoardHeader/BoardHeader';\r\nimport List from '../List/List'\r\nimport TaskButton from '../TaskButton/TaskButton'\r\nimport TaskForm from '../TaskForm/TaskForm'\r\nimport SideMenu from '../SideMenu/SideMenu';\r\nimport { useParams } from 'react-router-dom';\r\n\r\nconst Board: React.FC = () => {\r\n  const boardId = '624f02f011fa05ce01907c07'\r\n  const {_id} = useParams()\r\n  console.log(_id)\r\n  const { data: boardApi, error, isLoading } = useGetBoardQuery(boardId);\r\n  const [addList] = useAddListMutation()\r\n  const [updateList] = useUpdateListMutation()\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const [backgroundUrl, setBackgroundUrl] = useState('')\r\n  const [listTitle, setListTitle] = useState('');\r\n  const [isOpenForm, setIsOpenForm] = useState(false)\r\n  const [isOpenSideMenu, setIsOpenSideMenu] = useState(false)\r\n  const [board, setBoard] = useState<BoardResponse>({} as BoardResponse)\r\n  const [lists, setLists] = useState<ListResponse[]>([] as ListResponse[])\r\n  const formRef = useRef(null)\r\n  \r\n  const closeForm = () => { setIsOpenForm(false); setListTitle('') }\r\n  useOnClickOutside(formRef, closeForm)\r\n\r\n  useEffect(() => {\r\n    if (boardApi) {\r\n      const boardBG = boardApi.background === '' ? defaultBackground : boardApi.background\r\n      setBoard(boardApi)\r\n      setLists(boardApi.lists)\r\n      setBackgroundUrl(boardBG)\r\n    }\r\n  }, [boardApi])\r\n\r\n  const handleChangeListTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    if (e.target.id === 'list') setListTitle(e.target.value)\r\n  }\r\n\r\n  const handleAddList = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    if (listTitle.length === 0) return\r\n    addList({\r\n      title: listTitle,\r\n      boardId: boardId,\r\n    })\r\n    updateBoard({\r\n      _id: boardId,\r\n    })\r\n    setListTitle('')\r\n    setIsOpenForm(false)\r\n  }\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    const { destination, source, type, draggableId } = result\r\n    const newLists = [...lists]\r\n    if (!board) return\r\n    if (!destination) return\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return\r\n\r\n    if (type === 'list') {\r\n      const [removed] = newLists.splice(source.index, 1)\r\n      newLists.splice(destination.index, 0, removed)\r\n\r\n      setLists(newLists)\r\n      updateBoard({\r\n        _id: boardId,\r\n        lists: newLists\r\n      })\r\n    }\r\n\r\n    if (type === 'card') {\r\n      const sourceList = newLists.find((list: { _id: string }) => list._id === source.droppableId)\r\n      const destinationList = newLists.find((list: { _id: string; }) => list._id === destination.droppableId)\r\n\r\n      if (source.droppableId === destination.droppableId && sourceList) {\r\n        const newCards = [...sourceList.cards]\r\n        const [removed] = newCards.splice(source.index, 1)\r\n        newCards.splice(destination.index, 0, removed)\r\n\r\n        const updateState = {\r\n          ...sourceList,\r\n          cards: newCards\r\n        }\r\n\r\n        //replace the contents of the list\r\n        const newState = newLists.map(obj => [updateState].find(o => o._id === obj._id) || obj);\r\n\r\n        setLists(newState)\r\n        updateList({\r\n          _id: source.droppableId,\r\n          cards: newCards\r\n        })\r\n\r\n      }\r\n\r\n      if (source.droppableId !== destination.droppableId && sourceList && destinationList) {\r\n        const startCards = [...sourceList.cards]\r\n        const finishCards = [...destinationList.cards]\r\n\r\n        const [removed] = startCards.splice(source.index, 1)\r\n        const startState = {\r\n          ...sourceList,\r\n          cards: startCards\r\n        }\r\n\r\n        finishCards.splice(destination.index, 0, removed)\r\n        const finishState = {\r\n          ...destinationList,\r\n          cards: finishCards\r\n        }\r\n\r\n        //converted to array\r\n        const newCards = [startState, finishState]\r\n\r\n        //replace the contents of the lists\r\n        const newState = newLists.map(obj => newCards.find(o => o._id === obj._id) || obj);\r\n\r\n        setLists(newState)\r\n\r\n        updateCard({\r\n          _id: draggableId,\r\n          listId: destination.droppableId\r\n        })\r\n        // update source list\r\n        updateList({\r\n          _id: source.droppableId,\r\n          cards: startCards\r\n        })\r\n        //update destination list\r\n        updateList({\r\n          _id: destination.droppableId,\r\n          cards: finishCards\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const boardBackgroundStyle = {\r\n    backgroundColor: backgroundUrl,\r\n    backgroundImage: `url(${backgroundUrl})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  }\r\n\r\n  if (isLoading) return <h2>Loading...</h2>\r\n  if (error) return <h2>Brak połączenia</h2>\r\n\r\n  return (\r\n    <div className={styles.board}\r\n      style={boardBackgroundStyle}\r\n    >\r\n      <div className={styles.container}>\r\n        <BoardHeader\r\n          name={'Zmień tło'}\r\n          onClick={() => setIsOpenSideMenu(true)}\r\n        />\r\n        {\r\n          isOpenSideMenu ?\r\n            <SideMenu\r\n              boardId={boardId}\r\n              setBackgroundUrl={setBackgroundUrl}\r\n              handleCloseMenu={() => setIsOpenSideMenu(false)}\r\n            /> : null\r\n        }\r\n        <DragDropContext onDragEnd={onDragEnd} >\r\n          <Droppable droppableId=\"all-list\" direction=\"horizontal\" type=\"list\">\r\n            {provided => (\r\n              <div className={styles.listContainer}\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {\r\n                  lists?.map((list, index: number) => (\r\n                    <List\r\n                      _id={list._id}\r\n                      index={index}\r\n                      boardId={list.boardId}\r\n                      key={list._id}\r\n                      title={list.title}\r\n                      cards={list.cards}\r\n                    />\r\n                  ))\r\n                }\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          <div className={styles.formContainer}>\r\n            {isOpenForm ?\r\n              <div className={styles.addListForm} ref={formRef}>\r\n                <TaskForm\r\n                  id='list'\r\n                  handleChange={handleChangeListTitle}\r\n                  handleSubmit={handleAddList}\r\n                  closeForm={() => { setIsOpenForm(false); setListTitle('') }}\r\n                  value={listTitle}\r\n                  titleBtn={'Dodaj Listę'}\r\n                />\r\n              </div>\r\n              : <TaskButton onClick={() => setIsOpenForm(true)} name={'Dodaj listę zadań'} icon={<GoPlus style={{ margin: '.3rem 0' }} />} />\r\n            }\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board","import React from 'react'\r\nimport { useGetAllBoardsQuery } from '../../store/api/boards'\r\nimport Board from '../../components/Tasks/Board/Board';\r\n// import SideMenu from '../../components/Tasks/SideMenu/SideMenu';\r\n// import BoardHeader from '../../components/Tasks/BoardHeader/BoardHeader';\r\nimport styles from './styles.module.scss'\r\nimport { useParams } from 'react-router-dom';\r\nconst boardId = '620b88e199b7a598ce7b7187'\r\n\r\nconst TasksPage: React.FC = () => {\r\n  // const { data: boardApi, error, isLoading } = useGetAllBoardsQuery();\r\n  // console.log(boardApi)\r\n  return (\r\n    <>\r\n      < Board />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TasksPage\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst View2: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Magazyn\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View2\r\n","import React from 'react'\r\n\r\nconst View3: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Dostawcy\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View3\r\n","import React from 'react'\r\n\r\nconst View4: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Informacje\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View4\r\n","import React from 'react'\r\n\r\nconst Calculator = () => {\r\n  return (\r\n    <div>Kalkulator</div>\r\n  )\r\n}\r\n\r\nexport default Calculator","import React from 'react'\r\nimport MoonLoader from \"react-spinners/MoonLoader\";\r\nimport styles from './styles.module.scss'\r\nconst Loading = () => {\r\n  return (\r\n  <div className={styles.loadingContainer}>\r\n     <MoonLoader size={40}/>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Loading","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './styles.module.scss'\r\nimport Axios from 'axios'\r\nimport Loading from '../../../components/Details/Loading/Loading'\r\n\r\nconst Login = () => {\r\n  const [data, setData] = useState({ email: '', password: '' })\r\n  // const [error, setError] = useState('')\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [error, setError] = useState<false | string>(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // const handleChange = ({ currentTarget: input }) => {\r\n  //   setData({ ...data, [input.name]: input.value })\r\n  // }\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault()\r\n  //   try {\r\n  //     const url = 'http://localhost:5000/api/auth'\r\n  //     const { data: res } = await axios.post(url, data)\r\n  //     localStorage.setItem('token', res.data)\r\n  //     window.location = '/'\r\n  //   } catch (error) {\r\n  //     if (\r\n  //       error.response &&\r\n  //       error.response.status >= 400 &&\r\n  //       error.response.status <= 500\r\n  //     ) {\r\n  //       setError(error.response.data.message)\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   const userInfo = localStorage.getItem('userInfo')\r\n  //   if (userInfo) {\r\n  //     history.push('/')\r\n  //   }\r\n  // }, [history])\r\n\r\n  const handleSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    const url = `${process.env.REACT_APP_API_URL}users/login`\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }\r\n      setLoading(true)\r\n      const { data } = await axios.post(\r\n        url,\r\n        {\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      )\r\n      localStorage.setItem('token', JSON.stringify(data))\r\n      window.location.href = '/'\r\n      setLoading(false)\r\n    } catch (error) {\r\n      // setError(error.response.data.message)\r\n      setError(\"Nieprawidłowy email lub hasło\")\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.login_container}>\r\n      <div className={styles.login_form_container}>\r\n        <div className={styles.left}>\r\n          {loading ? <Loading /> : null}\r\n          <form className={styles.form_container} onSubmit={handleSubmit}>\r\n            {/* <h1>Login to Your Account</h1> */}\r\n            <h1>Zaloguj się</h1>\r\n            <input\r\n              type='email'\r\n              placeholder='Email'\r\n              name='email'\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              required\r\n              className={styles.input}\r\n            />\r\n            <input\r\n              type='password'\r\n              placeholder='Hasło'\r\n              name='password'\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              required\r\n              className={styles.input}\r\n            />\r\n            {error && <div className={styles.error_msg}>{error}</div>}\r\n            <button type='submit' className={styles.green_btn}>\r\n              Logowanie\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className={styles.right}>\r\n          <h1>Zarejestruj się</h1> <br />\r\n          <Link to='/signup'>\r\n            <button type='button' className={styles.white_btn}>\r\n              Rejestracja\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport styles from './styles.module.scss'\r\nimport Loading from '../../../components/Details/Loading/Loading'\r\n\r\nconst Signup = () => {\r\n  // const [data, setData] = useState({\r\n  //   firstName: '',\r\n  //   lastName: '',\r\n  //   email: '',\r\n  //   password: '',\r\n  // })\r\n  // const [error, setError] = useState('')\r\n  // const navigate = useNavigate()\r\n\r\n  // const handleChange = ({ currentTarget: input }) => {\r\n  //   setData({ ...data, [input.name]: input.value })\r\n  // }\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault()\r\n  //   try {\r\n  //     const url = 'http://localhost:5000/api/users'\r\n  //     const { data: res } = await axios.post(url, data)\r\n  //     navigate('/login')\r\n  //     console.log(res.message)\r\n  //   } catch (error) {\r\n  //     if (\r\n  //       error.response &&\r\n  //       error.response.status >= 400 &&\r\n  //       error.response.status <= 500\r\n  //     ) {\r\n  //       setError(error.response.data.message)\r\n  //     }\r\n  //   }\r\n  // }\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [error, setError] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    const url = `${process.env.REACT_APP_API_URL}users`\r\n    if (password !== confirmPassword) {\r\n      console.log(\"Passwords do not match\");\r\n    } else {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n          },\r\n        }\r\n        setLoading(true)\r\n        const { data: res } = await axios.post(url,\r\n          {\r\n            name,\r\n            email,\r\n            password,\r\n          },\r\n          config\r\n        )\r\n        console.log(res.message)\r\n        navigate('/login')\r\n        setLoading(false)\r\n      } catch (error: any) {\r\n        if (\r\n          error.response &&\r\n          error.response.status >= 400 &&\r\n          error.response.status <= 500\r\n        ) {\r\n          setError(error.response.data.message)\r\n        }\r\n      }\r\n      setLoading(false)\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className={styles.signup_container}>\r\n      <div className={styles.signup_form_container}>\r\n        <div className={styles.left}>\r\n          <h1>Witaj ponownie</h1><br />\r\n          <Link to='/login'>\r\n            <button type='button' className={styles.white_btn}>\r\n              Logowanie\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className={styles.right}>\r\n        {loading ? <Loading /> : null}\r\n          <form className={styles.form_container} onSubmit={handleSubmit}>\r\n            <h1>Utwórz konto</h1>\r\n            <input\r\n              type='text'\r\n              placeholder='Imię'\r\n              name='firstName'\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n              required\r\n              className={styles.input}\r\n            />\r\n            <input\r\n              type='email'\r\n              placeholder='Email'\r\n              name='email'\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              required\r\n              className={styles.input}\r\n            />\r\n            <input\r\n              type='password'\r\n              placeholder='Hasło'\r\n              name='password'\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              required\r\n              className={styles.input}\r\n            />\r\n                        <input\r\n              type='password'\r\n              placeholder='Powtórz hasło'\r\n              name='confirm-password'\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              value={confirmPassword}\r\n              required\r\n              className={styles.input}\r\n            />\r\n            {error && <div className={styles.error_msg}>{error}</div>}\r\n            <button type='submit' className={styles.green_btn}>\r\n              Rejestracja\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react';\r\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom'\r\n\r\nimport Layout from './components/Layout';\r\nimport TasksPage from './views/TasksPage/TasksPage';\r\nimport View2 from './views/View2/View2';\r\nimport View3 from './views/View3/View3';\r\nimport View4 from './views/View4/View4';\r\nimport Calculator from './views/Calculator/Calculator';\r\nimport Login from './views/Auth/Login/Login';\r\nimport Signup from './views/Auth/Signup/Signup';\r\nimport './App.scss';\r\n\r\nconst App: React.FC = () => {\r\n\r\n  const user = localStorage.getItem(\"token\");\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n         {user && <Route element={<Layout />}>\r\n          <Route path=\"/\" element={<TasksPage />} />\r\n          <Route path='/calculator' element={<Calculator />} />\r\n          <Route path='/View-2' element={<View2 />} />\r\n          <Route path='/View-3' element={<View3 />} />\r\n          <Route path='/View-4' element={<View4 />} />\r\n         </Route>}\r\n        <Route path=\"/signup\" element={<Signup />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/\" element={<Navigate replace to=\"/login\" />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\nimport { boardApi } from './api/boards'\r\nimport { listsApi } from './api/lists'\r\nimport { cardsApi } from './api/cards'\r\nimport { filesApi } from './api/files'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [boardApi.reducerPath]: boardApi.reducer,\r\n    [listsApi.reducerPath]: listsApi.reducer,\r\n    [cardsApi.reducerPath]: cardsApi.reducer,\r\n    [filesApi.reducerPath]: filesApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(\r\n      boardApi.middleware,\r\n      listsApi.middleware,\r\n      cardsApi.middleware,\r\n      filesApi.middleware,\r\n    ),\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from './store/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles_sidebar__xK0YJ\",\"sidebarHidden\":\"styles_sidebarHidden__XUE84\",\"logo\":\"styles_logo__2pM0Q\",\"navButton\":\"styles_navButton__3BNKT\",\"navButtonHidden\":\"styles_navButtonHidden__pISeR\",\"linksContainer\":\"styles_linksContainer__3Ym__\",\"navItem\":\"styles_navItem__TbxPM\",\"navLink\":\"styles_navLink__VPAcP\",\"icon\":\"styles_icon__rSpbJ\",\"active\":\"styles_active__20cX5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3lg78\",\"card\":\"styles_card__2Vpi0\",\"cardContainer\":\"styles_cardContainer__v6erv\",\"cardClickableArea\":\"styles_cardClickableArea__2gAoQ\",\"cardDetails\":\"styles_cardDetails__3JrV1\",\"textarea\":\"styles_textarea__3yOuz\",\"btnContainer\":\"styles_btnContainer__1CdlS\",\"cardLabels\":\"styles_cardLabels__2XYfY\",\"cardLabel\":\"styles_cardLabel__1QOow\",\"iconsContainer\":\"styles_iconsContainer__oeQXm\",\"dateContainer\":\"styles_dateContainer__1awiA\",\"dateBtn\":\"styles_dateBtn__MHftz\",\"icons\":\"styles_icons__F6ETe\",\"cardCover\":\"styles_cardCover__24RG5\",\"actionsContainer\":\"styles_actionsContainer__1tq7E\",\"actionsPopup\":\"styles_actionsPopup__9CHs8\",\"actionsPopupContent\":\"styles_actionsPopupContent__6q6i1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup_container\":\"styles_signup_container__3Qv_o\",\"signup_form_container\":\"styles_signup_form_container__36bcJ\",\"left\":\"styles_left__2itKc\",\"right\":\"styles_right__11xPU\",\"form_container\":\"styles_form_container__36AuC\",\"input\":\"styles_input__2NZ1J\",\"error_msg\":\"styles_error_msg__3VqCZ\",\"white_btn\":\"styles_white_btn__3HZFD\",\"green_btn\":\"styles_green_btn__1Uver\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__29G3F\",\"listHeader\":\"styles_listHeader__358ey\",\"textareaWrapper\":\"styles_textareaWrapper__1NuQ1\",\"textarea\":\"styles_textarea__2eU67\",\"cardsContainer\":\"styles_cardsContainer__3CxCn\",\"addCardForm\":\"styles_addCardForm__2mFwc\",\"popupContent\":\"styles_popupContent__3PjJI\",\"divider\":\"styles_divider__3kOAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_container\":\"styles_login_container__GHDWc\",\"login_form_container\":\"styles_login_form_container__2Xo4o\",\"left\":\"styles_left__2gPmd\",\"form_container\":\"styles_form_container__3fCJf\",\"input\":\"styles_input__3kVbT\",\"error_msg\":\"styles_error_msg__vVm3W\",\"right\":\"styles_right__1aWVK\",\"white_btn\":\"styles_white_btn__2-AOv\",\"green_btn\":\"styles_green_btn__a92sJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideMenu\":\"styles_sideMenu__1WL-5\",\"menuHeader\":\"styles_menuHeader__1I00P\",\"menuOptions\":\"styles_menuOptions__1rfEx\",\"optionsContainer\":\"styles_optionsContainer__2BqBR\",\"description\":\"styles_description__2kWXu\",\"itemBox\":\"styles_itemBox__1g7K5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1yOiC\",\"textarea\":\"styles_textarea__3B3m0\",\"actionsForm\":\"styles_actionsForm__3iZs4\",\"reactColorful\":\"styles_reactColorful__3NUwo\",\"pickerSwatches\":\"styles_pickerSwatches__2TDju\",\"pickerSwatch\":\"styles_pickerSwatch__3UrBc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles_board__1NKs9\",\"container\":\"styles_container__35LdP\",\"listContainer\":\"styles_listContainer__W9gYL\",\"formContainer\":\"styles_formContainer__2R8KT\",\"addListForm\":\"styles_addListForm__1147R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__p2hri\",\"fileImg\":\"styles_fileImg__2ocO6\",\"selectCover\":\"styles_selectCover__3i_rf\",\"fileDetails\":\"styles_fileDetails__3LlYK\",\"fileButtons\":\"styles_fileButtons__2ulLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"styles_layout__3nIik\",\"appbar\":\"styles_appbar__2Y1-N\",\"content\":\"styles_content__3Ehny\",\"pagesContainer\":\"styles_pagesContainer__BB6vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formFile\":\"styles_formFile__2d9Bi\",\"labelFile\":\"styles_labelFile__2P-a9\",\"spanContainer\":\"styles_spanContainer__3Mj05\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1hyU1\",\"textarea\":\"styles_textarea__2Y0rn\",\"actionsForm\":\"styles_actionsForm__4Ypdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"styles_popup__1Gn8a\",\"header\":\"styles_header__1njvo\",\"popupContent\":\"styles_popupContent__A0vyv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskButton\":\"styles_taskButton__25h-I\",\"icon\":\"styles_icon__1Rn7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__8f3XM\",\"boxColor\":\"styles_boxColor__TIz-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1aHB8\",\"items\":\"styles_items__MgaSQ\"};"],"sourceRoot":""}