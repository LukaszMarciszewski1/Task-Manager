{"version":3,"sources":["components/Appbar/styles.module.scss","components/Details/Button/styles.module.scss","components/Tasks/BoardHeader/styles.module.scss","components/Details/IconButton/styles.module.scss","components/Details/Loading/styles.module.scss","components/Tasks/Card/CardModal/styles.module.scss","assets/defaultImg.jpg","assets/defaultColors.jpg","assets/defaultBackground.jpg","components/Tasks/localData.ts","store/api/boards.ts","components/Sidebar/Sidebar.tsx","components/Details/Button/Button.tsx","context/AuthContext.tsx","components/Appbar/Appbar.tsx","components/Layout.tsx","store/api/lists.ts","store/api/cards.ts","hooks/useOnClickOutside.ts","components/Tasks/TaskButton/TaskButton.tsx","components/Tasks/BoardHeader/BoardHeader.tsx","components/Details/IconButton/IconButton.tsx","components/Tasks/TaskForm/TaskForm.tsx","hooks/useIsFileImage.ts","store/api/files.ts","components/Details/Popup/Popup.tsx","components/Tasks/Card/CardModal/CardModalDetails/Label/Label.tsx","components/Tasks/Card/CardModal/CardModalDetails/Container/Container.tsx","components/Tasks/Card/CardModal/CardModalDetails/LabelForm/LabelForm.tsx","components/Tasks/Card/CardModal/CardModalDetails/FileForm/FileForm.tsx","components/Tasks/Card/CardModal/CardModalDetails/Files/Files.tsx","components/Tasks/Card/CardModal/CardModal.tsx","hooks/useEventListener.ts","hooks/useHover.ts","components/Tasks/Card/Card.tsx","components/Tasks/List/List.tsx","store/api/unsplashApi.ts","components/Tasks/SideMenu/SideMenu.tsx","components/Tasks/Board/Board.tsx","components/Details/Loading/Loading.tsx","views/TasksPage/TasksPage.tsx","views/View2/View2.tsx","views/View3/View3.tsx","views/View4/View4.tsx","views/Calculator/Calculator.tsx","views/Auth/Login/Login.tsx","views/Auth/Signup/Signup.tsx","App.tsx","store/store.ts","index.tsx","components/Sidebar/styles.module.scss","views/Auth/Signup/styles.module.scss","components/Tasks/Card/styles.module.scss","components/Tasks/List/styles.module.scss","views/Auth/Login/styles.module.scss","components/Tasks/SideMenu/styles.module.scss","components/Tasks/Card/CardModal/CardModalDetails/LabelForm/styles.module.scss","components/Tasks/Board/styles.module.scss","components/Tasks/Card/CardModal/CardModalDetails/Files/styles.module.scss","components/styles.module.scss","components/Tasks/Card/CardModal/CardModalDetails/FileForm/styles.module.scss","components/Tasks/TaskForm/styles.module.scss","components/Details/Popup/styles.module.scss","components/Tasks/TaskButton/styles.module.scss","components/Tasks/Card/CardModal/CardModalDetails/Label/styles.module.scss","components/Tasks/Card/CardModal/CardModalDetails/Container/styles.module.scss"],"names":["module","exports","defaultBgIcon","defaultImg","defaultColorIcon","defaultColors","defaultBackground","defaultBg","presetColors","boardApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","process","prepareHeaders","headers","token","JSON","parse","localStorage","getItem","set","tagTypes","endpoints","builder","getAllBoards","query","providesTags","getBoard","id","url","createBoard","mutation","body","method","invalidatesTags","updateBoard","_id","patch","useGetAllBoardsQuery","useGetBoardQuery","useCreateBoardMutation","useUpdateBoardMutation","menuItems","name","path","icon","Sidebar","location","useLocation","useState","isSidebarOpen","setISSidebarOpen","className","styles","sidebar","sidebarHidden","navButton","navButtonHidden","onClick","p","logo","labels","background","linksContainer","map","item","navItem","to","navLink","pathname","active","Button","bgColor","title","type","button","style","backgroundColor","AuthContext","React","createContext","Appbar","navigate","useNavigate","auth","useContext","Error","useAuth","container","removeItem","Layout","children","layout","appbar","content","pagesContainer","listsApi","getAllLists","getList","addList","updateList","deleteList","deleteAllCardsOfList","useAddListMutation","useGetAllListsQuery","useGetListQuery","useUpdateListMutation","useDeleteListMutation","useDeleteAllCardsOfListMutation","cardsApi","getAllCards","getCard","addCard","updateCard","deleteCard","useGetAllCardsQuery","useAddCardMutation","useGetCardQuery","useDeleteCardMutation","useUpdateCardMutation","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","TaskButton","height","margin","taskButton","BoardHeader","width","IconButton","props","iconButton","TaskForm","value","titleBtn","onBlur","onFocus","handleChange","handleSubmit","closeForm","placeholder","form","maxRows","textarea","autoFocus","onChange","onKeyDown","e","key","code","stopPropagation","required","actionsForm","marginRight","isFileImage","match","filesApi","getAllFiles","getFile","uploadFile","deleteFile","downloadFile","useDeleteFileMutation","useGetAllFilesQuery","useGetFileQuery","useUploadFileMutation","useDownloadFileMutation","Popup","trigger","isEditWindow","closePopup","backToMainWindow","refPopup","useRef","popup","header","popupContent","Label","color","cardLabels","handleCheckedLabel","openLabelEditWindow","labelId","activeLabels","filter","label","boxColor","length","Container","data","isDataExist","Array","isArray","undefined","items","LabelForm","handleChangeTitle","handleChangeLabelTitle","handleDeleteLabel","formId","setSelectColor","selectColor","marginBottom","picker","reactColorful","pickerSwatches","slice","presetColor","pickerSwatch","FileForm","listNames","handleInputState","handleSubmitFiles","formFile","labelFile","multiple","hidden","spanContainer","index","nameFileSpan","Files","created","src","handleDeleteFile","handleDownloadFile","handleSelectCover","fileExtension","split","pop","fileImg","alt","selectCover","checked","fileDetails","fileButtons","CardModal","boardId","description","completed","deadline","cover","files","nameList","dateIsSameOrBefore","deadlineIsSoon","cardDateDisplay","cardFileIndex","setCardCompleted","setIsCardWindowOpen","setCardCover","setCardFileIndex","dayjs","locale","registerLocale","pl","board","cards","cardTitle","setCardTitle","cardDescription","setCardDescription","setCardLabels","cardDeadline","setCardDeadline","boardLabels","setBoardLabels","labelTitle","setLabelTitle","isDescriptionFormOpen","setIsDescriptionFormOpen","isLabelEditPopupOpen","setIsLabelEditPopupOpen","isAddNewLabelPopupOpen","setIsAddNewLabelPopupOpen","currentLabelTitle","setCurrentLabelTitle","currentLabelId","setCurrentLabelId","currentLabelColor","setCurrentLabelColor","labelsTrigger","setLabelsTrigger","dateTrigger","setDateTrigger","fileTrigger","setFileTrigger","valuationTrigger","setValuationTrigger","storageTrigger","setStorageTrigger","selectedFiles","setSelectedFiles","selectedNameFiles","setSelectedNameFiles","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","refModal","handleUploadFiles","useCallback","from","arr","i","push","a","preventDefault","formData","FormData","append","uploadFileOptions","onUploadProgress","progressEvent","loaded","total","percent","Math","floor","axios","post","then","res","setTimeout","catch","error","console","log","fileUrl","get","responseType","filename","replace","fileDownload","modal","cardModal","cardModalCover","newWindow","window","open","opener","closeModalBtn","cardModalContainer","cardModalHeader","cardModalHeaderTextarea","cardModalTextareaTitle","select","rows","cardModalContent","cardModalMainContent","cardModalLabel","cardModalSelectedDateBtn","format","dateNotificationSpan","cardModalDescriptionContainer","cardModalDescriptionHeader","maxWidth","marginLeft","filesContainer","file","fileName","createdAt","fileType","fileId","cardModalSidebar","cardModalLabels","newLabels","newLabelsBoardState","card","newBoardLabelsState","newCardLabelsState","cardModalLabelsList","activeLabel","activeLabelTitle","toString","activeLabelColor","handleGetCurrentEditLabel","newCardLabels","newLabel","existLabel","find","newStateLabels","dateFormat","timeFormat","selected","Date","date","inline","showTimeInput","timeInputLabel","size","strokeWidth","strokeColor","divider","useIsomorphicLayoutEffect","useLayoutEffect","useEventListener","eventName","element","savedHandler","targetElement","eventListener","useHover","elementRef","setValue","Card","setIsDragDisabled","isCardModalOpen","setIsCardModalOpen","setIsDisplayEditIcon","cardCompleted","now","nowDate","setNowDate","cardCover","cardFiles","setCardFiles","extend","isSameOrBefore","duration","relativeTime","intervalIsSameOrBefore","setInterval","clearInterval","displayCover","newFiles","filesOnlyImages","selectedCover","activeIndex","indexOf","indexOnlyImages","findIndex","handleMouseEnter","handleMouseLeave","handleOpenCardModal","handleChangeCompleted","timeToDeadline","diff","fromNow","iconStyle","fontSize","hoverRef","isHover","draggableId","provided","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","cardContainer","cardClickableArea","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","cardDetails","cardLabel","iconsContainer","dateBtn","icons","List","listTitle","setListTitle","isCardFormOpen","setIsCardFormOpen","isTitleFormOpen","setIsTitleFormOpen","isDragDisabled","popupTrigger","setPopupTrigger","handleChangeListTitle","handleAddCardTitle","handleOnKeyDownListTitle","handleAddCard","listId","handleDeleteAllCardsOfList","handleDeleteList","handleSortCardsByDate","sortedCards","newCards","sort","b","String","list","listHeader","textareaWrapper","droppableId","droppableProps","cardsContainer","addCardForm","getImages","page","random","urlImages","photos","results","image","thumb","urls","full","user","username","link","links","html","SideMenu","handleCloseMenu","setBackgroundUrl","optionColors","setOptionsColors","optionImages","setOptionsImages","images","setImages","getListOfImages","listImages","sideMenu","menuHeader","menuOptions","itemBox","optionsContainer","photo","Board","lists","backgroundApi","setBackground","isOpenForm","setIsOpenForm","isOpenSideMenu","setIsOpenSideMenu","setLists","formRef","boardBG","boardBackgroundStyle","onDragEnd","result","destination","source","newLists","splice","removed","sourceList","destinationList","updateState","newState","obj","o","startCards","finishCards","startState","direction","listContainer","formContainer","addListForm","Loading","loadingContainer","TasksPage","isLoading","useParams","View2","View3","View4","Calculator","Login","email","password","setEmail","setPassword","setError","loading","setLoading","config","setItem","stringify","href","login_container","login_form_container","left","form_container","onSubmit","input","error_msg","green_btn","right","white_btn","Signup","setName","confirmPassword","setConfirmPassword","response","status","message","signup_container","signup_form_container","App","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d5333470.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2iRdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__1Radr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2SZpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"styles_iconButton__7QADk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"loadingContainer\":\"styles_loadingContainer__1_DHo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"styles_modal__PaFSK\",\"cardModal\":\"styles_cardModal__1hBiL\",\"cardModalContainer\":\"styles_cardModalContainer__2Q2Ad\",\"cardModalHeader\":\"styles_cardModalHeader__3M-Vq\",\"cardModalHeaderTextarea\":\"styles_cardModalHeaderTextarea__zDm5h\",\"cardModalTextareaTitle\":\"styles_cardModalTextareaTitle__1ffID\",\"cardModalContent\":\"styles_cardModalContent__6p4AF\",\"cardModalMainContent\":\"styles_cardModalMainContent__31ywS\",\"cardModalDescriptionContainer\":\"styles_cardModalDescriptionContainer__3tssZ\",\"cardModalDescriptionHeader\":\"styles_cardModalDescriptionHeader__1UO1F\",\"actionsForm\":\"styles_actionsForm__17ri-\",\"cardModalSidebar\":\"styles_cardModalSidebar__3k_db\",\"divider\":\"styles_divider__b0TFE\",\"cardModalLabels\":\"styles_cardModalLabels__2oIDU\",\"cardModalLabelsList\":\"styles_cardModalLabelsList__BY2o7\",\"cardModalLabel\":\"styles_cardModalLabel__3uh4c\",\"dateNotificationSpan\":\"styles_dateNotificationSpan__3oLBx\",\"cardModalSelectedDateBtn\":\"styles_cardModalSelectedDateBtn__36P1C\",\"filesContainer\":\"styles_filesContainer__1X4Tk\",\"cardModalCover\":\"styles_cardModalCover__29Bx9\",\"closeModalBtn\":\"styles_closeModalBtn__251_w\"};","export default __webpack_public_path__ + \"static/media/defaultImg.2975b1de.jpg\";","export default __webpack_public_path__ + \"static/media/defaultColors.f397083e.jpg\";","export default __webpack_public_path__ + \"static/media/defaultBackground.e2f35727.jpg\";","import defaultImg from '../../assets/defaultImg.jpg'\r\nimport defaultColors from '../../assets/defaultColors.jpg'\r\nimport defaultBg from '../../assets/defaultBackground.jpg'\r\n\r\nexport const defaultBgIcon = defaultImg\r\nexport const defaultColorIcon = defaultColors\r\nexport const defaultBackground = defaultBg\r\nexport const presetColors = [\r\n  '#FB8B24',\r\n  '#9575cd',\r\n  '#F36935',\r\n  '#EA4746',\r\n  '#AE0366',\r\n  '#53416B',\r\n  '#ba68c8',\r\n  '#2F8278',\r\n  '#C5D86D',\r\n  '#30B68E',\r\n  '#A2D2FF',\r\n  '#FFDAB9',\r\n  '#3f3c3c',\r\n  '#e1e1e1',\r\n]\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { Board } from '../../models/board'\r\n\r\ntype BoardResponse = Board[]\r\n\r\nexport const boardApi = createApi({\r\n  reducerPath: 'boardApi',\r\n  baseQuery: fetchBaseQuery({ \r\n    baseUrl: process.env.REACT_APP_API_URL,\r\n    prepareHeaders: (headers) => {\r\n      const {token} = JSON.parse(localStorage.getItem('token') || '{}');\r\n      if (token) {\r\n        headers.set('authorization', `Bearer ${token}`)\r\n      }\r\n      return headers\r\n    },\r\n  }),\r\n  tagTypes: ['Board'],\r\n  endpoints: (builder) => ({\r\n    getAllBoards: builder.query<BoardResponse, void>({\r\n      query: () => `boards`,\r\n      providesTags: ['Board'],\r\n    }),\r\n    getBoard: builder.query<Board, string>({\r\n      query: (id) => {\r\n        return {\r\n          url: `boards/${id}`,\r\n        }\r\n      },\r\n      providesTags: ['Board'],\r\n    }),\r\n    createBoard: builder.mutation<Board, Partial<Board>>({\r\n      query: (body: {}) => ({\r\n        url: 'boards',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Board'],\r\n    }),\r\n    updateBoard: builder.mutation<Board, Partial<Board>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `boards/${_id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Board'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useCreateBoardMutation,\r\n  useUpdateBoardMutation,\r\n} = boardApi\r\n","import React, { useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport styles from './styles.module.scss'\r\n\r\nimport { MdArrowForwardIos } from \"react-icons/md\";\r\nimport { CgCalculator } from \"react-icons/cg\";\r\nimport { GiDeliveryDrone } from \"react-icons/gi\";\r\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\r\nimport { IoLogoJavascript } from \"react-icons/io\";\r\nimport { CgComponents } from \"react-icons/cg\";\r\nimport { GrTask } from \"react-icons/gr\";\r\n\r\nimport { defaultBackground } from '../../components/Tasks/localData'\r\n\r\nimport { useCreateBoardMutation } from '../../store/api/boards'\r\n\r\nconst menuItems = [\r\n  {\r\n    name: 'Zadania',\r\n    path: '/',\r\n    icon: <GrTask />\r\n  },\r\n  {\r\n    name: 'Kalkulator',\r\n    path: '/calculator',\r\n    icon: <CgCalculator />\r\n  },\r\n  {\r\n    name: 'Materiały',\r\n    path: '/View-2',\r\n    icon: <CgComponents />\r\n  },\r\n  {\r\n    name: 'Dostawcy',\r\n    path: '/View-3',\r\n    icon: <GiDeliveryDrone />\r\n  },\r\n  {\r\n    name: 'Informacje',\r\n    path: '/View-4',\r\n    icon: <AiOutlineInfoCircle />\r\n  },\r\n]\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const [createBoard] = useCreateBoardMutation()\r\n  const location = useLocation()\r\n  const [isSidebarOpen, setISSidebarOpen] = useState(true)\r\n\r\n  return (\r\n    <nav className={`${styles.sidebar} ${isSidebarOpen ? styles.sidebarHidden : styles.sidebar}`}>\r\n      <button\r\n        className={`${styles.navButton} ${isSidebarOpen ? styles.navButton : styles.navButtonHidden}`}\r\n        onClick={() => setISSidebarOpen((p) => !p)}>\r\n        <MdArrowForwardIos />\r\n      </button>\r\n      <div className={styles.logo} onClick={() => createBoard({\r\n        labels: [],\r\n        background: defaultBackground\r\n      })}><IoLogoJavascript /></div>\r\n      <ul className={styles.linksContainer}>\r\n        {menuItems.map((item) => (\r\n          <li key={item.name}\r\n            className={styles.navItem}\r\n          >\r\n            <Link\r\n              to={item.path}\r\n            >\r\n              <div className={`${styles.navLink} ${location.pathname === item.path ? styles.active : styles.navLink}`}>\r\n                <div className={styles.icon}>{item.icon}</div>\r\n                <p>{!isSidebarOpen ? item.name : null}</p>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface ButtonProps {\r\n  onClick?: (e: any) => void\r\n  title?: string\r\n  bgColor?: string\r\n  type: \"button\" | \"submit\" | \"reset\" | undefined\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({ onClick, bgColor, title, type }) => (\r\n  <button\r\n    className={styles.button}\r\n    onClick={onClick}\r\n    type={type}\r\n    style={{ backgroundColor: `${bgColor}` }}>\r\n    {title}\r\n  </button>\r\n)\r\n\r\nexport default Button\r\n","import React, { useContext, useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n// import { useNavigate } from 'react-router-dom'\r\n// type ContextProviderProps = {\r\n//   children: React.ReactNode\r\n// }\r\n\r\nconst AuthContext = React.createContext({})\r\n\r\nexport const AuthProvider: React.FC = ({ children }) => {\r\n  const [user, setUser] = useState(null)\r\n  const [error, setError] = useState(false)\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user}}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  )\r\n}\r\n\r\nexport const useAuth = () => {\r\n  const auth = useContext(AuthContext)\r\n  if (!auth) {\r\n    throw Error('useAuth needs to be used inside AuthContext')\r\n  }\r\n\r\n  return auth\r\n}","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport Button from '../Details/Button/Button'\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { useAuth } from '../../context/AuthContext'\r\n\r\nconst Appbar: React.FC = () => {\r\n  let navigate = useNavigate()\r\n  const auth = useAuth()\r\n  return (\r\n    <div className={styles.container}>\r\n      <Button\r\n        title={'Wyloguj'}\r\n        onClick={() => {\r\n          localStorage.removeItem('token')\r\n          navigate(\"/login\")\r\n        }}\r\n        type={'button'} />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport Sidebar from './Sidebar/Sidebar'\r\nimport Appbar from './Appbar/Appbar'\r\nimport { Outlet } from 'react-router-dom';\r\n\r\nconst Layout: React.FC = ({ children }) => {\r\n  return (\r\n    <div className={styles.layout}>\r\n      <div className={styles.appbar}>\r\n        <Appbar />\r\n      </div>\r\n      <div className={styles.content}>\r\n        <Sidebar />\r\n        <div className={styles.pagesContainer}>\r\n          <Outlet />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { List } from '../../models/list'\r\n\r\ntype ListResponse = List[]\r\n\r\nexport const listsApi = createApi({\r\n  reducerPath: 'listApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_API_URL }),\r\n  tagTypes: ['List'],\r\n  endpoints: (builder) => ({\r\n    getAllLists: builder.query<ListResponse, void>({\r\n      query: () => `lists`,\r\n      providesTags: ['List'],\r\n    }),\r\n    getList: builder.query<List, string>({\r\n      query: (id) => `lists/${id}`,\r\n      providesTags: ['List'],\r\n    }),\r\n    addList: builder.mutation<List, Partial<List>>({\r\n      query: (body: {}) => ({\r\n        url: 'lists',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    updateList: builder.mutation<List, Partial<List>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `lists/${_id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    deleteList: builder.mutation<{ success: boolean; id: string | number }, string>({\r\n      query: (id) => ({\r\n        url: `lists/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    deleteAllCardsOfList: builder.mutation<List, Partial<List>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `lists/${_id}/cards`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllListsQuery,\r\n  useGetListQuery,\r\n  useAddListMutation,\r\n  useUpdateListMutation,\r\n  useDeleteListMutation,\r\n  useDeleteAllCardsOfListMutation,\r\n} = listsApi\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { Card } from '../../models/card'\r\n\r\ntype CardsResponse = Card[]\r\n\r\nexport const cardsApi = createApi({\r\n  reducerPath: 'cardsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_API_URL }),\r\n  tagTypes: ['Cards'],\r\n  endpoints: (builder) => ({\r\n    getAllCards: builder.query<CardsResponse, void>({\r\n      query: () => `cards`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    getCard: builder.query<Card, string>({\r\n      query: (id) => `cards/${id}`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    addCard: builder.mutation<Card, Partial<Card>>({\r\n      query: (body: {}) => ({\r\n        url: 'cards',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    updateCard: builder.mutation<Card, Partial<Card>>({\r\n      query: ({ _id, ...patch }) => ({\r\n        url: `cards/${_id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    deleteCard: builder.mutation<{ success: boolean; id: string }, string>({\r\n      query: (id) => ({\r\n        url: `cards/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllCardsQuery,\r\n  useGetCardQuery,\r\n  useAddCardMutation,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n} = cardsApi\r\n","import { RefObject, useEffect } from 'react'\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent\r\n\r\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void,\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current\r\n\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return\r\n      }\r\n\r\n      handler(event)\r\n    }\r\n\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n\r\n  }, [ref, handler])\r\n}\r\n\r\nexport default useOnClickOutside","import React from 'react'\r\nimport styles from './styles.module.scss'\r\ninterface TaskButtonProps {\r\n  icon?: {}\r\n  height?: string\r\n  margin?: string\r\n  name: string\r\n  onClick: () => void\r\n}\r\n\r\nconst TaskButton: React.FC<TaskButtonProps> = ({ onClick, name, icon, height, margin }) => {\r\n  return (\r\n    <button style={{height: height, margin: margin}} className={styles.taskButton} onClick={onClick}>\r\n      <div className={styles.icon}>{icon}</div>\r\n      {name}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default TaskButton\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport TaskButton from '../TaskButton/TaskButton'\r\nimport { BsImage } from \"react-icons/bs\";\r\n\r\ntype BoardHeaderProps = {\r\n  name: string\r\n  onClick: () => void\r\n}\r\n\r\nconst BoardHeader: React.FC<BoardHeaderProps> = ({ name, onClick }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div style={{ width: '130px' }}>\r\n        <TaskButton onClick={onClick} name={name} icon={<BsImage />} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardHeader","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface IconButtonProps {\r\n  onClick?: () => void;\r\n  icon?: any,\r\n  title?: string,\r\n  padding?: string\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = (props) => (\r\n  <button\r\n    className={styles.iconButton}\r\n    onClick={props.onClick}\r\n    type='button'\r\n  >\r\n    {props.children}\r\n  </button>\r\n)\r\n\r\nexport default IconButton\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport Button from '../../Details/Button/Button'\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\n\r\ninterface TaskFormProps {\r\n  id: string\r\n  handleSubmit: (value: any) => void\r\n  handleChange: (value: any) => void\r\n  closeForm: () => void\r\n  onFocus?: (value: any) => void\r\n  onBlur?: () => void\r\n  value: string\r\n  titleBtn: string\r\n}\r\n\r\nconst TaskForm: React.FC<TaskFormProps> = ({ value, id, titleBtn, onBlur, onFocus, handleChange, handleSubmit, closeForm }) => {\r\n  const placeholder = id === 'list' ? 'Dodaj listę zadań' : 'Dodaj nową kartę'\r\n\r\n  const onKeyDown = (e: React.KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    if (e.key === 'Enter' || e.code === \"NumpadEnter\") {\r\n      e.stopPropagation();\r\n      handleSubmit(e)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <form className={styles.form} >\r\n      <TextareaAutosize\r\n        id={id}\r\n        maxRows={20}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={styles.textarea}\r\n        autoFocus={true}\r\n        onChange={handleChange}\r\n        onBlur={onBlur}\r\n        onFocus={onFocus}\r\n        onKeyDown={onKeyDown}\r\n        required\r\n      />\r\n      <div className={styles.actionsForm}>\r\n        <Button title={titleBtn} type={'submit'} onClick={handleSubmit} />\r\n        <div style={{ marginRight: '16px' }} />\r\n        <IconButton onClick={closeForm}><BsXLg /></IconButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm\r\n","export const isFileImage = (url: string) => {\r\n  if (typeof url !== 'string') {\r\n    return false\r\n  }\r\n  return (\r\n    url.match(/^http[^\\?]*.(jpg|jpeg|gif|png|tiff|bmp|webp)(\\?(.*))?$/gim) !==\r\n    null\r\n  )\r\n}\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport { File } from '../../models/file'\r\n\r\ntype FilesResponse = File[]\r\n\r\nexport const filesApi = createApi({\r\n  reducerPath: 'filesApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: process.env.REACT_APP_API_URL }),\r\n  tagTypes: ['Files'],\r\n  endpoints: (builder) => ({\r\n    getAllFiles: builder.query<FilesResponse, void>({\r\n      query: () => `files`,\r\n      providesTags: ['Files'],\r\n    }),\r\n    getFile: builder.query<File, string>({\r\n      query: (id) => `files/${id}`,\r\n      providesTags: ['Files'],\r\n    }),\r\n    uploadFile: builder.mutation<FilesResponse, Partial<File>>({\r\n      query: (body: {}) => ({\r\n        url: `files`,\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Files'],\r\n    }),\r\n    deleteFile: builder.mutation<{ success: boolean; id: string | number },string>({\r\n      query: (id) => ({\r\n        url: `files/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Files'],\r\n    }),\r\n    downloadFile: builder.mutation<{ success: boolean; id: string | number },string>({\r\n      query: (id) => ({\r\n        url: `files/${id}`,\r\n        method: 'GET',\r\n      }),\r\n      invalidatesTags: ['Files'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllFilesQuery,\r\n  useGetFileQuery,\r\n  useUploadFileMutation,\r\n  useDeleteFileMutation,\r\n  useDownloadFileMutation,\r\n} = filesApi\r\n","import React, { useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport IconButton from '../IconButton/IconButton'\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport { MdOutlineArrowBackIos } from \"react-icons/md\";\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside'\r\n\r\ntype Props = {\r\n  trigger?: boolean\r\n  title: string\r\n  isEditWindow?: boolean\r\n  closePopup: () => void\r\n  backToMainWindow?: () => void\r\n}\r\nconst Popup: React.FC<Props> = ({ children, trigger, title, isEditWindow, closePopup, backToMainWindow }) => {\r\n  const refPopup = useRef(null)\r\n  useOnClickOutside(refPopup, closePopup)\r\n  \r\n  return (\r\n    trigger ? (\r\n      <div className={styles.popup} ref={refPopup}>\r\n        <div className={styles.header}>\r\n          {isEditWindow ? <IconButton onClick={backToMainWindow}><MdOutlineArrowBackIos /></IconButton> : null}\r\n          <h3>{title}</h3>\r\n          <IconButton onClick={closePopup}><BsXLg /></IconButton>\r\n        </div>\r\n        <div className={styles.popupContent}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    ) : null\r\n  )\r\n}\r\n\r\nexport default Popup","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { BiCheck } from 'react-icons/bi';\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport IconButton from '../../../../../Details/IconButton/IconButton'\r\n\r\ninterface LabelProps {\r\n  labelId: string\r\n  title: string\r\n  color: string\r\n  cardLabels: {\r\n    _id: string\r\n    active: boolean\r\n    color: string\r\n    title: string\r\n  }[]\r\n  handleCheckedLabel: (value: any) => void\r\n  openLabelEditWindow: () => void\r\n}\r\n\r\nconst Label: React.FC<LabelProps> = ({ title, color, cardLabels, handleCheckedLabel, openLabelEditWindow, labelId }) => {\r\n  const activeLabels = cardLabels.filter((label: { _id: string }) => label._id === labelId)\r\n  return (\r\n    <div className={styles.container}>\r\n      <div onClick={handleCheckedLabel} style={{ background: `${color}` }} className={styles.boxColor}>\r\n        <p>{title}</p>\r\n        {activeLabels.length ? < BiCheck style={{ color: 'white' }} /> : null}\r\n      </div>\r\n      <IconButton onClick={openLabelEditWindow}><BsPencil /></IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Label","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ntype Props = {\r\n  data: any\r\n  children: JSX.Element | JSX.Element[];\r\n  title: string\r\n}\r\n\r\nconst Container: React.FC<Props> = ({ children, title, data }) => {\r\n  const isDataExist = Array.isArray(data) ? (data.length ? true : false) : (data === null || data === undefined ? false : true)\r\n  return (\r\n    <>\r\n      {\r\n        isDataExist ? (\r\n          <div className={styles.container}>\r\n            <h4>{title}</h4>\r\n            <div className={styles.items}>\r\n              {children}\r\n            </div>\r\n          </div>\r\n        ) : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Container","import React from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\nimport Button from '../../../../../Details/Button/Button'\r\nimport { HexColorPicker } from \"react-colorful\";\r\nimport { presetColors } from '../../../../localData'\r\ninterface LabelProps {\r\n  formId: string\r\n  value: string | undefined\r\n  selectColor: string\r\n  handleChangeLabelTitle: (value: any) => void\r\n  handleChangeTitle: (value: any) => void\r\n  onFocus?: (value: any) => void\r\n  handleDeleteLabel: () => void\r\n  setSelectColor: (value: string) => void\r\n}\r\n\r\nconst LabelForm: React.FC<LabelProps> = ({\r\n  handleChangeTitle,\r\n  handleChangeLabelTitle,\r\n  handleDeleteLabel,\r\n  value,\r\n  formId,\r\n  onFocus,\r\n  setSelectColor,\r\n  selectColor }) => {\r\n  const placeholder = 'Dodaj nazwę etykiety...'\r\n\r\n  return (\r\n    <form className={styles.form}>\r\n      <p style={{ marginBottom: '5px' }}>Nazwa</p>\r\n      <TextareaAutosize\r\n        id={formId}\r\n        maxRows={20}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={styles.textarea}\r\n        autoFocus\r\n        onChange={handleChangeTitle}\r\n        onFocus={onFocus}\r\n      />\r\n      <p style={{ marginBottom: '5px' }}>Wybierz kolor</p>\r\n      <div className={styles.picker}>\r\n        <HexColorPicker\r\n          className={styles.reactColorful}\r\n          color={selectColor}\r\n          onChange={setSelectColor}\r\n        />\r\n        <div className={styles.pickerSwatches}>\r\n          {presetColors.slice(0, 14).map((presetColor) => (\r\n            <div\r\n              key={presetColor}\r\n              className={styles.pickerSwatch}\r\n              style={{ background: presetColor }}\r\n              onClick={() => setSelectColor(presetColor)}\r\n            />\r\n          ))}\r\n        </div>\r\n      </div>\r\n      <div className={styles.actionsForm}>\r\n        <Button onClick={handleChangeLabelTitle} title={'Zapisz'} type={'submit'} />\r\n        <div style={{ marginRight: '1rem' }} />\r\n        <Button onClick={handleDeleteLabel} title={'Usuń'} bgColor={'#EA4746'} type={'button'} />\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LabelForm","import React from 'react'\r\nimport { Line } from 'rc-progress';\r\nimport styles from './styles.module.scss'\r\nimport Button from '../../../../../Details/Button/Button'\r\ninterface FileFormProps {\r\n  name: string\r\n  size: number\r\n  label: string\r\n  type: string\r\n  listNames: string[]\r\n  handleSubmitFiles: (value: any) => void\r\n  handleInputState: (value: any) => void\r\n}\r\n\r\nconst FileForm: React.FC<FileFormProps> = ({ name, listNames, type, handleInputState, handleSubmitFiles }) => {\r\n\r\n  return (\r\n    <div >\r\n      <form className={styles.formFile}>\r\n        <label id={\"formId\"} className={styles.labelFile}>\r\n          <input\r\n            id={\"formId\"}\r\n            type={type}\r\n            name={name}\r\n            onChange={handleInputState}\r\n            multiple\r\n            hidden\r\n          />\r\n          Dodaj załączniki\r\n        </label>\r\n        <div className={styles.spanContainer}>\r\n          {\r\n            listNames.map((name, index) => (\r\n              <span key={index} className={styles.nameFileSpan}>{name}</span>\r\n            ))\r\n          }\r\n        </div>\r\n        {\r\n          listNames.length ? (\r\n            <Button onClick={handleSubmitFiles} title={\"Załącz\"} type={'submit'} />\r\n          ) : null\r\n        }\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileForm","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { isFileImage } from '../../../../../../hooks/useIsFileImage'\r\nimport TaskButton from '../../../../TaskButton/TaskButton'\r\ninterface FileProps {\r\n  title: string\r\n  src: string\r\n  created: string\r\n  index: number\r\n  active: number\r\n  type: string\r\n  handleDeleteFile: () => void\r\n  handleDownloadFile: () => void\r\n  handleSelectCover: () => void\r\n}\r\n\r\nconst Files: React.FC<FileProps> = ({ created, title, src, type, index, active, handleDeleteFile, handleDownloadFile, handleSelectCover }) => {\r\n  const fileExtension = type.split('/').pop();\r\n\r\n  return (\r\n    <div className={styles.container} >\r\n      <div className={styles.fileImg}>\r\n        {\r\n          isFileImage(src) ? (\r\n            <>\r\n              <img src={src} className=\"card-img-top img-responsive\" alt=\"img\" />\r\n              <div className={styles.selectCover} title='ustaw okładkę'>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={active === index ? true : false}\r\n                  onChange={handleSelectCover}\r\n                  style={{ height: '100%', width: '1rem', marginRight: '8px' }} />\r\n              </div>\r\n            </>\r\n          ) : (<p>{fileExtension}</p>)\r\n        }\r\n      </div>\r\n      <div className={styles.fileDetails}>\r\n        <h4>{title}</h4>\r\n        <span>{created}</span>\r\n        <div className={styles.fileButtons}>\r\n          <TaskButton height={'25px'} margin={'0 8px 0 0'} onClick={handleDeleteFile} name={'Skasuj'} />\r\n          <TaskButton height={'25px'} margin={'0'} onClick={handleDownloadFile} name={'Pobierz'} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Files","import React, { useState, useRef, useEffect, useCallback } from 'react'\r\nimport axios from 'axios';\r\nimport styles from './styles.module.scss'\r\nimport dayjs from 'dayjs';\r\nimport fileDownload from 'js-file-download'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport TaskForm from '../../TaskForm/TaskForm'\r\nimport IconButton from '../../../Details/IconButton/IconButton';\r\nimport useOnClickOutside from '../../../../hooks/useOnClickOutside'\r\nimport { isFileImage } from '../../../../hooks/useIsFileImage'\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport { BsXLg } from 'react-icons/bs';\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport { BiTask } from 'react-icons/bi';\r\nimport { GrAttachment } from 'react-icons/gr';\r\nimport { BsStopwatch } from 'react-icons/bs';\r\nimport { MdOutlineLabel } from 'react-icons/md';\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { RiDeleteBinLine } from 'react-icons/ri';\r\n\r\nimport {\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n\r\n} from '../../../../store/api/boards'\r\n\r\nimport {\r\n  useGetAllCardsQuery,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n} from \"../../../../store/api/cards\";\r\n\r\nimport {\r\n  useDeleteFileMutation,\r\n} from '../../../../store/api/files'\r\n\r\nimport TaskButton from '../../TaskButton/TaskButton';\r\nimport Popup from '../../../Details/Popup/Popup';\r\nimport Label from './CardModalDetails/Label/Label';\r\nimport Container from './CardModalDetails/Container/Container'\r\nimport LabelForm from './CardModalDetails/LabelForm/LabelForm'\r\nimport Button from '../../../Details/Button/Button';\r\nimport FileForm from './CardModalDetails/FileForm/FileForm'\r\nimport Files from './CardModalDetails/Files/Files';\r\n\r\nimport { Line as ProgressLine } from 'rc-progress';\r\nimport { Card as CardModel } from '../../../../models/card'\r\nimport { Labels as LabelsInterface } from '../../../../models/labels'\r\nimport pl from \"date-fns/locale/pl\";\r\n\r\n\r\ninterface CardModalProps extends CardModel {\r\n  dateIsSameOrBefore: boolean\r\n  deadlineIsSoon: boolean\r\n  cardFileIndex: number\r\n  cardDateDisplay: {\r\n    style: {\r\n      backgroundColor: string\r\n    },\r\n    title: string\r\n    name: string\r\n  }\r\n  setIsCardWindowOpen: () => void\r\n  setCardCompleted: (value: boolean) => void\r\n  setCardCover: (value: string) => void\r\n  setCardFileIndex: (value: number) => void\r\n}\r\n\r\nconst CardModal: React.FC<CardModalProps> = ({\r\n  _id,\r\n  boardId,\r\n  title,\r\n  description,\r\n  completed,\r\n  labels,\r\n  deadline,\r\n  cover,\r\n  files,\r\n  nameList,\r\n  dateIsSameOrBefore,\r\n  deadlineIsSoon,\r\n  cardDateDisplay,\r\n  cardFileIndex,\r\n  setCardCompleted,\r\n  setIsCardWindowOpen,\r\n  setCardCover,\r\n  setCardFileIndex,\r\n}) => {\r\n  dayjs.locale('pl');\r\n  registerLocale(\"pl\", pl);\r\n  const { data: board } = useGetBoardQuery(boardId);\r\n  const { data: cards } = useGetAllCardsQuery()\r\n\r\n  const [updateCard] = useUpdateCardMutation();\r\n  const [deleteCard] = useDeleteCardMutation();\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n  const [deleteFile] = useDeleteFileMutation();\r\n\r\n  const [cardTitle, setCardTitle] = useState<string>(title)\r\n  const [cardDescription, setCardDescription] = useState<string>(description)\r\n  const [cardLabels, setCardLabels] = useState<LabelsInterface[]>(labels)\r\n  const [cardDeadline, setCardDeadline] = useState(deadline)\r\n  const [boardLabels, setBoardLabels] = useState<any>([])\r\n  const [labelTitle, setLabelTitle] = useState('')\r\n  const [isDescriptionFormOpen, setIsDescriptionFormOpen] = useState(false)\r\n  const [isLabelEditPopupOpen, setIsLabelEditPopupOpen] = useState(false)\r\n  const [isAddNewLabelPopupOpen, setIsAddNewLabelPopupOpen] = useState(false)\r\n  const [currentLabelTitle, setCurrentLabelTitle] = useState('')\r\n  const [currentLabelId, setCurrentLabelId] = useState('')\r\n  const [currentLabelColor, setCurrentLabelColor] = useState('')\r\n  const [labelsTrigger, setLabelsTrigger] = useState(false)\r\n  const [dateTrigger, setDateTrigger] = useState(false)\r\n  const [fileTrigger, setFileTrigger] = useState(false)\r\n  const [valuationTrigger, setValuationTrigger] = useState(false)\r\n  const [storageTrigger, setStorageTrigger] = useState(false)\r\n\r\n  const [selectedFiles, setSelectedFiles] = useState<File[]>([]);\r\n  const [selectedNameFiles, setSelectedNameFiles] = useState<string[]>([]);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState<boolean | null>(null)\r\n\r\n  const refModal = useRef(null)\r\n\r\n  useEffect(() => {\r\n    if (board) {\r\n      setBoardLabels(board.labels)\r\n    }\r\n  }, [board])\r\n\r\n  const handleEditCardTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card-title') setCardTitle(e.target.value)\r\n    updateCard({\r\n      _id: _id,\r\n      title: e.target.value\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n  }\r\n\r\n  const handleEditCardDescription = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card-description')\r\n      setCardDescription(e.target.value)\r\n  }\r\n\r\n  const handleSaveCardDescription = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      _id: _id,\r\n      description: cardDescription\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n    setIsDescriptionFormOpen(false)\r\n  }\r\n\r\n  const handleChangeLabelTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'label-title-edit') setCurrentLabelTitle(e.target.value)\r\n    if (e.target.id === 'label-title-add') setLabelTitle(e.target.value)\r\n  }\r\n\r\n  const handleSaveLabelEditing = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    const newLabels = [...boardLabels]\r\n\r\n    if (boardLabels) {\r\n      const newLabelsBoardState = newLabels.map((label) => {\r\n        if (label._id !== currentLabelId) return label;\r\n        return { ...label, title: currentLabelTitle, color: currentLabelColor };\r\n      });\r\n\r\n      cards?.map(card => {\r\n        const newLabels = card.labels.map(label => {\r\n          if (label._id !== currentLabelId) return label;\r\n          return { ...label, title: currentLabelTitle, color: currentLabelColor };\r\n        })\r\n        updateCard({\r\n          _id: card._id,\r\n          labels: newLabels\r\n        })\r\n        setCardLabels(newLabels)\r\n      })\r\n\r\n      setBoardLabels(newLabelsBoardState)\r\n\r\n      updateBoard({\r\n        _id: boardId,\r\n        labels: newLabelsBoardState\r\n      })\r\n      setIsLabelEditPopupOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleAddNewLabel = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    const newLabels = [...boardLabels, { color: currentLabelColor, title: labelTitle, active: false }]\r\n    updateBoard({\r\n      _id: boardId,\r\n      labels: newLabels\r\n    })\r\n    setIsAddNewLabelPopupOpen(false)\r\n  }\r\n\r\n  const handleCheckedLabel = (item: LabelsInterface) => {\r\n    const newCardLabels = [...cardLabels]\r\n    const newLabel = { ...item, active: !item.active };\r\n    const existLabel = newCardLabels.find((label: { _id: string; }) => label._id === newLabel._id)\r\n\r\n    if (existLabel) {\r\n      const newStateLabels = [...cardLabels].filter((label: { _id: string; }) => label._id !== existLabel._id)\r\n      setCardLabels(newStateLabels)\r\n      updateCard({\r\n        _id: _id,\r\n        labels: newStateLabels\r\n      })\r\n    } else {\r\n      const newStateLabels = [...cardLabels, newLabel]\r\n      setCardLabels(newStateLabels)\r\n      updateCard({\r\n        _id: _id,\r\n        labels: newStateLabels\r\n      })\r\n    }\r\n    updateBoard({\r\n      _id: boardId,\r\n    })\r\n  }\r\n\r\n  const handleDeleteLabel = () => {\r\n    const newBoardLabelsState = [...boardLabels].filter((label) => label._id !== currentLabelId);\r\n    cards?.map(card => {\r\n      const newCardLabelsState = card.labels.filter((label) => label._id !== currentLabelId);\r\n      setCardLabels(newCardLabelsState)\r\n      updateCard({\r\n        _id: card._id,\r\n        labels: newCardLabelsState\r\n      })\r\n    })\r\n    setBoardLabels(newBoardLabelsState)\r\n    updateBoard({\r\n      _id: boardId,\r\n      labels: newBoardLabelsState\r\n    })\r\n    setIsLabelEditPopupOpen(false)\r\n  }\r\n\r\n  const handleGetCurrentEditLabel = (id: string) => {\r\n    const newLabels = [...boardLabels]\r\n    const activeLabel = newLabels.filter((label: { _id: string }) => label._id === id)\r\n    const activeLabelTitle = activeLabel.map((label: { title: string }) => label.title).toString()\r\n    const activeLabelColor = activeLabel.map((label: { color: string }) => label.color).toString()\r\n    setCurrentLabelTitle(activeLabelTitle)\r\n    setCurrentLabelColor(activeLabelColor)\r\n    setCurrentLabelId(id)\r\n  }\r\n\r\n  const handleSaveDeadline = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      _id: _id,\r\n      deadline: cardDeadline\r\n    })\r\n    updateBoard({ _id: boardId })\r\n    setDateTrigger(false)\r\n  }\r\n\r\n  const handleDeleteDeadline = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    setCardDeadline(null)\r\n    updateCard({\r\n      _id: _id,\r\n      deadline: null\r\n    })\r\n    updateBoard({ _id: boardId })\r\n    setDateTrigger(false)\r\n  }\r\n\r\n  const handleChangeCompleted = () => {\r\n    setCardCompleted(!completed);\r\n    updateCard({\r\n      _id: _id,\r\n      completed: !completed\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n  };\r\n\r\n  const handleUploadFiles = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const { target: { files } } = e\r\n    if (files !== null) {\r\n      files?.length && setSelectedFiles(Array.from(files))\r\n      const arr = []\r\n      for (let i = 0; i < files.length; i++) {\r\n        arr.push(files[i].name)\r\n        setSelectedNameFiles(arr)\r\n      }\r\n    }\r\n    setUploadStatus(true)\r\n    setUploadProgress(0)\r\n  },\r\n    [],\r\n  );\r\n\r\n  const handleSubmitFiles = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault()\r\n    if (!selectedFiles.length) return;\r\n    if (!uploadStatus) return;\r\n\r\n    const formData = new FormData();\r\n    formData.append('cardId', _id)\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      formData.append('files', selectedFiles[i]);\r\n    }\r\n\r\n    const uploadFileOptions = {\r\n      headers: {\r\n        'content-type': 'multipart/form-data'\r\n      },\r\n      onUploadProgress: (progressEvent: { loaded: number; total: number; }) => {\r\n        const { loaded, total } = progressEvent;\r\n        let percent = Math.floor((loaded * 100) / total)\r\n        setUploadProgress(percent)\r\n      }\r\n    }\r\n\r\n    await axios.post(`${process.env.REACT_APP_API_URL}files`, formData, uploadFileOptions)\r\n      .then(res => {\r\n        updateCard({\r\n          _id: _id,\r\n        })\r\n        updateBoard({\r\n          _id: boardId\r\n        })\r\n        setUploadStatus(true)\r\n        setTimeout(() => {\r\n          setUploadProgress(0)\r\n          setSelectedNameFiles([])\r\n          setFileTrigger(false)\r\n        }, 500)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        setUploadStatus(false)\r\n      })\r\n  }\r\n\r\n  const handleDeleteFile = (fileId: string) => {\r\n    deleteFile(fileId)\r\n    updateCard({\r\n      _id: _id,\r\n      files: files\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n    if (files.length) {\r\n      setCardCover(files[0].fileUrl)\r\n    }\r\n    else {\r\n      setCardCover('')\r\n    }\r\n  }\r\n\r\n  const handleDownloadFile = async (fileUrl: string) => {\r\n    await axios.get(`${fileUrl}`, {\r\n      responseType: 'blob',\r\n    }).then((res) => {\r\n      let filename = fileUrl.replace(/^.*[\\\\\\/]/, '')\r\n      let fileExtension;\r\n      fileExtension = fileUrl.split('.');\r\n      fileExtension = fileExtension[fileExtension.length - 1];\r\n      fileDownload(res.data, `${filename}.${fileExtension}`);\r\n    });\r\n  }\r\n\r\n  const onClickHandler = () => {\r\n    const newWindow = window.open(`${cover}`, \"_blank\", 'noopener,noreferrer');\r\n    if (newWindow) newWindow.opener = null\r\n  }\r\n\r\n  const handleSelectCover = (index: number) => {\r\n    setCardFileIndex(index)\r\n    setCardCover(files[index].fileUrl)\r\n    updateCard({\r\n      _id: _id,\r\n      cover: files[index].fileUrl\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n  }\r\n\r\n  useOnClickOutside(refModal, setIsCardWindowOpen)\r\n\r\n  return (\r\n    <>\r\n      <div className={styles.modal} onClick={setIsCardWindowOpen}></div>\r\n      <div ref={refModal} className={styles.cardModal}>\r\n        {\r\n          cover && isFileImage(cover) ? (\r\n            <div className={styles.cardModalCover} >\r\n              <img onClick={onClickHandler} src={cover} alt={cover} />\r\n            </div>\r\n          ) : null\r\n        }\r\n\r\n        <div className={styles.closeModalBtn}>\r\n          <IconButton onClick={setIsCardWindowOpen}><BsXLg /></IconButton>\r\n        </div>\r\n        <div className={styles.cardModalContainer}>\r\n          <div className={styles.cardModalHeader}>\r\n            <div className={styles.cardModalHeaderTextarea}>\r\n              <TextareaAutosize\r\n                id='card-title'\r\n                autoFocus={false}\r\n                value={cardTitle}\r\n                className={styles.cardModalTextareaTitle}\r\n                onChange={handleEditCardTitle}\r\n                onFocus={(e) => e.target.select()}\r\n                rows={20}\r\n                required\r\n              />\r\n              <p>Na liscie: <strong>{nameList}</strong></p>\r\n            </div>\r\n          </div>\r\n          <div className={styles.cardModalContent}>\r\n            <div className={styles.cardModalMainContent}>\r\n              <Container data={cardLabels} title={'Etykiety'}>\r\n                {\r\n                  cardLabels.map((label: { title: string; active: any; color: any; _id: string }) => (\r\n                    <div\r\n                      key={label._id}\r\n                      style={{ backgroundColor: `${label.color}` }}\r\n                      className={styles.cardModalLabel}\r\n                      onClick={() => setLabelsTrigger(true)}\r\n                    >\r\n                      <span>{label.title}</span>\r\n                    </div>\r\n                  ))\r\n                }\r\n              </Container>\r\n              <Container data={deadline} title={'Termin'}>\r\n                <>\r\n                  {\r\n                    deadline ? (\r\n                      <>\r\n                        <input\r\n                          type=\"checkbox\"\r\n                          checked={completed}\r\n                          onChange={handleChangeCompleted}\r\n                          style={{ height: '100%', width: '1rem', marginRight: '8px' }} />\r\n                        <button onClick={() => setDateTrigger(true)}\r\n                          className={styles.cardModalSelectedDateBtn}>\r\n                          <span>{dayjs(deadline).format('DD-MM-YYYY HH:mm')}</span>\r\n                          {\r\n                            dateIsSameOrBefore && !completed ? (\r\n                              <span\r\n                                title={cardDateDisplay.title}\r\n                                style={{ backgroundColor: cardDateDisplay.style.backgroundColor }} className={styles.dateNotificationSpan}>\r\n                                {cardDateDisplay.name}\r\n                              </span>\r\n                            ) : null\r\n                          }\r\n                          {\r\n                            deadlineIsSoon && !completed ? (\r\n                              <span\r\n                                title={cardDateDisplay.title}\r\n                                style={{ backgroundColor: cardDateDisplay.style.backgroundColor }} className={styles.dateNotificationSpan}>\r\n                                {cardDateDisplay.name}\r\n                              </span>\r\n                            ) : null\r\n                          }\r\n                          {\r\n                            completed ? (\r\n                              <span\r\n                                title={cardDateDisplay.title}\r\n                                style={{ backgroundColor: cardDateDisplay.style.backgroundColor }} className={styles.dateNotificationSpan}>\r\n                                {cardDateDisplay.name}\r\n                              </span>\r\n                            ) : null\r\n                          }\r\n                        </button>\r\n                      </>\r\n                    ) : null\r\n                  }\r\n                </>\r\n              </Container>\r\n              <div className={styles.cardModalDescriptionContainer}>\r\n                <div className={styles.cardModalDescriptionHeader}>\r\n                  <h4>Opis</h4>\r\n                  <div style={{ maxWidth: '100px', marginLeft: '1rem' }}>\r\n                    {\r\n                      !isDescriptionFormOpen && cardDescription !== undefined && cardDescription !== '' ? (\r\n                        <TaskButton onClick={() => setIsDescriptionFormOpen(true)} name={'Edytuj'} icon={<BsPencil />} />\r\n                      ) : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n                {\r\n                  isDescriptionFormOpen ?\r\n                    <TaskForm\r\n                      id={'card-description'}\r\n                      handleChange={handleEditCardDescription}\r\n                      handleSubmit={handleSaveCardDescription}\r\n                      closeForm={() => { setIsDescriptionFormOpen(false); setCardDescription(description) }}\r\n                      value={cardDescription}\r\n                      onFocus={(e) => e.target.select()}\r\n                      titleBtn={'Zapisz'}\r\n                    /> :\r\n                    <div>\r\n                      {cardDescription !== '' && cardDescription !== undefined ? <p onClick={() => setIsDescriptionFormOpen(true)}>{cardDescription}</p> :\r\n                        <TaskButton onClick={() => setIsDescriptionFormOpen(true)} name={'Dodaj opis...'} icon={<IoMdAdd />} />}\r\n                    </div>\r\n                }\r\n              </div>\r\n              <Container data={files} title={'Załącznik'}>\r\n                <div className={styles.filesContainer}>\r\n                  {\r\n                    files?.map((file: { _id: string; fileName: string; createdAt: string; fileUrl: string; fileType: string }, index: number) => (\r\n                      <Files\r\n                        key={file._id}\r\n                        title={file.fileName}\r\n                        created={`Dodano ${dayjs(file.createdAt).format('DD MMM')} o ${dayjs(file.createdAt).format('HH:mm')}`}\r\n                        active={cardFileIndex}\r\n                        index={index}\r\n                        src={`${file.fileUrl}`}\r\n                        type={file.fileType}\r\n                        handleDeleteFile={() => handleDeleteFile(file._id)}\r\n                        handleDownloadFile={() => handleDownloadFile(file.fileUrl)}\r\n                        handleSelectCover={() => handleSelectCover(index)}\r\n                      />\r\n                    ))\r\n                  }\r\n                </div>\r\n              </Container>\r\n            </div>\r\n            <div className={styles.cardModalSidebar} >\r\n              <Popup\r\n                title={isLabelEditPopupOpen ? 'Edytuj etykietę' : isAddNewLabelPopupOpen ? 'Dodaj Etykietę' : 'Etykiety'}\r\n                trigger={labelsTrigger}\r\n                closePopup={() => { setLabelsTrigger(false); setIsLabelEditPopupOpen(false); setIsAddNewLabelPopupOpen(false) }}\r\n                isEditWindow={isLabelEditPopupOpen || isAddNewLabelPopupOpen}\r\n                backToMainWindow={() => { setIsLabelEditPopupOpen(false); setIsAddNewLabelPopupOpen(false) }}\r\n              >\r\n                <div className={styles.cardModalLabels}>\r\n                  {\r\n                    !isLabelEditPopupOpen &&\r\n                      !isAddNewLabelPopupOpen ? (\r\n                      <>\r\n                        <div className={styles.cardModalLabelsList}>\r\n                          {\r\n                            boardLabels.map((label: LabelsInterface) => (\r\n                              <Label\r\n                                key={label._id}\r\n                                labelId={label._id}\r\n                                title={label.title}\r\n                                color={label.color}\r\n                                cardLabels={labels}\r\n                                openLabelEditWindow={() => {\r\n                                  setIsLabelEditPopupOpen(true)\r\n                                  handleGetCurrentEditLabel(label._id)\r\n                                }}\r\n                                handleCheckedLabel={() => handleCheckedLabel(label)}\r\n                              >\r\n                              </Label>\r\n                            ))\r\n                          }\r\n                        </div>\r\n                        <TaskButton onClick={() => setIsAddNewLabelPopupOpen(true)} name={'Utwórz nową etykietę'} />\r\n                      </>\r\n                    ) : (\r\n                      <LabelForm\r\n                        formId={isLabelEditPopupOpen ? 'label-title-edit' : isAddNewLabelPopupOpen ? 'label-title-add' : ''}\r\n                        handleChangeTitle={handleChangeLabelTitle}\r\n                        handleChangeLabelTitle={isLabelEditPopupOpen ? handleSaveLabelEditing : isAddNewLabelPopupOpen ? handleAddNewLabel : () => console.log('label does not exist')}\r\n                        handleDeleteLabel={handleDeleteLabel}\r\n                        value={isLabelEditPopupOpen ? currentLabelTitle : isAddNewLabelPopupOpen ? labelTitle : ''}\r\n                        onFocus={(e) => e.target.select()}\r\n                        selectColor={currentLabelColor}\r\n                        setSelectColor={setCurrentLabelColor}\r\n                      />\r\n                    )\r\n                  }\r\n                </div>\r\n              </Popup>\r\n              <Popup\r\n                title={'Data'}\r\n                trigger={dateTrigger}\r\n                closePopup={() => setDateTrigger(false)}\r\n                backToMainWindow={() => setDateTrigger(false)}\r\n              >\r\n                <DatePicker\r\n                  dateFormat='DD/MM/YYYY'\r\n                  timeFormat=\"hh:mm\"\r\n                  locale=\"pl\"\r\n                  selected={deadline ? new Date(deadline) : null}\r\n                  onChange={(date: Date) => setCardDeadline(date)}\r\n                  inline\r\n                  showTimeInput\r\n                  timeInputLabel=\"Godzina:\"\r\n                />\r\n                <label>Termin <br></br>\r\n                  <input style={{ maxWidth: '100px', marginRight: '10px' }} placeholder={dayjs(deadline).format('DD/MM/YYYY')} />\r\n                  <input style={{ maxWidth: '100px' }} placeholder={dayjs(deadline).format('HH:mm')} />\r\n                </label>\r\n                <div className={styles.actionsForm}>\r\n                  <Button onClick={handleSaveDeadline} title={'Zapisz'} type={'button'} />\r\n                  <div style={{ marginRight: '1rem' }} />\r\n                  <Button onClick={handleDeleteDeadline} title={'Usuń'} bgColor={'#EA4746'} type={'button'} />\r\n                </div>\r\n              </Popup>\r\n              <Popup\r\n                title={'Załącznik'}\r\n                trigger={fileTrigger}\r\n                closePopup={() => setFileTrigger(false)}\r\n                backToMainWindow={() => setFileTrigger(false)}\r\n              >\r\n                <FileForm\r\n                  name={'załącznik'}\r\n                  size={0}\r\n                  label={'załącznik'}\r\n                  type={'file'}\r\n                  listNames={selectedNameFiles}\r\n                  handleInputState={handleUploadFiles}\r\n                  handleSubmitFiles={handleSubmitFiles}\r\n                />\r\n                {uploadProgress > 0 ? (\r\n                  <>\r\n                    {\r\n                      uploadStatus !== null && uploadStatus === true ? (\r\n                        <div><ProgressLine percent={uploadProgress} strokeWidth={4} strokeColor=\"#D3D3D3\" /><p>{uploadProgress}%</p></div>\r\n                      ) : null\r\n                    }\r\n                    {\r\n                      uploadStatus === false ?\r\n                        <p style={{ color: 'red' }}>Błąd przesyłania<small> (max 10mb, lub nieprawidłowy format pliku)</small></p>\r\n                        : null\r\n                    }\r\n                  </>\r\n                ) : null\r\n                }\r\n              </Popup>\r\n              <Popup\r\n                title={'Dodaj wycenę'}\r\n                trigger={valuationTrigger}\r\n                closePopup={() => setValuationTrigger(false)}\r\n              >\r\n                <div>\r\n                  <p>In progress ...</p>\r\n                </div>\r\n              </Popup>\r\n              <Popup\r\n                title={'Magazyn'}\r\n                trigger={storageTrigger}\r\n                closePopup={() => setStorageTrigger(false)}\r\n              >\r\n                <div>\r\n                  <p>In progress ...</p>\r\n                </div>\r\n              </Popup>\r\n              <TaskButton onClick={() => setLabelsTrigger(true)} name={'Etykiety'} icon={<MdOutlineLabel />} />\r\n              <TaskButton onClick={() => setDateTrigger(true)} name={'Data'} icon={<BsStopwatch />} />\r\n              <TaskButton onClick={() => setFileTrigger(true)} name={'Załącznik'} icon={<GrAttachment />} />\r\n              <TaskButton onClick={() => setValuationTrigger(true)} name={'Dodaj wycenę'} icon={<BiTask />} />\r\n              <TaskButton onClick={() => setStorageTrigger(true)} name={'Magazyn'} icon={<BiTask />} />\r\n              <div className={styles.divider}></div>\r\n              <TaskButton onClick={() => {\r\n                deleteCard(_id);\r\n                updateBoard({ _id: boardId })\r\n              }} name={'Usuń'} icon={<RiDeleteBinLine />} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default CardModal","import { RefObject, useRef, useEffect, useLayoutEffect } from 'react'\r\n\r\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\r\n\r\nfunction useEventListener<K extends keyof WindowEventMap>(\r\n  eventName: K,\r\n  handler: (event: WindowEventMap[K]) => void,\r\n): void\r\nfunction useEventListener<\r\n  K extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement = HTMLDivElement,\r\n>(\r\n  eventName: K,\r\n  handler: (event: HTMLElementEventMap[K]) => void,\r\n  element: RefObject<T>,\r\n): void\r\n\r\nfunction useEventListener<\r\n  KW extends keyof WindowEventMap,\r\n  KH extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement | void = void,\r\n>(\r\n  eventName: KW | KH,\r\n  handler: (\r\n    event: WindowEventMap[KW] | HTMLElementEventMap[KH] | Event,\r\n  ) => void,\r\n  element?: RefObject<T>,\r\n) {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef(handler)\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    savedHandler.current = handler\r\n  }, [handler])\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener: typeof handler = event => savedHandler.current(event)\r\n\r\n    targetElement.addEventListener(eventName, eventListener)\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      targetElement.removeEventListener(eventName, eventListener)\r\n    }\r\n  }, [eventName, element])\r\n}\r\n\r\nexport default useEventListener","import { RefObject, useState } from 'react'\r\n\r\nimport useEventListener from './useEventListener'\r\n\r\nfunction useHover<T extends HTMLElement = HTMLElement>(\r\n  elementRef: RefObject<T>,\r\n): boolean {\r\n  const [value, setValue] = useState<boolean>(false)\r\n\r\n  const handleMouseEnter = () => setValue(true)\r\n  const handleMouseLeave = () => setValue(false)\r\n\r\n  useEventListener('mouseenter', handleMouseEnter, elementRef)\r\n  useEventListener('mouseleave', handleMouseLeave, elementRef)\r\n\r\n  return value\r\n}\r\n\r\nexport default useHover\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\n// import TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport dayjs from 'dayjs';\r\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport duration from 'dayjs/plugin/duration'\r\n\r\nimport 'dayjs/locale/pl';\r\nimport CardModal from './CardModal/CardModal';\r\nimport {\r\n  useUpdateBoardMutation,\r\n} from '../../../store/api/boards'\r\nimport {\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n} from \"../../../store/api/cards\";\r\n\r\nimport { MdOutlineLabel } from 'react-icons/md';\r\nimport { RiDeleteBin6Line } from 'react-icons/ri';\r\nimport { GrTextAlignFull } from 'react-icons/gr';\r\nimport { BsStopwatch } from 'react-icons/bs';\r\nimport { ImCheckboxUnchecked } from 'react-icons/im';\r\nimport { ImCheckboxChecked } from 'react-icons/im';\r\nimport { GrAttachment } from 'react-icons/gr';\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\nimport useHover from '../../../hooks/useHover'\r\nimport { isFileImage } from '../../../hooks/useIsFileImage'\r\nimport { Card as CardModel } from '../../../models/card'\r\nimport { Labels as LabelsInterface } from '../../../models/labels'\r\n\r\nexport interface CardProps extends CardModel {\r\n  index: number\r\n  setIsDragDisabled: (value: boolean) => void\r\n}\r\n\r\nconst Card: React.FC<CardProps> = ({\r\n  _id,\r\n  boardId,\r\n  title,\r\n  index,\r\n  nameList,\r\n  description,\r\n  completed,\r\n  labels,\r\n  deadline,\r\n  cover,\r\n  files,\r\n  createdAt,\r\n  setIsDragDisabled,\r\n}) => {\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const [isCardModalOpen, setIsCardModalOpen] = useState<boolean>(false)\r\n  const [isDisplayEditIcon, setIsDisplayEditIcon] = useState(false)\r\n  const [cardCompleted, setCardCompleted] = useState(completed)\r\n  const [nowDate, setNowDate] = useState(Date.now())\r\n  const [cardCover, setCardCover] = useState('')\r\n  const [cardFileIndex, setCardFileIndex] = useState(0)\r\n  const [cardFiles, setCardFiles] = useState([] as any)\r\n\r\n  dayjs.locale('pl');\r\n  dayjs.extend(isSameOrBefore)\r\n  dayjs.extend(duration)\r\n  dayjs.extend(relativeTime)\r\n\r\n  useEffect(() => {\r\n    const intervalIsSameOrBefore = setInterval(() => setNowDate(Date.now()), 100000)\r\n    return () => clearInterval(intervalIsSameOrBefore)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (files) {\r\n      setCardFiles(files)\r\n    }\r\n  }, [files])\r\n  useEffect(() => {\r\n    setCardCover(cover)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    displayCover()\r\n  }, [cardFiles])\r\n\r\n  const displayCover = () => {\r\n    if (cardFiles) {\r\n      const newFiles = [...cardFiles]\r\n      const filesOnlyImages = newFiles.filter(file => isFileImage(file.fileUrl))\r\n      const selectedCover = filesOnlyImages.find((file: { fileUrl: string }) => file.fileUrl === cover)\r\n      let activeIndex = filesOnlyImages.indexOf(selectedCover);\r\n      const indexOnlyImages = newFiles.findIndex(el => isFileImage(el.fileUrl))\r\n      if (filesOnlyImages.length) {\r\n        if (activeIndex < 0) {\r\n          setCardCover(filesOnlyImages[0].fileUrl)\r\n          setCardFileIndex(indexOnlyImages)\r\n        } else {\r\n          setCardCover(filesOnlyImages[activeIndex].fileUrl)\r\n          setCardFileIndex(activeIndex)\r\n        }\r\n      }\r\n      else {\r\n        setCardCover('')\r\n      }\r\n    }\r\n  }\r\n\r\n  const handleMouseEnter = () => {\r\n    setIsDisplayEditIcon(true)\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    setIsDisplayEditIcon(false)\r\n  }\r\n\r\n  const handleOpenCardModal = () => {\r\n    setIsCardModalOpen(true)\r\n    setIsDragDisabled(true)\r\n  }\r\n\r\n  const handleCloseCardModal = () => {\r\n    setIsCardModalOpen(false)\r\n    setIsDragDisabled(false)\r\n  }\r\n\r\n  const handleChangeCompleted = () => {\r\n    setCardCompleted(!cardCompleted);\r\n    updateCard({\r\n      _id: _id,\r\n      completed: !cardCompleted\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n  };\r\n\r\n  const fiveHours = 300 //minutes\r\n  const dateIsSameOrBefore = dayjs(deadline).isSameOrBefore(nowDate, 'minute')\r\n  const timeToDeadline = dayjs(deadline).diff(dayjs(nowDate), 'minute', true)\r\n  const deadlineIsSoon = (timeToDeadline < fiveHours && timeToDeadline > 0) ? true : false\r\n\r\n  const cardDateDisplay = {\r\n    style: {\r\n      color: (cardCompleted || dateIsSameOrBefore || deadlineIsSoon) ? 'white' : 'black',\r\n      backgroundColor: cardCompleted ? 'green' : dateIsSameOrBefore ? 'red' : deadlineIsSoon ? 'orange' : 'transparent'\r\n    },\r\n    title: cardCompleted ? 'Ta karta została ukończona' :\r\n      dateIsSameOrBefore ? 'Ta karta jest przeterminowana' :\r\n        deadlineIsSoon ? `Deadline ${dayjs(deadline).fromNow()}` : 'Karta jest na później',\r\n    name: cardCompleted ? 'zrealizowany' :\r\n      dateIsSameOrBefore ? 'termin przekroczony' :\r\n        deadlineIsSoon ? `wkrótce` : '',\r\n    iconStyle: {\r\n      marginRight: '5px',\r\n      fontSize: '14px',\r\n    }\r\n  }\r\n\r\n  const hoverRef = useRef(null)\r\n  const isHover = useHover(hoverRef)\r\n\r\n\r\n  return (\r\n    <div>\r\n      {\r\n        isCardModalOpen ?\r\n          <CardModal\r\n            _id={_id}\r\n            nameList={nameList}\r\n            title={title}\r\n            description={description}\r\n            boardId={boardId}\r\n            deadline={deadline}\r\n            labels={labels}\r\n            files={cardFiles}\r\n            cover={cardCover}\r\n            completed={cardCompleted}\r\n            cardFileIndex={cardFileIndex}\r\n            dateIsSameOrBefore={dateIsSameOrBefore}\r\n            deadlineIsSoon={deadlineIsSoon}\r\n            cardDateDisplay={cardDateDisplay}\r\n            createdAt={createdAt}\r\n            setCardCompleted={setCardCompleted}\r\n            setIsCardWindowOpen={handleCloseCardModal}\r\n            setCardFileIndex={setCardFileIndex}\r\n            setCardCover={setCardCover}\r\n          /> : null\r\n      }\r\n      <div>\r\n        <Draggable draggableId={_id} index={index} >\r\n          {provided => (\r\n            <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n              <div className={styles.card}\r\n                onMouseEnter={handleMouseEnter}\r\n                onMouseLeave={handleMouseLeave}\r\n              >\r\n                <div className={styles.cardContainer} >\r\n                  <div className={styles.cardClickableArea} onClick={handleOpenCardModal}></div>\r\n                  {\r\n                    cardFiles.length ? (\r\n                      <div className={styles.cardCover} style={\r\n                        {\r\n                          backgroundColor: cardCover,\r\n                          backgroundImage: `url(${cardCover})`,\r\n                          backgroundSize: 'cover',\r\n                          backgroundRepeat: 'no-repeat',\r\n                          backgroundPosition: 'center'\r\n                        }\r\n                      }>\r\n                      </div>\r\n                    ) : null\r\n                  }\r\n                  <div className={styles.cardDetails}>\r\n                    {\r\n                      labels.length ? (\r\n                        <div className={styles.cardLabels} onClick={handleOpenCardModal}>\r\n                          {\r\n                            labels.map((label: { active: any; color: any; _id: string; title: string }) => (\r\n                              <div title={`${label.title}`} key={label._id} className={styles.cardLabel} style={{ backgroundColor: `${label.color}` }}></div>\r\n                            ))\r\n                          }\r\n                        </div>\r\n                      ) : null\r\n                    }\r\n                    <p >{title}</p>\r\n                    <div className={styles.iconsContainer}>\r\n                      <div ref={hoverRef}>\r\n                        {\r\n                          deadline ? (\r\n                            <button\r\n                              className={styles.dateBtn}\r\n                              onClick={handleChangeCompleted}\r\n                              style={cardDateDisplay.style}\r\n                              title={cardDateDisplay.title}\r\n\r\n                            >\r\n                              {isHover ? (cardCompleted ? <ImCheckboxChecked style={cardDateDisplay.iconStyle} /> : <ImCheckboxUnchecked style={cardDateDisplay.iconStyle} />) : <BsStopwatch style={cardDateDisplay.iconStyle} />}\r\n                              {dayjs(deadline).format('DD MMM')}\r\n                            </button>\r\n                          ) : null\r\n                        }\r\n                      </div>\r\n                      {description ? <div className={styles.icons} title=\"Ta karta ma opis.\"><GrTextAlignFull onClick={handleOpenCardModal} /></div> : null}\r\n                      {cardFiles.length ? <div className={styles.icons} title=\"Załączniki\"><GrAttachment /><span>{cardFiles.length}</span></div> : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Card","import React, { useState, useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport {\r\n  useDeleteListMutation,\r\n  useUpdateListMutation,\r\n  useDeleteAllCardsOfListMutation,\r\n} from \"../../../store/api/lists\";\r\nimport { useUpdateBoardMutation } from '../../../store/api/boards'\r\nimport { useAddCardMutation } from \"../../../store/api/cards\";\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside';\r\nimport { List as ListInterface } from '../../../models/list'\r\nimport Card from '../Card/Card';\r\nimport TaskForm from '../TaskForm/TaskForm';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\nimport IconButton from '../../Details/IconButton/IconButton'\r\nimport Popup from '../../Details/Popup/Popup';\r\nimport useCallback from 'react';\r\ninterface PropsList extends ListInterface {\r\n  index: number\r\n}\r\n\r\nconst List: React.FC<PropsList> = ({ _id, boardId, title, cards, index }) => {\r\n  const [addCard] = useAddCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n  const [updateList] = useUpdateListMutation()\r\n  const [deleteList] = useDeleteListMutation()\r\n  const [deleteAllCardsOfList] = useDeleteAllCardsOfListMutation()\r\n\r\n  const [listTitle, setListTitle] = useState<string>(title)\r\n  const [cardTitle, setCardTitle] = useState<string>('')\r\n  const [isCardFormOpen, setIsCardFormOpen] = useState(false)\r\n  const [isTitleFormOpen, setIsTitleFormOpen] = useState(false)\r\n  const [isDragDisabled, setIsDragDisabled] = useState(false)\r\n  const [popupTrigger, setPopupTrigger] = useState(false)\r\n  const ref = useRef(null)\r\n\r\n\r\n  const handleChangeListTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'list') setListTitle(e.target.value)\r\n    updateList({\r\n      _id: _id,\r\n      title: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleAddCardTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card') setCardTitle(e.target.value)\r\n  }\r\n\r\n  const handleOnKeyDownListTitle = (e: React.KeyboardEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    if (e.key === 'Enter' || e.code === \"NumpadEnter\") {\r\n      e.stopPropagation();\r\n      setIsTitleFormOpen(false)\r\n    }\r\n  }\r\n\r\n  const handleAddCard = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n    if (cardTitle.length === 0) return\r\n    addCard({\r\n      listId: _id,\r\n      title: cardTitle\r\n    })\r\n    updateBoard({ _id: boardId })\r\n    setIsCardFormOpen(false)\r\n    setCardTitle('')\r\n  }\r\n\r\n  const handleDeleteAllCardsOfList = () => {\r\n    deleteAllCardsOfList({ _id })\r\n    updateBoard({ _id: boardId })\r\n    setPopupTrigger(false)\r\n  }\r\n  // useCallback()\r\n\r\n  const handleDeleteList = () => {\r\n    deleteList(_id)\r\n    updateBoard({ _id: boardId })\r\n  }\r\n\r\n  const handleSortCardsByDate = (props: string) => {\r\n    const newCards = [...cards]\r\n    let sortedCards\r\n    if (props === 'sort-from-oldest') sortedCards = newCards.sort((a, b) => +new Date(a.createdAt) - +new Date(b.createdAt))\r\n    if (props === 'sort-from-newest') sortedCards = newCards.sort((a, b) => +new Date(b.createdAt) - +new Date(a.createdAt))\r\n    updateList({\r\n      _id,\r\n      cards: sortedCards\r\n    })\r\n    updateBoard({\r\n      _id: boardId\r\n    })\r\n    setPopupTrigger(false)\r\n  }\r\n\r\n  const handleCloseForm = () => { setIsCardFormOpen(false); setCardTitle('') }\r\n  useOnClickOutside(ref, handleCloseForm)\r\n\r\n  return (\r\n    <div>\r\n      <Draggable draggableId={String(_id)} index={index} isDragDisabled={isDragDisabled}>\r\n        {provided => (\r\n          <div className={styles.list} {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}>\r\n            <div className={styles.listHeader}>\r\n              <div onClick={() => setIsTitleFormOpen(true)} ref={ref}>\r\n                {\r\n                  isTitleFormOpen ?\r\n                    <div className={styles.textareaWrapper}>\r\n                      <TextareaAutosize\r\n                        id='list'\r\n                        autoFocus={true}\r\n                        value={listTitle}\r\n                        className={styles.textarea}\r\n                        onChange={handleChangeListTitle}\r\n                        onFocus={(e) => e.target.select()}\r\n                        onBlur={() => setIsTitleFormOpen(false)}\r\n                        onKeyDown={handleOnKeyDownListTitle}\r\n                        required\r\n                      />\r\n                    </div>\r\n                    : <div className={styles.textareaWrapper}><h2>{listTitle}</h2></div>\r\n                }\r\n              </div>\r\n              <IconButton onClick={() => {\r\n                setPopupTrigger(true)\r\n                setIsDragDisabled(true)\r\n              }}>\r\n                <BsThreeDots style={{ fontSize: \"1.3em\" }} />\r\n              </IconButton>\r\n              <Popup\r\n                title={'Akcje listy'}\r\n                trigger={popupTrigger}\r\n                closePopup={() => {\r\n                  setPopupTrigger(false)\r\n                  setIsDragDisabled(false)\r\n                }}\r\n              >\r\n                <div className={styles.popupContent}>\r\n                  <TaskButton\r\n                    onClick={() => handleSortCardsByDate('sort-from-newest')}\r\n                    name={'Sortuj karty od najnowszych'}\r\n                  />\r\n                  <TaskButton\r\n                    onClick={() => handleSortCardsByDate('sort-from-oldest')}\r\n                    name={'Sortuj karty od najstarszych'}\r\n                  />\r\n                  <div className={styles.divider}></div>\r\n                  <TaskButton\r\n                    onClick={handleDeleteAllCardsOfList}\r\n                    name={'Usuń wszystkie karty'}\r\n                  />\r\n                  <TaskButton\r\n                    onClick={handleDeleteList}\r\n                    name={'Usuń listę'}\r\n                  />\r\n                </div>\r\n              </Popup>\r\n            </div>\r\n            <Droppable droppableId={String(_id)} type=\"card\">\r\n              {provided => (\r\n                <div {...provided.droppableProps} ref={provided.innerRef} className={styles.cards}>\r\n                  <div className={styles.cardsContainer}>\r\n                    {\r\n                      cards?.map((card, index: number) => (\r\n                        <Card\r\n                          _id={card._id}\r\n                          index={index}\r\n                          key={card._id}\r\n                          boardId={boardId}\r\n                          title={card.title}\r\n                          deadline={card.deadline}\r\n                          completed={card.completed}\r\n                          description={card.description}\r\n                          labels={card.labels}\r\n                          files={card.files}\r\n                          cover={card.cover}\r\n                          nameList={listTitle}\r\n                          createdAt={card.createdAt}\r\n                          setIsDragDisabled={setIsDragDisabled}\r\n                        />\r\n                      ))\r\n                    }\r\n                    {provided.placeholder}\r\n                  </div>\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n            <div className={styles.addCardForm}>\r\n              {isCardFormOpen ?\r\n                <div ref={ref}>\r\n                  <TaskForm\r\n                    id={'card'}\r\n                    handleChange={handleAddCardTitle}\r\n                    handleSubmit={handleAddCard}\r\n                    closeForm={() => { setIsCardFormOpen(false); setCardTitle('') }}\r\n                    value={cardTitle}\r\n                    titleBtn={'Dodaj Kartę'}\r\n                  />\r\n                </div>\r\n                : <TaskButton onClick={() => setIsCardFormOpen(true)} name={'Dodaj kartę'} icon={<GoPlus />} />\r\n              }\r\n            </div>\r\n          </div>\r\n        )\r\n        }\r\n      </Draggable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List","import axios from 'axios'\r\n\r\nconst getImages = async () => {\r\n  const page = Math.floor(Math.random() * 20 + 1)\r\n  const numberPhotos = 14\r\n  const urlImages = `https://api.unsplash.com/search/photos?page=${page}&per_page=${numberPhotos}&query=Landscape&client_id=${process.env.REACT_APP_UNSPLASH_KEY}`\r\n\r\n  const res = await axios.get(urlImages)\r\n  const photos = res.data.results.map(\r\n    (image: {\r\n      id: any\r\n      urls: { thumb: any; full: any }\r\n      user: { username: any; links: { html: any } }\r\n    }) => ({\r\n      id: image.id,\r\n      thumb: image.urls.thumb,\r\n      full: image.urls.full,\r\n      user: {\r\n        username: image.user.username,\r\n        link: image.user.links.html,\r\n      },\r\n    })\r\n  )\r\n  return photos\r\n}\r\n\r\nexport default getImages\r\n","import React, { useState, useEffect } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { presetColors, defaultBgIcon, defaultColorIcon } from '../localData'\r\nimport getImages from '../../../store/api/unsplashApi'\r\nimport { useUpdateBoardMutation } from '../../../store/api/boards'\r\nimport { BsXLg } from \"react-icons/bs\"\r\nimport IconButton from '../../Details/IconButton/IconButton'\r\n\r\ninterface SideMenuProps {\r\n  boardId: string\r\n  handleCloseMenu: () => void\r\n  setBackgroundUrl: (value: string) => void;\r\n}\r\n\r\nconst SideMenu: React.FC<SideMenuProps> = ({ handleCloseMenu, setBackgroundUrl, boardId }) => {\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n  const [optionColors, setOptionsColors] = useState<boolean>(false)\r\n  const [optionImages, setOptionsImages] = useState<boolean>(false)\r\n  const [images, setImages] = useState<any>([])\r\n\r\n  const getListOfImages = async () => {\r\n    const listImages = await getImages()\r\n    setImages(listImages)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getListOfImages()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.sideMenu}>\r\n      <div className={styles.menuHeader}>\r\n        <h3>Zmień tło</h3>\r\n        <IconButton onClick={handleCloseMenu}><BsXLg /></IconButton>\r\n      </div>\r\n      <div className={styles.menuOptions}>\r\n        <div className={styles.itemBox}\r\n          onClick={() => {\r\n            setOptionsImages(true)\r\n            setOptionsColors(false)\r\n          }}\r\n          style={{\r\n            backgroundImage: `url(${defaultBgIcon})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n          }}><p>Zdjęcia</p></div>\r\n        <div className={styles.itemBox}\r\n          onClick={() => {\r\n            setOptionsImages(false)\r\n            setOptionsColors(true)\r\n          }}\r\n          style={{\r\n            backgroundImage: `url(${defaultColorIcon})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n          }}\r\n        ><p>Kolory</p></div>\r\n      </div>\r\n\r\n      <div className={styles.optionsContainer}>\r\n        {\r\n          optionImages ? (\r\n            images.map((photo: { id: string | undefined; thumb: string; full: string; }) => (\r\n              <div\r\n                key={photo.id}\r\n                className={styles.itemBox}\r\n                style={{\r\n                  backgroundImage: `url(${photo.thumb})`,\r\n                  backgroundSize: 'cover',\r\n                  backgroundRepeat: 'no-repeat',\r\n                  backgroundPosition: 'center'\r\n                }}\r\n                onClick={() => {\r\n                  setBackgroundUrl(photo.full)\r\n                  updateBoard({\r\n                    _id: boardId,\r\n                    background: photo.full\r\n                  })\r\n                }}\r\n              ></div>\r\n            ))\r\n          ) : null\r\n        }\r\n        {\r\n          optionColors ? (\r\n            presetColors.map((color, index) => (\r\n              <div\r\n                key={index}\r\n                className={styles.itemBox}\r\n                style={{\r\n                  backgroundColor: `${color}`,\r\n                }}\r\n                onClick={() => {\r\n                  setBackgroundUrl(color)\r\n                  updateBoard({\r\n                    _id: boardId,\r\n                    background: color\r\n                  })\r\n                }}\r\n              ></div>\r\n            ))\r\n          ) : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SideMenu","import React, { useEffect, useState, useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd'\r\nimport { useGetBoardQuery, useUpdateBoardMutation } from '../../../store/api/boards'\r\nimport { useAddListMutation, useUpdateListMutation, listsApi } from '../../../store/api/lists';\r\nimport { useUpdateCardMutation } from \"../../../store/api/cards\";\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside';\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { defaultBackground } from '../localData';\r\nimport { Board as BoardResponse } from '../../../models/board'\r\nimport { List as ListResponse } from '../../../models/list'\r\nimport BoardHeader from '../BoardHeader/BoardHeader';\r\nimport List from '../List/List'\r\nimport TaskButton from '../TaskButton/TaskButton'\r\nimport TaskForm from '../TaskForm/TaskForm'\r\nimport SideMenu from '../SideMenu/SideMenu';\r\n\r\nconst Board: React.FC<BoardResponse> = ({ _id, lists: listsApi, background: backgroundApi }) => {\r\n  // const { data: board } = useGetBoardQuery(_id);\r\n  const [addList] = useAddListMutation()\r\n  const [updateList] = useUpdateListMutation()\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const [background, setBackground] = useState('')\r\n  const [listTitle, setListTitle] = useState('');\r\n  const [isOpenForm, setIsOpenForm] = useState(false)\r\n  const [isOpenSideMenu, setIsOpenSideMenu] = useState(false)\r\n  // const [board, setBoard] = useState<BoardResponse>({} as BoardResponse)\r\n  const [lists, setLists] = useState<ListResponse[]>([] as ListResponse[])\r\n  const formRef = useRef(null)\r\n\r\n  const closeForm = () => { setIsOpenForm(false); setListTitle('') }\r\n  useOnClickOutside(formRef, closeForm)\r\n\r\n  useEffect(() => {\r\n    if (listsApi) {\r\n      const boardBG = !backgroundApi ? defaultBackground : backgroundApi\r\n      // setBoard(boardApi)\r\n      setLists(listsApi)\r\n      setBackground(boardBG)\r\n    }\r\n  }, [listsApi, backgroundApi])\r\n\r\n  const handleChangeListTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>): void => {\r\n    if (e.target.id === 'list') setListTitle(e.target.value)\r\n  }\r\n\r\n  const handleAddList = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    if (listTitle.length === 0) return\r\n    addList({\r\n      title: listTitle,\r\n      boardId: _id,\r\n    })\r\n    updateBoard({\r\n      _id: _id,\r\n    })\r\n    setListTitle('')\r\n    setIsOpenForm(false)\r\n  }\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    const { destination, source, type, draggableId } = result\r\n    const newLists = [...lists]\r\n    // if (!board) return\r\n    if (!destination) return\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return\r\n\r\n    if (type === 'list') {\r\n      const [removed] = newLists.splice(source.index, 1)\r\n      newLists.splice(destination.index, 0, removed)\r\n\r\n      setLists(newLists)\r\n      updateBoard({\r\n        _id: _id,\r\n        lists: newLists\r\n      })\r\n    }\r\n\r\n    if (type === 'card') {\r\n      const sourceList = newLists.find((list: { _id: string }) => list._id === source.droppableId)\r\n      const destinationList = newLists.find((list: { _id: string; }) => list._id === destination.droppableId)\r\n\r\n      if (source.droppableId === destination.droppableId && sourceList) {\r\n        const newCards = [...sourceList.cards]\r\n        const [removed] = newCards.splice(source.index, 1)\r\n        newCards.splice(destination.index, 0, removed)\r\n\r\n        const updateState = {\r\n          ...sourceList,\r\n          cards: newCards\r\n        }\r\n\r\n        //replace the contents of the list\r\n        const newState = newLists.map(obj => [updateState].find(o => o._id === obj._id) || obj);\r\n\r\n        setLists(newState)\r\n        updateList({\r\n          _id: source.droppableId,\r\n          cards: newCards\r\n        })\r\n\r\n      }\r\n\r\n      if (source.droppableId !== destination.droppableId && sourceList && destinationList) {\r\n        const startCards = [...sourceList.cards]\r\n        const finishCards = [...destinationList.cards]\r\n\r\n        const [removed] = startCards.splice(source.index, 1)\r\n        const startState = {\r\n          ...sourceList,\r\n          cards: startCards\r\n        }\r\n\r\n        finishCards.splice(destination.index, 0, removed)\r\n        const finishState = {\r\n          ...destinationList,\r\n          cards: finishCards\r\n        }\r\n\r\n        //converted to array\r\n        const newCards = [startState, finishState]\r\n\r\n        //replace the contents of the lists\r\n        const newState = newLists.map(obj => newCards.find(o => o._id === obj._id) || obj);\r\n\r\n        setLists(newState)\r\n\r\n        updateCard({\r\n          _id: draggableId,\r\n          listId: destination.droppableId\r\n        })\r\n        // update source list\r\n        updateList({\r\n          _id: source.droppableId,\r\n          cards: startCards\r\n        })\r\n        //update destination list\r\n        updateList({\r\n          _id: destination.droppableId,\r\n          cards: finishCards\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  const boardBackgroundStyle = {\r\n    backgroundColor: background,\r\n    backgroundImage: `url(${background})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  }\r\n\r\n  // if (isLoading) return <h2>Loading...</h2>\r\n  // if (error) return <h2>Brak połączenia</h2>\r\n\r\n  return (\r\n    <div className={styles.board}\r\n      style={boardBackgroundStyle}\r\n    >\r\n      <div className={styles.container}>\r\n        <BoardHeader\r\n          name={'Zmień tło'}\r\n          onClick={() => setIsOpenSideMenu(true)}\r\n        />\r\n        {\r\n          isOpenSideMenu ?\r\n            <SideMenu\r\n              boardId={_id}\r\n              setBackgroundUrl={setBackground}\r\n              handleCloseMenu={() => setIsOpenSideMenu(false)}\r\n            /> : null\r\n        }\r\n        <DragDropContext onDragEnd={onDragEnd} >\r\n          <Droppable droppableId=\"all-list\" direction=\"horizontal\" type=\"list\">\r\n            {provided => (\r\n              <div className={styles.listContainer}\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {\r\n                  lists?.map((list, index: number) => (\r\n                    <List\r\n                      _id={list._id}\r\n                      index={index}\r\n                      boardId={list.boardId}\r\n                      key={list._id}\r\n                      title={list.title}\r\n                      cards={list.cards}\r\n                    />\r\n                  ))\r\n                }\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          <div className={styles.formContainer}>\r\n            {isOpenForm ?\r\n              <div className={styles.addListForm} ref={formRef}>\r\n                <TaskForm\r\n                  id='list'\r\n                  handleChange={handleChangeListTitle}\r\n                  handleSubmit={handleAddList}\r\n                  closeForm={() => { setIsOpenForm(false); setListTitle('') }}\r\n                  value={listTitle}\r\n                  titleBtn={'Dodaj Listę'}\r\n                />\r\n              </div>\r\n              : <TaskButton onClick={() => setIsOpenForm(true)} name={'Dodaj listę zadań'} icon={<GoPlus style={{ margin: '.3rem 0' }} />} />\r\n            }\r\n          </div>\r\n        </DragDropContext>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board","import React from 'react'\r\nimport MoonLoader from \"react-spinners/MoonLoader\";\r\nimport styles from './styles.module.scss'\r\nconst Loading = () => {\r\n  return (\r\n  <div className={styles.loadingContainer}>\r\n     <MoonLoader size={40}/>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default Loading","import React, { useState, useEffect } from 'react'\r\nimport Board from '../../components/Tasks/Board/Board';\r\nimport { useGetAllBoardsQuery, useGetBoardQuery } from '../../store/api/boards';\r\nimport { Board as BoardResponse } from '../../models/board'\r\nimport Loading from '../../components/Details/Loading/Loading';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst TasksPage: React.FC = () => {\r\n  const { data, error, isLoading } = useGetAllBoardsQuery()\r\n  const [boards, setBoards] = useState<BoardResponse[]>([] as BoardResponse[])\r\n  const  params = useParams();\r\n\r\n  // useEffect(() => {\r\n  //   if (data) {\r\n  //     setBoards(data)\r\n  //   }\r\n  // }, [data])\r\n\r\n  return (\r\n    <>\r\n      {error && <h2>Error 500</h2>}\r\n      {\r\n        isLoading ? <Loading /> : (\r\n          data?.map(board => (\r\n            < Board\r\n              key={board._id}\r\n              _id={board._id}\r\n              lists={board.lists}\r\n              background={board.background}\r\n            />\r\n          ))\r\n        )\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TasksPage\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst View2: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Magazyn\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View2\r\n","import React from 'react'\r\n\r\nconst View3: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Dostawcy\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View3\r\n","import React from 'react'\r\n\r\nconst View4: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Informacje\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View4\r\n","import React from 'react'\r\n\r\nconst Calculator = () => {\r\n  return (\r\n    <div>Kalkulator</div>\r\n  )\r\n}\r\n\r\nexport default Calculator","import { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Link } from 'react-router-dom'\r\nimport styles from './styles.module.scss'\r\nimport Axios from 'axios'\r\nimport Loading from '../../../components/Details/Loading/Loading'\r\n\r\nconst Login = () => {\r\n  const [data, setData] = useState({ email: '', password: '' })\r\n  // const [error, setError] = useState('')\r\n\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [error, setError] = useState<false | string>(false)\r\n  const [loading, setLoading] = useState(false)\r\n\r\n  // const handleChange = ({ currentTarget: input }) => {\r\n  //   setData({ ...data, [input.name]: input.value })\r\n  // }\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault()\r\n  //   try {\r\n  //     const url = 'http://localhost:5000/api/auth'\r\n  //     const { data: res } = await axios.post(url, data)\r\n  //     localStorage.setItem('token', res.data)\r\n  //     window.location = '/'\r\n  //   } catch (error) {\r\n  //     if (\r\n  //       error.response &&\r\n  //       error.response.status >= 400 &&\r\n  //       error.response.status <= 500\r\n  //     ) {\r\n  //       setError(error.response.data.message)\r\n  //     }\r\n  //   }\r\n  // }\r\n\r\n  // useEffect(() => {\r\n  //   const userInfo = localStorage.getItem('userInfo')\r\n  //   if (userInfo) {\r\n  //     history.push('/')\r\n  //   }\r\n  // }, [history])\r\n\r\n  const handleSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    const url = `${process.env.REACT_APP_API_URL}users/login`\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-type': 'application/json',\r\n        },\r\n      }\r\n      setLoading(true)\r\n      const { data } = await axios.post(\r\n        url,\r\n        {\r\n          email,\r\n          password,\r\n        },\r\n        config\r\n      )\r\n      localStorage.setItem('token', JSON.stringify(data))\r\n      window.location.href = '/'\r\n      setLoading(false)\r\n    } catch (error) {\r\n      // setError(error.response.data.message)\r\n      setError(\"Nieprawidłowy email lub hasło\")\r\n      setLoading(false)\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={styles.login_container}>\r\n      <div className={styles.login_form_container}>\r\n        <div className={styles.left}>\r\n          {loading ? <Loading /> : null}\r\n          <form className={styles.form_container} onSubmit={handleSubmit}>\r\n            {/* <h1>Login to Your Account</h1> */}\r\n            <h1>Zaloguj się</h1>\r\n            <input\r\n              type='email'\r\n              placeholder='Email'\r\n              name='email'\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              required\r\n              className={styles.input}\r\n            />\r\n            <input\r\n              type='password'\r\n              placeholder='Hasło'\r\n              name='password'\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              required\r\n              className={styles.input}\r\n            />\r\n            {error && <div className={styles.error_msg}>{error}</div>}\r\n            <button type='submit' className={styles.green_btn}>\r\n              Logowanie\r\n            </button>\r\n          </form>\r\n        </div>\r\n        <div className={styles.right}>\r\n          <h1>Zarejestruj się</h1> <br />\r\n          <Link to='/signup'>\r\n            <button type='button' className={styles.white_btn}>\r\n              Rejestracja\r\n            </button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Login\r\n","import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nimport styles from './styles.module.scss'\r\nimport Loading from '../../../components/Details/Loading/Loading'\r\nimport { useCreateBoardMutation } from '../../../store/api/boards'\r\n\r\nconst Signup = () => {\r\n\r\n  // const [data, setData] = useState({\r\n  //   firstName: '',\r\n  //   lastName: '',\r\n  //   email: '',\r\n  //   password: '',\r\n  // })\r\n  // const [error, setError] = useState('')\r\n  // const navigate = useNavigate()\r\n\r\n  // const handleChange = ({ currentTarget: input }) => {\r\n  //   setData({ ...data, [input.name]: input.value })\r\n  // }\r\n\r\n  // const handleSubmit = async (e) => {\r\n  //   e.preventDefault()\r\n  //   try {\r\n  //     const url = 'http://localhost:5000/api/users'\r\n  //     const { data: res } = await axios.post(url, data)\r\n  //     navigate('/login')\r\n  //     console.log(res.message)\r\n  //   } catch (error) {\r\n  //     if (\r\n  //       error.response &&\r\n  //       error.response.status >= 400 &&\r\n  //       error.response.status <= 500\r\n  //     ) {\r\n  //       setError(error.response.data.message)\r\n  //     }\r\n  //   }\r\n  // }\r\n  const [name, setName] = useState('')\r\n  const [email, setEmail] = useState('')\r\n  const [password, setPassword] = useState('')\r\n  const [confirmPassword, setConfirmPassword] = useState('')\r\n  const [error, setError] = useState(false)\r\n  const [loading, setLoading] = useState(false)\r\n  const navigate = useNavigate()\r\n\r\n  const handleSubmit = async (e: React.ChangeEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    const url = `${process.env.REACT_APP_API_URL}users`\r\n    if (password !== confirmPassword) {\r\n      console.log(\"Passwords do not match\");\r\n    } else {\r\n      try {\r\n        const config = {\r\n          headers: {\r\n            'Content-type': 'application/json',\r\n          },\r\n        }\r\n        setLoading(true)\r\n        const { data: res } = await axios.post(url,\r\n          {\r\n            name,\r\n            email,\r\n            password,\r\n          },\r\n          config\r\n        )\r\n        navigate('/login')\r\n        setLoading(false)\r\n      } catch (error: any) {\r\n        if (\r\n          error.response &&\r\n          error.response.status >= 400 &&\r\n          error.response.status <= 500\r\n        ) {\r\n          setError(error.response.data.message)\r\n        }\r\n      }\r\n      setLoading(false)\r\n    };\r\n\r\n  }\r\n\r\n  return (\r\n    <div className={styles.signup_container}>\r\n      <div className={styles.signup_form_container}>\r\n        <div className={styles.left}>\r\n          <h1>Witaj ponownie</h1><br />\r\n          <Link to='/login'>\r\n            <button type='button' className={styles.white_btn}>\r\n              Logowanie\r\n            </button>\r\n          </Link>\r\n        </div>\r\n        <div className={styles.right}>\r\n        {loading ? <Loading /> : null}\r\n          <form className={styles.form_container} onSubmit={handleSubmit}>\r\n            <h1>Utwórz konto</h1>\r\n            <input\r\n              type='text'\r\n              placeholder='Imię'\r\n              name='firstName'\r\n              onChange={(e) => setName(e.target.value)}\r\n              value={name}\r\n              required\r\n              className={styles.input}\r\n            />\r\n            <input\r\n              type='email'\r\n              placeholder='Email'\r\n              name='email'\r\n              onChange={(e) => setEmail(e.target.value)}\r\n              value={email}\r\n              required\r\n              className={styles.input}\r\n            />\r\n            <input\r\n              type='password'\r\n              placeholder='Hasło'\r\n              name='password'\r\n              onChange={(e) => setPassword(e.target.value)}\r\n              value={password}\r\n              required\r\n              className={styles.input}\r\n            />\r\n                        <input\r\n              type='password'\r\n              placeholder='Powtórz hasło'\r\n              name='confirm-password'\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n              value={confirmPassword}\r\n              required\r\n              className={styles.input}\r\n            />\r\n            {error && <div className={styles.error_msg}>{error}</div>}\r\n            <button type='submit' className={styles.green_btn}>\r\n              Rejestracja\r\n            </button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signup\r\n","import React from 'react';\r\nimport { BrowserRouter, Routes, Route, Navigate } from 'react-router-dom'\r\n\r\nimport Layout from './components/Layout';\r\nimport TasksPage from './views/TasksPage/TasksPage';\r\nimport View2 from './views/View2/View2';\r\nimport View3 from './views/View3/View3';\r\nimport View4 from './views/View4/View4';\r\nimport Calculator from './views/Calculator/Calculator';\r\nimport Login from './views/Auth/Login/Login';\r\nimport Signup from './views/Auth/Signup/Signup';\r\nimport './App.scss';\r\n\r\nconst App: React.FC = () => {\r\n\r\n  const user = localStorage.getItem(\"token\");\r\n\r\n  return (\r\n    <BrowserRouter>\r\n      <Routes>\r\n        {user && <Route element={<Layout />}>\r\n          <Route path=\"/\" element={<TasksPage />} />\r\n          <Route path='/calculator' element={<Calculator />} />\r\n          <Route path='/View-2' element={<View2 />} />\r\n          <Route path='/View-3' element={<View3 />} />\r\n          <Route path='/View-4' element={<View4 />} />\r\n        </Route>}\r\n        <Route path=\"/signup\" element={<Signup />} />\r\n        <Route path=\"/login\" element={<Login />} />\r\n        <Route path=\"/\" element={<Navigate replace to=\"/login\" />} />\r\n      </Routes>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\nimport { boardApi } from './api/boards'\r\nimport { listsApi } from './api/lists'\r\nimport { cardsApi } from './api/cards'\r\nimport { filesApi } from './api/files'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [boardApi.reducerPath]: boardApi.reducer,\r\n    [listsApi.reducerPath]: listsApi.reducer,\r\n    [cardsApi.reducerPath]: cardsApi.reducer,\r\n    [filesApi.reducerPath]: filesApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(\r\n      boardApi.middleware,\r\n      listsApi.middleware,\r\n      cardsApi.middleware,\r\n      filesApi.middleware,\r\n    ),\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from './store/store';\r\nimport { AuthProvider } from './context/AuthContext';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n     {/* <AuthProvider> */}\r\n       <App />\r\n      {/* </AuthProvider> */}\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles_sidebar__xK0YJ\",\"sidebarHidden\":\"styles_sidebarHidden__XUE84\",\"logo\":\"styles_logo__2pM0Q\",\"navButton\":\"styles_navButton__3BNKT\",\"navButtonHidden\":\"styles_navButtonHidden__pISeR\",\"linksContainer\":\"styles_linksContainer__3Ym__\",\"navItem\":\"styles_navItem__TbxPM\",\"navLink\":\"styles_navLink__VPAcP\",\"icon\":\"styles_icon__rSpbJ\",\"active\":\"styles_active__20cX5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"signup_container\":\"styles_signup_container__3Qv_o\",\"signup_form_container\":\"styles_signup_form_container__36bcJ\",\"left\":\"styles_left__2itKc\",\"right\":\"styles_right__11xPU\",\"form_container\":\"styles_form_container__36AuC\",\"input\":\"styles_input__2NZ1J\",\"error_msg\":\"styles_error_msg__3VqCZ\",\"white_btn\":\"styles_white_btn__3HZFD\",\"green_btn\":\"styles_green_btn__1Uver\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3lg78\",\"card\":\"styles_card__2Vpi0\",\"cardContainer\":\"styles_cardContainer__v6erv\",\"cardClickableArea\":\"styles_cardClickableArea__2gAoQ\",\"cardDetails\":\"styles_cardDetails__3JrV1\",\"textarea\":\"styles_textarea__3yOuz\",\"btnContainer\":\"styles_btnContainer__1CdlS\",\"cardLabels\":\"styles_cardLabels__2XYfY\",\"cardLabel\":\"styles_cardLabel__1QOow\",\"iconsContainer\":\"styles_iconsContainer__oeQXm\",\"dateContainer\":\"styles_dateContainer__1awiA\",\"dateBtn\":\"styles_dateBtn__MHftz\",\"icons\":\"styles_icons__F6ETe\",\"cardCover\":\"styles_cardCover__24RG5\",\"actionsContainer\":\"styles_actionsContainer__1tq7E\",\"actionsPopup\":\"styles_actionsPopup__9CHs8\",\"actionsPopupContent\":\"styles_actionsPopupContent__6q6i1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__29G3F\",\"listHeader\":\"styles_listHeader__358ey\",\"textareaWrapper\":\"styles_textareaWrapper__1NuQ1\",\"textarea\":\"styles_textarea__2eU67\",\"cardsContainer\":\"styles_cardsContainer__3CxCn\",\"addCardForm\":\"styles_addCardForm__2mFwc\",\"popupContent\":\"styles_popupContent__3PjJI\",\"divider\":\"styles_divider__3kOAL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login_container\":\"styles_login_container__GHDWc\",\"login_form_container\":\"styles_login_form_container__2Xo4o\",\"left\":\"styles_left__2gPmd\",\"form_container\":\"styles_form_container__3fCJf\",\"input\":\"styles_input__3kVbT\",\"error_msg\":\"styles_error_msg__vVm3W\",\"right\":\"styles_right__1aWVK\",\"white_btn\":\"styles_white_btn__2-AOv\",\"green_btn\":\"styles_green_btn__a92sJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideMenu\":\"styles_sideMenu__1WL-5\",\"menuHeader\":\"styles_menuHeader__1I00P\",\"menuOptions\":\"styles_menuOptions__1rfEx\",\"optionsContainer\":\"styles_optionsContainer__2BqBR\",\"description\":\"styles_description__2kWXu\",\"itemBox\":\"styles_itemBox__1g7K5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1yOiC\",\"textarea\":\"styles_textarea__3B3m0\",\"actionsForm\":\"styles_actionsForm__3iZs4\",\"reactColorful\":\"styles_reactColorful__3NUwo\",\"pickerSwatches\":\"styles_pickerSwatches__2TDju\",\"pickerSwatch\":\"styles_pickerSwatch__3UrBc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles_board__1NKs9\",\"container\":\"styles_container__35LdP\",\"listContainer\":\"styles_listContainer__W9gYL\",\"formContainer\":\"styles_formContainer__2R8KT\",\"addListForm\":\"styles_addListForm__1147R\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__p2hri\",\"fileImg\":\"styles_fileImg__2ocO6\",\"selectCover\":\"styles_selectCover__3i_rf\",\"fileDetails\":\"styles_fileDetails__3LlYK\",\"fileButtons\":\"styles_fileButtons__2ulLn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"styles_layout__3nIik\",\"appbar\":\"styles_appbar__2Y1-N\",\"content\":\"styles_content__3Ehny\",\"pagesContainer\":\"styles_pagesContainer__BB6vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formFile\":\"styles_formFile__2d9Bi\",\"labelFile\":\"styles_labelFile__2P-a9\",\"spanContainer\":\"styles_spanContainer__3Mj05\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1hyU1\",\"textarea\":\"styles_textarea__2Y0rn\",\"actionsForm\":\"styles_actionsForm__4Ypdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"styles_popup__1Gn8a\",\"header\":\"styles_header__1njvo\",\"popupContent\":\"styles_popupContent__A0vyv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskButton\":\"styles_taskButton__25h-I\",\"icon\":\"styles_icon__1Rn7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__8f3XM\",\"boxColor\":\"styles_boxColor__TIz-E\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1aHB8\",\"items\":\"styles_items__MgaSQ\"};"],"sourceRoot":""}