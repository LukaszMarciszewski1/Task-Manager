{"version":3,"sources":["components/Appbar/styles.module.scss","components/Tasks/BoardHeader/styles.module.scss","components/Details/Button/styles.module.scss","components/Details/IconButton/styles.module.scss","components/Tasks/CardWindow/styles.module.scss","components/Tasks/localData.ts","store/reducers/boardsReducer.ts","components/Sidebar/Sidebar.tsx","components/Appbar/Appbar.tsx","components/Layout.tsx","store/reducers/listsReducer.ts","store/reducers/cardsReducer.ts","hooks/useOnClickOutside.ts","components/Tasks/TaskButton/TaskButton.tsx","components/Tasks/BoardHeader/BoardHeader.tsx","components/Details/Button/Button.tsx","components/Details/IconButton/IconButton.tsx","components/Tasks/TaskForm/TaskForm.tsx","hooks/isFileImage.ts","store/reducers/filesReducer.ts","components/Details/Popup/Popup.tsx","components/Tasks/CardWindow/CardWindowDetails/Label/Label.tsx","components/Tasks/CardWindow/CardWindowDetails/ItemsContainer/ItemsContainer.tsx","components/Tasks/CardWindow/CardWindowDetails/LabelForm/LabelForm.tsx","components/Tasks/CardWindow/CardWindowDetails/FileForm/FileForm.tsx","components/Tasks/CardWindow/CardWindowDetails/Files/Files.tsx","components/Tasks/CardWindow/CardWindow.tsx","hooks/useEventListener.ts","hooks/useHover.ts","components/Tasks/Card/Card.tsx","components/Tasks/List/List.tsx","config/unsplash.ts","store/api/unsplashApi.ts","components/Tasks/SideMenu/SideMenu.tsx","components/Tasks/Board/Board.tsx","views/TasksPage/TasksPage.tsx","views/View2/View2.tsx","views/View3/View3.tsx","views/View4/View4.tsx","views/Calculator/Calculator.tsx","App.tsx","store/store.ts","index.tsx","components/Sidebar/styles.module.scss","components/Tasks/Card/styles.module.scss","components/Tasks/List/styles.module.scss","components/Tasks/SideMenu/styles.module.scss","components/Tasks/Board/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/Files/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/LabelForm/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/FileForm/styles.module.scss","components/styles.module.scss","components/Tasks/TaskForm/styles.module.scss","components/Details/Popup/styles.module.scss","components/Tasks/TaskButton/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/Label/styles.module.scss","components/Tasks/CardWindow/CardWindowDetails/ItemsContainer/styles.module.scss"],"names":["module","exports","defaultBackground","colors","boardApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","tagTypes","endpoints","builder","getAllBoards","query","providesTags","getBoard","id","createBoard","mutation","body","url","method","invalidatesTags","updateBoard","patch","useGetBoardQuery","useGetAllBoardsQuery","useCreateBoardMutation","useUpdateBoardMutation","menuItems","name","path","icon","Sidebar","location","useLocation","useState","sidebarOpen","setSidebarOpen","className","styles","sidebar","sidebarHide","navButton","navButtonHide","onClick","p","logo","labels","background","linksContainer","map","item","navItem","to","navLink","pathname","active","Appbar","container","Layout","children","layout","pagesContainer","listApi","getAllTasks","getTask","addTask","deleteTask","updateTask","getCards","useAddTaskMutation","useGetAllTasksQuery","useGetTaskQuery","useDeleteTaskMutation","useUpdateTaskMutation","useGetCardsQuery","cardsApi","getAllCards","getCard","addCard","uploadFilesCard","post","getCardFiles","deleteFile","deleteCard","updateCard","deleteAll","useGetCardQuery","useGetAllCardsQuery","useAddCardMutation","useDeleteCardMutation","useUpdateCardMutation","useDeleteAllMutation","useDeleteFileMutation","useUploadFilesCardMutation","useGetCardFilesQuery","useOnClickOutside","ref","handler","useEffect","listener","event","el","current","contains","target","document","addEventListener","removeEventListener","TaskButton","height","margin","style","taskButton","BoardHeader","width","Button","bgColor","title","type","button","backgroundColor","IconButton","props","iconButton","TaskForm","handleChange","handleSubmit","closeForm","value","onBlur","onFocus","titleBtn","placeholder","form","onSubmit","maxRows","textarea","autoFocus","onChange","required","actionsForm","marginRight","isFileImage","match","filesApi","getAllFiles","getFile","uploadFile","useUploadFileMutation","useGetAllFilesQuery","useGetFileQuery","Popup","trigger","closePopup","editWindow","backToMainWindow","refPopup","useRef","popup","menuHeader","popupContent","Label","color","cardLabels","checkedLabel","openLabelEditWindow","labelId","activeLabels","filter","label","_id","boxColor","length","ItemsContainer","data","isDataExist","Array","isArray","undefined","items","LabelForm","deleteLabel","formId","setSelectColor","selectColor","marginBottom","reactColorful","FileForm","nameFiles","size","handleInputState","handleSubmitFile","rest","formFile","labelFile","multiple","hidden","spanContainer","index","nameFileSpan","Files","created","src","downloadFile","selectCover","fileExtension","split","pop","fileImg","alt","checked","fileDetails","fileButtons","CardWindow","cardId","boardId","nameList","description","deadlineCard","cardCompleted","setDeadlineCard","setCardCompleted","setIsCardWindowOpen","setCardLabels","dateIsSameOrBefore","deadlineIsSoon","cardDateDisplay","cardFiles","cardCover","setCover","setFileIndex","cardFileIndex","dayjs","locale","board","error","isLoading","refWindow","cardTitle","setCardTitle","cardDescription","setCardDescription","setLabels","formIsOpen","setFormIsOpen","labelsTrigger","setLabelsTrigger","dateTrigger","setDateTrigger","fileTrigger","setFileTrigger","isOpenLabelEditWindow","setIsOpenLabelEditWindow","isOpenAddNewLabelWindow","setIsOpenAddNewLabelWindow","currentLabelTitle","setCurrentLabelTitle","currentLabelId","setCurrentLabelId","currentLabelColor","setCurrentLabelColor","labelTitle","setLabelTitle","selectedFiles","setSelectedFiles","selectedNameFiles","setSelectedNameFiles","uploadProgress","setUploadProgress","uploadStatus","setUploadStatus","handleUploadImage","useCallback","e","currentTarget","files","arr","i","push","uploadFileOptions","headers","onUploadProgress","progressEvent","loaded","total","percent","Math","floor","a","preventDefault","formData","FormData","append","axios","then","res","setTimeout","catch","console","log","handleDeleteFile","fileId","fileUrl","overlay","cardWindow","closeWindowBtn","cardWindowContent","cardHeader","cardHeaderText","textareaTitle","select","rows","cardContainer","windowMain","completed","selectedDateBtn","format","datedateNotificationSpan","descriptionContainer","descriptionHeader","maxWidth","marginLeft","filesContainer","file","fileName","createdAt","fileType","get","responseType","filename","replace","fileDownload","cover","handleSelectCover","cardSidebar","newLabels","newCardLabels","newLabelState","newCardLabelState","newLabelsState","newCardLabelsState","labelsList","activeLabel","activeLabelTitle","toString","activeLabelColor","handleGetCurrentEditLabel","copyCardLabels","newLabel","existLabel","find","handleCheckedLabel","dateFormat","timeFormat","selected","Date","date","inline","showTimeInput","deadline","strokeWidth","strokeColor","divider","useIsomorphicLayoutEffect","window","useLayoutEffect","useEventListener","eventName","element","savedHandler","targetElement","eventListener","useHover","elementRef","setValue","Card","dragDisabled","card","isCardWindowOpen","showText","setShowText","now","nowDate","setNowDate","setFiles","actionTrigger","setActionTrigger","extend","isSameOrBefore","duration","relativeTime","intervalIsSameOrBefore","setInterval","clearInterval","newFiles","filesOnlyImages","selectedCover","activeIndex","indexOf","indexOnlyImages","findIndex","handleMouseEnter","handleMouseLeave","handleOpenCardWindow","handleChangeCompleted","timeToDeadline","diff","fromNow","iconStyle","fontSize","cardCoverStyle","backgroundImage","backgroundSize","backgroundRepeat","backgroundPosition","hoverRef","isHover","draggableId","String","provided","innerRef","draggableProps","dragHandleProps","onMouseEnter","onMouseLeave","cardClickableArea","cardLabel","iconsContainer","dateBtn","icons","btnContainer","actionsPopupContent","List","listId","cards","updateList","deleteList","listTitle","setListTitle","openCardForm","setOpenCardForm","openTitleForm","setOpenTitleForm","setDragDisabled","handleChangeCardValue","handleEditListTitle","handleAddCard","handleDeleteAllCards","handleDeleteList","isDragDisabled","list","listHeader","textWrapper","droppableId","cardsContainer","droppableProps","updateDate","actionsList","unsplash","clientKey","getImages","page","random","urlImages","photos","results","image","thumb","urls","full","user","username","link","links","html","SideMenu","closeMenu","setBackgroundUrl","optionColors","setOptionsColors","optionImages","setOptionsImages","images","setImages","getListOfImages","listOfImages","sideMenu","options","box","optionsContainer","photo","Board","addList","formRef","backgroundUrl","openForm","setOpenForm","openSideMenu","setOpenSideMenu","setBoard","lists","setLists","newBoard","boardBG","boardBackgroundStyle","onDragEnd","result","destination","source","newLists","splice","removed","sourceList","destinationList","newCards","updateState","newState","obj","o","startCards","finishCards","startState","direction","listContainer","formContainer","TasksPage","View2","View3","View4","Calculator","App","exact","component","store","configureStore","reducer","middleware","getDefaultMiddleware","concat","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.c8585c48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2iRdG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__2SZpM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"styles_button__1Radr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"iconButton\":\"styles_iconButton__7QADk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"styles_overlay__2Y5yx\",\"cardWindow\":\"styles_cardWindow__1lSVi\",\"cardWindowContent\":\"styles_cardWindowContent__3TStT\",\"cardHeader\":\"styles_cardHeader__1ikzx\",\"cardHeaderText\":\"styles_cardHeaderText__3JyaV\",\"textareaTitle\":\"styles_textareaTitle__3aXO3\",\"cardContainer\":\"styles_cardContainer__1HYwy\",\"windowMain\":\"styles_windowMain__14Zwx\",\"descriptionContainer\":\"styles_descriptionContainer__3K63w\",\"descriptionHeader\":\"styles_descriptionHeader__3OCzx\",\"textareaDescription\":\"styles_textareaDescription__1219I\",\"actionsForm\":\"styles_actionsForm__9PCzB\",\"innerTextWrapper\":\"styles_innerTextWrapper__YqNUp\",\"cardSidebar\":\"styles_cardSidebar__QDMU1\",\"divider\":\"styles_divider__3RK0g\",\"btn\":\"styles_btn__1ptUE\",\"labels\":\"styles_labels__GK2WN\",\"labelsList\":\"styles_labelsList__2fvj7\",\"labelsWrap\":\"styles_labelsWrap__NrQr7\",\"label\":\"styles_label__qxFM3\",\"textareaLabelTitle\":\"styles_textareaLabelTitle__fLzf3\",\"datapickerWrapper\":\"styles_datapickerWrapper__20lTy\",\"datedateNotificationSpan\":\"styles_datedateNotificationSpan__2W614\",\"selectedDateBtn\":\"styles_selectedDateBtn__2N73k\",\"filesContainer\":\"styles_filesContainer__3tPmD\",\"cardCover\":\"styles_cardCover__1brHX\",\"closeWindowBtn\":\"styles_closeWindowBtn__3rbJf\"};","export const defaultBackground = \"https://images.unsplash.com/photo-1501785888041-af3ef285b470?crop=entropy&cs=srgb&fm=jpg&ixid=MnwzMDMxMTR8MHwxfHNlYXJjaHw2fHxM\";\r\nexport const defaultColor = \"https://images.pexels.com/photos/226589/pexels-photo-226589.jpeg?cs=srgb&dl=closeup-photo-of-multi-color-stick-226589.jpg&fm=jpg\"\r\nexport const colors = [\r\n  '#FB8B24',\r\n  '#9575cd',\r\n  '#F36935',\r\n  '#EA4746',\r\n  '#AE0366',\r\n  '#53416B',\r\n  '#ba68c8',\r\n  '#2F8278',\r\n  '#C5D86D',\r\n  '#30B68E',\r\n  '#A2D2FF',\r\n  '#FFDAB9',\r\n  '#FAF9F9',\r\n  '#3f3c3c'\r\n];\r\n\r\nexport const labelItems = [\r\n  {\r\n    color: '#61bd4f',\r\n    title: '',\r\n    active: false\r\n  },\r\n  {\r\n    color: '#9575cd',\r\n    title: '',\r\n    active: false\r\n  },\r\n  {\r\n    color: '#ff9f1a',\r\n    title: '',\r\n    active: false\r\n  },\r\n  {\r\n    color: '#EA4746',\r\n    title: '',\r\n    active: false\r\n  },\r\n  {\r\n    color: '#0079bf',\r\n    title: '',\r\n    active: false\r\n  },\r\n]","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport {List, ListResponse} from './listsReducer'\r\nexport interface Board {\r\n  _id: string\r\n  title: string\r\n  background: string\r\n  lists: ListResponse\r\n  labels: {\r\n    color: string\r\n    title: string\r\n    active: boolean\r\n  }[]\r\n}\r\n\r\n// const url = 'http://localhost:5000/'\r\nconst url = 'https://lukas-backend.herokuapp.com/'\r\n\r\n// export type BoardResponse = Board[]\r\n\r\nexport const boardApi = createApi({\r\n  reducerPath: 'boardApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: url }),\r\n  tagTypes: ['Board'],\r\n  endpoints: (builder) => ({\r\n    getAllBoards: builder.query<Board, void>({\r\n      query: () => `boards`,\r\n      providesTags: ['Board'],\r\n    }),\r\n    getBoard: builder.query<Board, any>({\r\n      query: (id) => `boards/${id}`,\r\n      providesTags: ['Board'],\r\n    }),\r\n    createBoard: builder.mutation({\r\n      query: (body: {}) => ({\r\n        url: 'boards',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Board'],\r\n    }),\r\n    updateBoard: builder.mutation({\r\n      query: ({ id, ...patch }) => ({\r\n        url: `boards/${id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Board'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useCreateBoardMutation,\r\n  useUpdateBoardMutation,\r\n} = boardApi\r\n","import React, { useState } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport styles from './styles.module.scss'\r\n\r\nimport { MdArrowForwardIos } from \"react-icons/md\";\r\nimport { CgCalculator } from \"react-icons/cg\";\r\nimport { GiDeliveryDrone } from \"react-icons/gi\";\r\nimport { AiOutlineInfoCircle } from \"react-icons/ai\";\r\nimport { IoLogoJavascript } from \"react-icons/io\";\r\nimport { CgComponents } from \"react-icons/cg\";\r\nimport { GrTask } from \"react-icons/gr\";\r\n\r\nimport { labelItems } from '../../components/Tasks/localData'\r\nimport { defaultBackground } from '../../components/Tasks/localData'\r\n\r\nimport {\r\n  useCreateBoardMutation,\r\n} from '../../store/reducers/boardsReducer'\r\n\r\nconst menuItems = [\r\n  {\r\n    name: 'Zadania',\r\n    path: '/',\r\n    icon: <GrTask />\r\n  },\r\n  {\r\n    name: 'Kalkulator',\r\n    path: '/calculator',\r\n    icon: <CgCalculator />\r\n  },\r\n  {\r\n    name: 'Materiały',\r\n    path: '/View-2',\r\n    icon: <CgComponents />\r\n  },\r\n  {\r\n    name: 'Dostawcy',\r\n    path: '/View-3',\r\n    icon: <GiDeliveryDrone />\r\n  },\r\n  {\r\n    name: 'Informacje',\r\n    path: '/View-4',\r\n    icon: <AiOutlineInfoCircle />\r\n  },\r\n]\r\n\r\nconst Sidebar: React.FC = () => {\r\n  const [createBoard] = useCreateBoardMutation()\r\n  const location = useLocation()\r\n  const [sidebarOpen, setSidebarOpen] = useState(true)\r\n\r\n\r\n\r\n  return (\r\n    <nav\r\n      // className={styles.container}\r\n      className={`${styles.sidebar} ${sidebarOpen ? styles.sidebarHide : styles.sidebar}`}\r\n    >\r\n      <button\r\n        className={`${styles.navButton} ${sidebarOpen ? styles.navButton : styles.navButtonHide}`}\r\n        onClick={() => setSidebarOpen((p) => !p)}>\r\n        <MdArrowForwardIos />\r\n      </button>\r\n      <div className={styles.logo} onClick={() => createBoard({\r\n        labels: [],\r\n        background: defaultBackground\r\n      })}><IoLogoJavascript /></div>\r\n      <ul className={styles.linksContainer}>\r\n        {menuItems.map((item) => (\r\n          <li key={item.name}\r\n            className={styles.navItem}\r\n          >\r\n            <Link\r\n              to={item.path}\r\n            >\r\n              <div className={`${styles.navLink} ${location.pathname === item.path ? styles.active : styles.navLink}`}>\r\n                <div className={styles.icon}>{item.icon}</div>\r\n                <p>{!sidebarOpen ? item.name : null}</p>\r\n              </div>\r\n            </Link>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </nav>\r\n  )\r\n}\r\n\r\nexport default Sidebar\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\nconst Appbar: React.FC = () => {\r\n  return <div className={styles.container}></div>\r\n}\r\n\r\nexport default Appbar\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport Sidebar from './Sidebar/Sidebar'\r\nimport Appbar from './Appbar/Appbar'\r\n\r\nconst Layout: React.FC = ({ children }) => {\r\n  return (\r\n    <div className={styles.layout}>\r\n      <Appbar />\r\n      <div className={styles.container}>\r\n        <Sidebar />\r\n        <div className={styles.pagesContainer}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Layout\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\nimport {Card} from './cardsReducer'\r\nexport interface List {\r\n  _id: string\r\n  title: string\r\n  index: number\r\n  boardId: string\r\n  cards: Card[]\r\n}\r\n\r\nexport type ListResponse = List[]\r\n// const url = 'http://localhost:5000/'\r\nconst url = 'https://lukas-backend.herokuapp.com/'\r\n\r\nexport const listApi = createApi({\r\n  reducerPath: 'listApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: url }),\r\n  tagTypes: ['List'],\r\n  endpoints: (builder) => ({\r\n    getAllTasks: builder.query<ListResponse, void>({\r\n      query: () => `lists`,\r\n      providesTags: ['List'],\r\n    }),\r\n    getTask: builder.query<ListResponse, Partial<List>>({\r\n      query: (id) => `lists/${id}`,\r\n      providesTags: ['List'],\r\n    }),\r\n    addTask: builder.mutation({\r\n      query: (body: {}) => ({\r\n        url: 'lists',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    deleteTask: builder.mutation<{ success: boolean; id: string | number }, string>({\r\n      query: (id) => ({\r\n        url: `lists/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    updateTask: builder.mutation({\r\n      query: ({ id, ...patch }) => ({\r\n        url: `lists/${id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['List'],\r\n    }),\r\n    getCards: builder.query<ListResponse, void>({\r\n      query: (id) => `lists/${id}`,\r\n      providesTags: ['List'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllTasksQuery,\r\n  useGetTaskQuery,\r\n  useAddTaskMutation,\r\n  useDeleteTaskMutation,\r\n  useUpdateTaskMutation,\r\n  useGetCardsQuery,\r\n} = listApi\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\n\r\nexport interface Card {\r\n  boardId: string\r\n  listId: string\r\n  title: string\r\n  description: string\r\n  deadline: Date\r\n  completed: boolean\r\n  createdAt: Date\r\n  updateDate: Date\r\n  text: string\r\n  files: {\r\n    fileName: string,\r\n    filePath: string,\r\n    fileType: string,\r\n    fileSize: string,\r\n  }[]\r\n  labels: {\r\n    color: string\r\n    title: string\r\n    active: boolean\r\n  }[]\r\n}\r\n\r\n// const url = 'http://localhost:5000/'\r\nconst url = 'https://lukas-backend.herokuapp.com/'\r\n\r\ntype CardsResponse = Card[]\r\n\r\nexport const cardsApi = createApi({\r\n  reducerPath: 'cardsApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: url }),\r\n  tagTypes: ['Cards'],\r\n  endpoints: (builder) => ({\r\n    getAllCards: builder.query<CardsResponse, void>({\r\n      query: () => `cards`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    getCard: builder.query({\r\n      query: (id) => `cards/${id}`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    addCard: builder.mutation<Card, Partial<Card>>({\r\n      query: (body: {}) => ({\r\n        url: 'cards',\r\n        method: 'POST',\r\n        body,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    uploadFilesCard: builder.mutation({\r\n      query: ({ id, ...post }) => ({\r\n        url: `cards/${id}/files`,\r\n        method: 'POST',\r\n        body: post,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    getCardFiles: builder.query({\r\n      query: (id) => `cards/${id}/files`,\r\n      providesTags: ['Cards'],\r\n    }),\r\n    deleteFile: builder.mutation<{ success: boolean; id: string }, string>({\r\n      query: (id) => ({\r\n        url: `cards/${id}/files`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    deleteCard: builder.mutation<{ success: boolean; id: string }, string>({\r\n      query: (id) => ({\r\n        url: `cards/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    updateCard: builder.mutation({\r\n      query: ({ id, ...patch }) => ({\r\n        url: `cards/${id}`,\r\n        method: 'PATCH',\r\n        body: patch,\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n    deleteAll: builder.mutation({\r\n      query: () => ({\r\n        url: `cards`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Cards'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllCardsQuery,\r\n  useGetCardQuery,\r\n  useAddCardMutation,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n  useDeleteAllMutation,\r\n  useDeleteFileMutation,\r\n  useUploadFilesCardMutation,\r\n  useGetCardFilesQuery,\r\n} = cardsApi\r\n","import { RefObject, useEffect } from 'react'\r\n\r\ntype AnyEvent = MouseEvent | TouchEvent\r\n\r\nfunction useOnClickOutside<T extends HTMLElement = HTMLElement>(\r\n  ref: RefObject<T>,\r\n  handler: (event: AnyEvent) => void,\r\n): void {\r\n  useEffect(() => {\r\n    const listener = (event: AnyEvent) => {\r\n      const el = ref?.current\r\n\r\n      // Do nothing if clicking ref's element or descendent elements\r\n      if (!el || el.contains(event.target as Node)) {\r\n        return\r\n      }\r\n\r\n      handler(event)\r\n    }\r\n\r\n    document.addEventListener(`mousedown`, listener)\r\n    document.addEventListener(`touchstart`, listener)\r\n\r\n    return () => {\r\n      document.removeEventListener(`mousedown`, listener)\r\n      document.removeEventListener(`touchstart`, listener)\r\n    }\r\n\r\n    // Reload only if ref or handler changes\r\n  }, [ref, handler])\r\n}\r\n\r\nexport default useOnClickOutside","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\n\r\ntype ButtonProps = {\r\n  icon?: any\r\n  height?: string\r\n  margin?: string\r\n  name: string\r\n  onClick: () => void\r\n}\r\n\r\nconst TaskButton: React.FC<ButtonProps> = ({ onClick, name, icon, height, margin }) => {\r\n  return (\r\n    <button style={{height: height, margin: margin}} className={styles.taskButton} onClick={onClick}>\r\n      <div className={styles.icon}>{icon}</div>\r\n      {name}\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default TaskButton\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport TaskButton from '../TaskButton/TaskButton'\r\nimport { BsImage } from \"react-icons/bs\";\r\n\r\ntype BoardHeaderProps = {\r\n  name: string\r\n  onClick: () => void\r\n}\r\n\r\nconst BoardHeader: React.FC<BoardHeaderProps> = ({ name, onClick }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <div style={{ width: '130px' }}>\r\n        <TaskButton onClick={onClick} name={name} icon={<BsImage />} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default BoardHeader","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface ButtonProps {\r\n  onClick?: (e: any) => void\r\n  title?: string\r\n  bgColor?: string\r\n  type: any\r\n}\r\n\r\nconst Button: React.FC<ButtonProps> = ({onClick, bgColor, title, type}) => (\r\n  <button\r\n    className={styles.button}\r\n    onClick={onClick} \r\n    type={type}\r\n    style={{ backgroundColor: `${bgColor}`}}>\r\n    {title}\r\n  </button>\r\n)\r\n\r\nexport default Button\r\n","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ninterface IconButtonProps {\r\n  onClick?: () => void;\r\n  icon?: any,\r\n  title?: string,\r\n  padding?: string\r\n}\r\n\r\nconst IconButton: React.FC<IconButtonProps> = (props) => (\r\n  <button\r\n    className={styles.iconButton}\r\n    onClick={props.onClick}\r\n    type='button'\r\n  >\r\n    {props.children}\r\n  </button>\r\n)\r\n\r\nexport default IconButton\r\n","import React, { useRef } from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\n\r\nimport Button from '../../Details/Button/Button'\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\n\r\ntype Props = {\r\n  id: string\r\n  handleSubmit: (value: any) => void\r\n  handleChange: (value: any) => void\r\n  onFocus?: (value: any) => void\r\n  closeForm: () => void\r\n  onBlur?: () => void\r\n  value: string | undefined\r\n  titleBtn: string\r\n}\r\n\r\nconst TaskForm: React.FC<Props> = ({ handleChange, handleSubmit, closeForm, value, id, onBlur, onFocus, titleBtn }) => {\r\n  const placeholder = id === 'list' ? 'Dodaj listę zadań' : 'Dodaj nową kartę'\r\n\r\n  return (\r\n    <form className={styles.form} onSubmit={handleSubmit}>\r\n      <TextareaAutosize\r\n        id={id}\r\n        maxRows={20}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={styles.textarea}\r\n        autoFocus\r\n        onChange={handleChange}\r\n        onBlur={onBlur}\r\n        onFocus={onFocus}\r\n        required />\r\n      <div className={styles.actionsForm}>\r\n        <Button onClick={handleSubmit} title={titleBtn} type={'submit'}/>\r\n        <div style={{ marginRight: '1rem' }} />\r\n        <IconButton onClick={closeForm}><BsXLg /></IconButton>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default TaskForm\r\n","export const isFileImage = (url: string) => {\r\n  if (typeof url !== 'string') {\r\n    return false;\r\n  }\r\n  return (url.match(/^http[^\\?]*.(jpg|jpeg|gif|png|tiff|bmp|webp)(\\?(.*))?$/gmi) !== null);\r\n}","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react'\r\ninterface File {\r\n  cardId: string,\r\n  fileName: string,\r\n  filePath: string,\r\n  fileType: string,\r\n  fileSize: string\r\n}\r\n\r\ntype FilesResponse = File[]\r\n// const url = 'http://localhost:5000/'\r\nconst url = 'https://lukas-backend.herokuapp.com/'\r\n\r\nexport const filesApi = createApi({\r\n  reducerPath: 'filesApi',\r\n  baseQuery: fetchBaseQuery({ baseUrl: url }),\r\n  tagTypes: ['Files'],\r\n  endpoints: (builder) => ({\r\n    getAllFiles: builder.query<FilesResponse, void>({\r\n      query: () => `files`,\r\n      providesTags: ['Files'],\r\n    }),\r\n    getFile: builder.query<FilesResponse, Partial<File>>({\r\n      query: (id) => `files/${id}`,\r\n      providesTags: ['Files'],\r\n    }),\r\n    uploadFile: builder.mutation({\r\n      query: (body: {}) => ({\r\n        url: `files`,\r\n        method: 'POST',\r\n        body\r\n      }),\r\n      invalidatesTags: ['Files'],\r\n    }),\r\n    deleteFile: builder.mutation<{ success: boolean; id: string | number }, string>({\r\n      query: (id) => ({\r\n        url: `files/${id}`,\r\n        method: 'DELETE',\r\n      }),\r\n      invalidatesTags: ['Files'],\r\n    }),\r\n  }),\r\n})\r\n\r\nexport const {\r\n  useGetAllFilesQuery,\r\n  useGetFileQuery,\r\n  useUploadFileMutation,\r\n  useDeleteFileMutation,\r\n} = filesApi\r\n","import React, { useRef } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport IconButton from '../IconButton/IconButton'\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport { MdOutlineArrowBackIos } from \"react-icons/md\";\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside'\r\n\r\ntype Props = {\r\n  trigger?: boolean\r\n  title: string\r\n  closePopup: () => void\r\n  editWindow?: boolean\r\n  backToMainWindow?: () => void\r\n}\r\nconst Popup: React.FC<Props> = ({ children, trigger, title, closePopup, editWindow, backToMainWindow }) => {\r\n  const refPopup = useRef(null)\r\n  useOnClickOutside(refPopup, closePopup)\r\n  \r\n  return (\r\n    trigger ? (\r\n      <div className={styles.popup} ref={refPopup}>\r\n        <div className={styles.menuHeader}>\r\n          {editWindow ? <IconButton onClick={backToMainWindow}><MdOutlineArrowBackIos /></IconButton> : null}\r\n          <h3>{title}</h3>\r\n          <IconButton onClick={closePopup}><BsXLg /></IconButton>\r\n        </div>\r\n        <div className={styles.popupContent}>\r\n          {children}\r\n        </div>\r\n      </div>\r\n    ) : null\r\n  )\r\n}\r\n\r\nexport default Popup","import React from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { BiCheck } from 'react-icons/bi';\r\nimport IconButton from '../../../../Details/IconButton/IconButton'\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport LabelForm from '../LabelForm/LabelForm';\r\n\r\ntype Props = {\r\n  labelId: string\r\n  title: string\r\n  color: string\r\n  cardLabels: []\r\n  checkedLabel: (value: any) => void\r\n  openLabelEditWindow: () => void\r\n}\r\n\r\nconst Label: React.FC<Props> = ({ title, color, cardLabels, checkedLabel, openLabelEditWindow, labelId }) => {\r\n  const activeLabels = cardLabels.filter((label: { _id: string }) => label._id === labelId)\r\n  return (\r\n    <div className={styles.container}>\r\n      <div onClick={checkedLabel} style={{ background: `${color}` }} className={styles.boxColor}>\r\n        <p>{title}</p>\r\n        {activeLabels.length ? < BiCheck style={{ color: 'white' }} /> : null}\r\n      </div>\r\n      <IconButton onClick={openLabelEditWindow}><BsPencil /></IconButton>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Label","import React from 'react'\r\nimport styles from './styles.module.scss'\r\n\r\ntype Props = {\r\n  data: any\r\n  children: any\r\n  title: string\r\n}\r\n\r\nconst ItemsContainer: React.FC<Props> = ({ children, title, data }) => {\r\n  const isDataExist = Array.isArray(data) ? (data.length ? true : false) : (data === null || data === undefined ? false : true)\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isDataExist ? (\r\n          <div className={styles.container}>\r\n            <h4>{title}</h4>\r\n            <div className={styles.items}>\r\n              {children}\r\n            </div>\r\n          </div>\r\n        ) : null\r\n      }\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ItemsContainer","import React, { useState } from 'react'\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\nimport Button from '../../../../Details/Button/Button'\r\nimport { HexColorPicker } from \"react-colorful\";\r\n\r\ntype Props = {\r\n  formId: string\r\n  value: string | undefined\r\n  handleSubmit: (value: any) => void\r\n  handleChange: (value: any) => void\r\n  onFocus?: (value: any) => void\r\n  deleteLabel: () => void\r\n  setSelectColor: (vlaue: string) => void\r\n  selectColor: string\r\n}\r\n\r\nconst LabelForm: React.FC<Props> = ({\r\n  handleChange,\r\n  handleSubmit,\r\n  deleteLabel,\r\n  value,\r\n  formId,\r\n  onFocus,\r\n  setSelectColor,\r\n  selectColor }) => {\r\n  const placeholder = 'Dodaj nazwę etykiety...'\r\n\r\n  return (\r\n    <form className={styles.form}>\r\n      <p style={{ marginBottom: '5px' }}>Nazwa</p>\r\n      <TextareaAutosize\r\n        id={formId}\r\n        maxRows={20}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        className={styles.textarea}\r\n        autoFocus\r\n        onChange={handleChange}\r\n        onFocus={onFocus}\r\n      />\r\n      <p style={{ marginBottom: '5px' }}>Wybierz kolor</p>\r\n      <HexColorPicker className={styles.reactColorful} color={selectColor} onChange={setSelectColor} />\r\n      <div className={styles.actionsForm}>\r\n        <Button onClick={handleSubmit} title={'Zapisz'} type={'submit'}/>\r\n        <div style={{ marginRight: '1rem' }} />\r\n        <Button onClick={deleteLabel} title={'Usuń'} bgColor={'#EA4746'} type={'button'}/>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default LabelForm","import React, { useCallback, useRef, useState } from 'react'\r\nimport { Line } from 'rc-progress';\r\nimport styles from './styles.module.scss'\r\n\r\nimport storage from '../../../../../config/firebase'\r\nimport Button from '../../../../Details/Button/Button'\r\n\r\ntype Props = {\r\n  name: string\r\n  size: number\r\n  label: string\r\n  type: string\r\n  nameFiles: string[]\r\n  handleSubmitFile: (value: any) => void\r\n  handleInputState: (value: any) => void\r\n}\r\n\r\nconst FileForm: React.FC<Props> = ({ name, size, nameFiles, label, type, handleInputState, handleSubmitFile, ...rest }) => {\r\n  const inputRef = useRef()\r\n  const [progress, setProgress] = useState<number>(0)\r\n\r\n  const uploadOptions =  {\r\n    onUploadProgress: (progressEvent: { loaded: any; total: any; }) => {\r\n      const {loaded, total} = progressEvent;\r\n      const percentage = Math.floor(((loaded / 1000) * 100) / (total / 1000));\r\n      setProgress(percentage);\r\n  }\r\n  }\r\n\r\n  return (\r\n    <div >\r\n      <form className={styles.formFile}>\r\n        <label id={\"formId\"} className={styles.labelFile}>\r\n          <input\r\n            id={\"formId\"}\r\n            type={type}\r\n            name={name}\r\n            onChange={handleInputState}\r\n            multiple\r\n            hidden\r\n            {...rest}\r\n          />\r\n          Dodaj załączniki\r\n        </label>\r\n        <div className={styles.spanContainer}>\r\n          {\r\n            nameFiles.map((name, index) => (\r\n              <span key={index} className={styles.nameFileSpan}>{name}</span>\r\n            ))\r\n          }\r\n        </div>\r\n        {/* <Line percent:number=\"10\" strokeWidth=\"4\" strokeColor=\"#D3D3D3\" /> */}\r\n        {\r\n          nameFiles.length ? (\r\n            <Button onClick={handleSubmitFile} title={\"Załącz\"} type={'submit'} />\r\n          ) : null\r\n        }\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default FileForm","import React, { useCallback } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { isFileImage } from '../../../../../hooks/isFileImage'\r\nimport TaskButton from '../../../TaskButton/TaskButton'\r\n\r\ntype Props = {\r\n  title: string,\r\n  src: string,\r\n  created: string,\r\n  index: number,\r\n  active: number,\r\n  type: string,\r\n  deleteFile: () => void\r\n  downloadFile: () => void\r\n  selectCover: () => void\r\n}\r\n\r\nconst Files: React.FC<Props> = ({ created, title, src, type, index, active, deleteFile, downloadFile, selectCover }) => {\r\nconst fileExtension = type.split('/').pop();\r\n\r\n  return (\r\n    <div className={styles.container} >\r\n      <div className={styles.fileImg}>\r\n        {\r\n          isFileImage(src) ? (\r\n            <>\r\n              <img src={src} className=\"card-img-top img-responsive\" alt=\"img\" />\r\n              <div className={styles.selectCover} title='ustaw okładkę'>\r\n                <input\r\n                  type=\"checkbox\"\r\n                  checked={active === index ? true : false}\r\n                  onChange={selectCover}\r\n                  style={{ height: '100%', width: '1rem', marginRight: '8px' }} />\r\n              </div>\r\n            </>\r\n          ) : (<p>{fileExtension}</p>)\r\n        }\r\n      </div>\r\n      <div className={styles.fileDetails}>\r\n        <h4>{title}</h4>\r\n        <span>{created}</span>\r\n        <div className={styles.fileButtons}>\r\n          <TaskButton height={'25px'} margin={'0 8px 0 0'} onClick={deleteFile} name={'Skasuj'} />\r\n          <TaskButton height={'25px'} margin={'0'} onClick={downloadFile} name={'Pobierz'} />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Files","import React, { useState, useRef, useEffect, useCallback } from 'react'\r\nimport axios from 'axios';\r\nimport styles from './styles.module.scss'\r\nimport dayjs from 'dayjs';\r\nimport fileDownload from 'js-file-download'\r\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\r\nimport isToday from 'dayjs/plugin/isToday';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport updateLocale from 'dayjs/plugin/updateLocale'\r\nimport duration from 'dayjs/plugin/duration'\r\nimport Dropzone from 'react-dropzone'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport storage from '../../../config/firebase';\r\nimport { ref, getDownloadURL, uploadBytesResumable } from \"firebase/storage\";\r\n\r\n\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\n\r\nimport TaskForm from '../TaskForm/TaskForm'\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside'\r\nimport { isFileImage } from '../../../hooks/isFileImage'\r\n\r\nimport DatePicker, { registerLocale } from \"react-datepicker\";\r\nimport { parseISO, format } from 'date-fns'\r\nimport { pl } from 'date-fns/locale'\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nimport { BsXLg } from 'react-icons/bs';\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport { BiTask } from 'react-icons/bi';\r\nimport { GrAttachment } from 'react-icons/gr';\r\nimport { BsStopwatch } from 'react-icons/bs';\r\nimport { MdOutlineLabel } from 'react-icons/md';\r\nimport { CgArrowRight, CgChevronDoubleLeft } from 'react-icons/cg';\r\nimport { IoMdAdd } from 'react-icons/io';\r\nimport { RiDeleteBinLine } from 'react-icons/ri';\r\n// import { SwatchesPicker } from 'react-color';\r\n\r\nimport {\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\n\r\nimport {\r\n  useGetCardQuery,\r\n  useGetCardFilesQuery,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n  useUploadFilesCardMutation,\r\n  // useDeleteFileMutation,\r\n} from \"../../../store/reducers/cardsReducer\";\r\n\r\nimport {\r\n  useGetAllFilesQuery,\r\n  useGetFileQuery,\r\n  useUploadFileMutation,\r\n  useDeleteFileMutation,\r\n} from '../../../store/reducers/filesReducer'\r\n\r\n// import { GrAdd } from 'react-icons/gr';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\nimport Popup from '../../Details/Popup/Popup';\r\nimport Label from './CardWindowDetails/Label/Label';\r\nimport { BiCheck } from 'react-icons/bi';\r\n// import { labelItems } from '../localData';\r\n\r\nimport ItemsContainer from './CardWindowDetails/ItemsContainer/ItemsContainer'\r\nimport LabelForm from './CardWindowDetails/LabelForm/LabelForm'\r\nimport Button from '../../Details/Button/Button';\r\n\r\nimport FileForm from './CardWindowDetails/FileForm/FileForm'\r\nimport Files from './CardWindowDetails/Files/Files';\r\n\r\nimport { Line as ProgressLine } from 'rc-progress';\r\n\r\ntype Props = {\r\n  cardId: string\r\n  title: string\r\n  description: string\r\n  boardId: string\r\n  nameList: string | undefined\r\n  deadlineCard: Date | null\r\n  cardLabels: any\r\n  cardFiles: any\r\n  cardCompleted: boolean\r\n  dateIsSameOrBefore: boolean\r\n  deadlineIsSoon: boolean\r\n  cardCover?: string | undefined\r\n  cardFileIndex: number\r\n  cardDateDisplay: {\r\n    style: {\r\n      backgroundColor: string\r\n    },\r\n    title: string\r\n    name: string\r\n  }\r\n  setIsCardWindowOpen: () => void\r\n  setCardCompleted: (value: any) => void\r\n  setDeadlineCard: (value: any) => void\r\n  setCardLabels: (value: any) => void\r\n  setCover: (value: any) => void\r\n  setFileIndex: (value: any) => void\r\n}\r\n\r\nconst CardWindow: React.FC<Props> = ({\r\n  cardId,\r\n  title,\r\n  boardId,\r\n  nameList,\r\n  description,\r\n  cardLabels,\r\n  deadlineCard,\r\n  cardCompleted,\r\n  setDeadlineCard,\r\n  setCardCompleted,\r\n  setIsCardWindowOpen,\r\n  setCardLabels,\r\n  dateIsSameOrBefore,\r\n  deadlineIsSoon,\r\n  cardDateDisplay,\r\n  cardFiles,\r\n  cardCover,\r\n  setCover,\r\n  setFileIndex,\r\n  cardFileIndex\r\n}) => {\r\n  dayjs.locale('pl');\r\n  const { data: board, error, isLoading } = useGetBoardQuery(boardId);\r\n\r\n  const [updateCard] = useUpdateCardMutation();\r\n  const [deleteCard] = useDeleteCardMutation();\r\n  const [updateBoard] = useUpdateBoardMutation();\r\n  const [uploadFiles] = useUploadFileMutation();\r\n  const [deleteFile] = useDeleteFileMutation();\r\n\r\n  const refWindow = useRef(null)\r\n  const [cardTitle, setCardTitle] = useState<string>(title)\r\n  const [cardDescription, setCardDescription] = useState<string | undefined>(description)\r\n  const [labels, setLabels] = useState([] as any)\r\n  const [formIsOpen, setFormIsOpen] = useState(false)\r\n  const [labelsTrigger, setLabelsTrigger] = useState<boolean>(false)\r\n  const [dateTrigger, setDateTrigger] = useState<boolean>(false)\r\n  const [fileTrigger, setFileTrigger] = useState<boolean>(false)\r\n  const [isOpenLabelEditWindow, setIsOpenLabelEditWindow] = useState<boolean>(false)\r\n  const [isOpenAddNewLabelWindow, setIsOpenAddNewLabelWindow] = useState<boolean>(false)\r\n  const [currentLabelTitle, setCurrentLabelTitle] = useState<string>('')\r\n  const [currentLabelId, setCurrentLabelId] = useState<string>('')\r\n  const [currentLabelColor, setCurrentLabelColor] = useState<string>('')\r\n  const [labelTitle, setLabelTitle] = useState<string>('')\r\n\r\n  const [selectedFiles, setSelectedFiles] = useState<any>('');\r\n  const [selectedNameFiles, setSelectedNameFiles] = useState<string[]>([]);\r\n  const [uploadProgress, setUploadProgress] = useState(0);\r\n  const [uploadStatus, setUploadStatus] = useState<null | boolean>(null)\r\n  const [selectCardCover, setSelectCardCover] = useState('')\r\n\r\n  // const url = 'http://localhost:5000/'\r\n  const url = 'https://lukas-backend.herokuapp.com/'\r\n\r\n\r\n\r\n  // if(cardCompleted.match(/\\.(jpeg|jpg|png|webp|pdf|doc|docx|xlsx|xls)$/))\r\n  // console.log(cardCover.split('.').pop())\r\n\r\n  useEffect(() => {\r\n    if (board) {\r\n      setLabels(board.labels)\r\n    }\r\n  }, [board])\r\n\r\n\r\n  const handleEditCardTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card-title') setCardTitle(e.target.value)\r\n    updateCard({\r\n      id: cardId,\r\n      title: e.target.value\r\n    })\r\n    updateBoard({\r\n      id: boardId\r\n    })\r\n  }\r\n\r\n  const handleEditCardDescription = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card-description')\r\n      setCardDescription(e.target.value)\r\n  }\r\n\r\n  const handleSaveCardDescription = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      id: cardId,\r\n      description: cardDescription\r\n    })\r\n    updateBoard({\r\n      id: boardId\r\n    })\r\n    setFormIsOpen(false)\r\n  }\r\n\r\n  const handleChangeLabelTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'label-title-edit') setCurrentLabelTitle(e.target.value)\r\n    if (e.target.id === 'label-title-add') setLabelTitle(e.target.value)\r\n  }\r\n\r\n  const handleSaveLabelEdit = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    const newLabels = [...labels]\r\n    const newCardLabels = [...cardLabels]\r\n    if (labels) {\r\n      const newLabelState = newLabels.map((label: any) => {\r\n        if (label._id !== currentLabelId) return label;\r\n        return { ...label, title: currentLabelTitle, color: currentLabelColor };\r\n      });\r\n\r\n      const newCardLabelState = newCardLabels.map((label: any) => {\r\n        if (label._id !== currentLabelId) return label;\r\n        return { ...label, title: currentLabelTitle, color: currentLabelColor };\r\n      })\r\n\r\n      setCardLabels(newCardLabelState)\r\n      setLabels(newLabelState)\r\n      updateBoard({\r\n        id: boardId,\r\n        labels: newLabelState\r\n      })\r\n      setIsOpenLabelEditWindow(false)\r\n    }\r\n  }\r\n\r\n  const handleAddNewLabel = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    const newLabels = [...labels, { color: currentLabelColor, title: labelTitle, active: false }]\r\n    updateBoard({\r\n      id: boardId,\r\n      labels: newLabels\r\n    })\r\n    setIsOpenAddNewLabelWindow(false)\r\n  }\r\n\r\n  const handleCheckedLabel = (item: any) => {\r\n    const copyCardLabels = [...cardLabels]\r\n    const newLabel = { ...item, active: !item.active };\r\n    const existLabel = copyCardLabels.find((label: { _id: string; }) => label._id === newLabel._id)\r\n\r\n    if (existLabel) {\r\n      const newLabels = copyCardLabels.filter((label: { _id: string; }) => label._id !== existLabel._id)\r\n      setCardLabels(newLabels)\r\n      updateCard({\r\n        id: cardId,\r\n        labels: newLabels\r\n      })\r\n    } else {\r\n      const newLabels = [...copyCardLabels, newLabel]\r\n      setCardLabels(newLabels)\r\n      updateCard({\r\n        id: cardId,\r\n        labels: newLabels\r\n      })\r\n    }\r\n    updateBoard({\r\n      id: boardId,\r\n    })\r\n  }\r\n\r\n  const handleDeleteLabel = () => {\r\n    const newLabels = [...labels]\r\n    const newCardLabels = [...cardLabels]\r\n    const newLabelsState = newLabels.filter((label) => label._id !== currentLabelId);\r\n    const newCardLabelsState = newCardLabels.filter((label) => label._id !== currentLabelId);\r\n    setLabels(newLabelsState)\r\n    setCardLabels(newCardLabelsState)\r\n    updateCard({\r\n      id: cardId,\r\n      labels: newCardLabelsState\r\n    })\r\n    updateBoard({\r\n      id: boardId,\r\n      labels: newLabelsState\r\n    })\r\n    setIsOpenLabelEditWindow(false)\r\n  }\r\n\r\n  const handleGetCurrentEditLabel = (id: string) => {\r\n    const newLabels = [...labels]\r\n    const activeLabel = newLabels.filter((label: { _id: string }) => label._id === id)\r\n    const activeLabelTitle = activeLabel.map((label: { title: string }) => label.title).toString()\r\n    const activeLabelColor = activeLabel.map((label: { color: string }) => label.color).toString()\r\n    setCurrentLabelTitle(activeLabelTitle)\r\n    setCurrentLabelColor(activeLabelColor)\r\n    setCurrentLabelId(id)\r\n  }\r\n\r\n  const handleSaveDeadline = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    updateCard({\r\n      id: cardId,\r\n      deadline: deadlineCard\r\n    })\r\n    updateBoard({ id: boardId })\r\n    setDateTrigger(false)\r\n  }\r\n\r\n  const handleDeleteDeadline = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    setDeadlineCard(null)\r\n    updateCard({\r\n      id: cardId,\r\n      deadline: null\r\n    })\r\n    updateBoard({ id: boardId })\r\n    setDateTrigger(false)\r\n  }\r\n\r\n  const handleChangeCompleted = () => {\r\n    setCardCompleted(!cardCompleted);\r\n    updateCard({\r\n      id: cardId,\r\n      completed: !cardCompleted\r\n    })\r\n    updateBoard({\r\n      id: boardId\r\n    })\r\n  };\r\n\r\n  const handleUploadImage = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\r\n    if (e.currentTarget.files !== null) {\r\n      setSelectedFiles(e.currentTarget.files)\r\n      const arr = []\r\n      for (let i = 0; i < e.currentTarget.files.length; i++) {\r\n        arr.push(e.currentTarget.files[i].name)\r\n        setSelectedNameFiles(arr)\r\n      }\r\n    }\r\n  },\r\n    [],\r\n  );\r\n\r\n  const uploadFileOptions = {\r\n    headers: {\r\n      'content-type': 'multipart/form-data'\r\n    },\r\n    onUploadProgress: (progressEvent: { loaded: number; total: number; }) => {\r\n      const { loaded, total } = progressEvent;\r\n      const percent = Math.floor(((loaded / 1000) * 100) / (total / 1000));\r\n      setUploadProgress(percent);\r\n    }\r\n  }\r\n\r\n  const handleSubmitFile = async (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n    e.preventDefault()\r\n    if (!selectedFiles.length) return;\r\n    const formData = new FormData();\r\n    formData.append('cardId', cardId)\r\n    for (let i = 0; i < selectedFiles.length; i++) {\r\n      formData.append('files', selectedFiles[i]);\r\n    }\r\n\r\n    await axios.post(`${url}files`, formData, uploadFileOptions)\r\n      .then(res => {\r\n        updateCard({\r\n          id: cardId,\r\n        })\r\n        setUploadStatus(true)\r\n        setTimeout(() => {\r\n          setUploadProgress(0)\r\n          setSelectedNameFiles([])\r\n          setFileTrigger(false)\r\n        }, 1000)\r\n      })\r\n      .catch((error) => {\r\n        console.log(error)\r\n        setUploadStatus(false)\r\n      })\r\n  }\r\n\r\n  const handleDeleteFile = (fileId: string) => {\r\n    deleteFile(fileId)\r\n    updateCard({\r\n      id: cardId,\r\n      files: cardFiles\r\n    })\r\n    if (cardFiles.length) {\r\n      setCover(cardFiles[0].fileUrl)\r\n    }\r\n    else {\r\n      setCover('')\r\n    }\r\n  }\r\n\r\n  const handleDownloadFile = (fileUrl: string) => {\r\n    axios.get(`${fileUrl}`, {\r\n      responseType: 'blob',\r\n    }).then((res) => {\r\n      let filename = fileUrl.replace(/^.*[\\\\\\/]/, '')\r\n      let fileExtension;\r\n      fileExtension = fileUrl.split('.');\r\n      fileExtension = fileExtension[fileExtension.length - 1];\r\n      fileDownload(res.data, `${filename}.${fileExtension}`);\r\n    });\r\n  }\r\n\r\n  useOnClickOutside(refWindow, setIsCardWindowOpen)\r\n\r\n  const onClickHandler = () => {\r\n    // setSelected(id); \r\n    // const newWindow = window.open(`${cardCover}`, \"_blank\", 'noopener,noreferrer');\r\n    // if (newWindow) newWindow.opener = null\r\n  }\r\n\r\n\r\n\r\n  const handleSelectCover = (index: number) => {\r\n    setFileIndex(index)\r\n    setCover(cardFiles[index].fileUrl)\r\n    updateCard({\r\n      id: cardId,\r\n      cover: cardFiles[index].fileUrl\r\n    })\r\n    updateBoard({\r\n      id: boardId\r\n    })\r\n  }\r\n  \r\n  return (\r\n    <>\r\n      <div className={styles.overlay} onClick={setIsCardWindowOpen}></div>\r\n      <div ref={refWindow} className={styles.cardWindow}>\r\n        {\r\n          cardCover && isFileImage(cardCover)? (\r\n            <div className={styles.cardCover} >\r\n              <img onClick={onClickHandler} src={cardCover} alt={cardCover} />\r\n            </div>\r\n          ) : null\r\n        }\r\n\r\n        <div className={styles.closeWindowBtn}>\r\n          <IconButton onClick={setIsCardWindowOpen}><BsXLg /></IconButton>\r\n        </div>\r\n        <div className={styles.cardWindowContent}>\r\n          <div className={styles.cardHeader}>\r\n            <div className={styles.cardHeaderText}>\r\n              <TextareaAutosize\r\n                id='card-title'\r\n                autoFocus={false}\r\n                value={cardTitle}\r\n                className={styles.textareaTitle}\r\n                onChange={handleEditCardTitle}\r\n                onFocus={(e) => e.target.select()}\r\n                rows={20}\r\n                required\r\n              />\r\n              <p>Na liscie: <strong>{nameList}</strong></p>\r\n            </div>\r\n          </div>\r\n          <div className={styles.cardContainer}>\r\n            <div className={styles.windowMain}>\r\n              <ItemsContainer data={cardLabels} title={'Etykiety'}>\r\n                {\r\n                  cardLabels.map((label: { title: string; active: any; color: any; _id: string }) => (\r\n                    <div\r\n                      key={label._id}\r\n                      style={{ backgroundColor: `${label.color}` }}\r\n                      className={styles.label}\r\n                      onClick={() => setLabelsTrigger(true)}\r\n                    >\r\n                      <span>{label.title}</span>\r\n                    </div>\r\n                  ))\r\n                }\r\n              </ItemsContainer>\r\n              <ItemsContainer data={deadlineCard} title={'Termin'}>\r\n                {\r\n                  deadlineCard ? (\r\n                    <>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        checked={cardCompleted}\r\n                        onChange={handleChangeCompleted}\r\n                        style={{ height: '100%', width: '1rem', marginRight: '8px' }} />\r\n                      <button onClick={() => setDateTrigger(true)}\r\n                        className={styles.selectedDateBtn}>\r\n                        <span>{dayjs(deadlineCard).format('DD-MM-YYYY HH:mm')}</span>\r\n                        {\r\n                          dateIsSameOrBefore && !cardCompleted ? (\r\n                            <span\r\n                              title={cardDateDisplay.title}\r\n                              style={{ backgroundColor: cardDateDisplay.style.backgroundColor }} className={styles.datedateNotificationSpan}>\r\n                              {cardDateDisplay.name}\r\n                            </span>\r\n                          ) : null\r\n                        }\r\n                        {\r\n                          deadlineIsSoon && !cardCompleted ? (\r\n                            <span\r\n                              title={cardDateDisplay.title}\r\n                              style={{ backgroundColor: cardDateDisplay.style.backgroundColor }} className={styles.datedateNotificationSpan}>\r\n                              {cardDateDisplay.name}\r\n                            </span>\r\n                          ) : null\r\n                        }\r\n                        {\r\n                          cardCompleted ? (\r\n                            <span\r\n                              title={cardDateDisplay.title}\r\n                              style={{ backgroundColor: cardDateDisplay.style.backgroundColor }} className={styles.datedateNotificationSpan}>\r\n                              {cardDateDisplay.name}\r\n                            </span>\r\n                          ) : null\r\n                        }\r\n\r\n                      </button>\r\n                    </>\r\n                  ) : null\r\n                }\r\n              </ItemsContainer>\r\n              <div className={styles.descriptionContainer}>\r\n                <div className={styles.descriptionHeader}>\r\n                  <h4>Opis</h4>\r\n                  <div style={{ maxWidth: '100px', marginLeft: '1rem' }}>\r\n                    {\r\n                      !formIsOpen && cardDescription !== undefined && cardDescription !== '' ? (\r\n                        <TaskButton onClick={() => setFormIsOpen(true)} name={'Edytuj'} icon={<BsPencil />} />\r\n                      ) : null\r\n                    }\r\n                  </div>\r\n                </div>\r\n                {\r\n                  formIsOpen ?\r\n                    <TaskForm\r\n                      id={'card-description'}\r\n                      handleChange={handleEditCardDescription}\r\n                      handleSubmit={handleSaveCardDescription}\r\n                      closeForm={() => { setFormIsOpen(false); setCardDescription(description) }}\r\n                      value={cardDescription}\r\n                      onFocus={(e) => e.target.select()}\r\n                      titleBtn={'Zapisz'}\r\n                    /> :\r\n                    <div>\r\n                      {cardDescription !== '' && cardDescription !== undefined ? <p onClick={() => setFormIsOpen(true)}>{cardDescription}</p> :\r\n                        <TaskButton onClick={() => setFormIsOpen(true)} name={'Dodaj opis...'} icon={<IoMdAdd />} />}\r\n                    </div>\r\n                }\r\n              </div>\r\n              <ItemsContainer data={cardFiles} title={'Załącznik'}>\r\n                <div className={styles.filesContainer}>\r\n                  {\r\n                    cardFiles?.map((file: { _id: string; fileName: string; createdAt: string; fileUrl: string; fileType: string }, index: number) => (\r\n                      <Files\r\n                        key={file._id}\r\n                        title={file.fileName}\r\n                        created={`Dodano ${dayjs(file.createdAt).format('DD MMM')} o ${dayjs(file.createdAt).format('HH:mm')}`}\r\n                        active={cardFileIndex}\r\n                        index={index}\r\n                        src={`${file.fileUrl}`}\r\n                        type={file.fileType}\r\n                        deleteFile={() => handleDeleteFile(file._id)}\r\n                        downloadFile={() => handleDownloadFile(file.fileUrl)}\r\n                        selectCover={() => handleSelectCover(index)}\r\n                      />\r\n                    ))\r\n                  }\r\n                </div>\r\n              </ItemsContainer>\r\n            </div>\r\n            <div className={styles.cardSidebar} >\r\n              <Popup\r\n                title={isOpenLabelEditWindow ? 'Edytuj etykietę' : isOpenAddNewLabelWindow ? 'Dodaj Etykietę' : 'Etykiety'}\r\n                trigger={labelsTrigger}\r\n                closePopup={() => { setLabelsTrigger(false); setIsOpenLabelEditWindow(false); setIsOpenAddNewLabelWindow(false) }}\r\n                editWindow={isOpenLabelEditWindow || isOpenAddNewLabelWindow}\r\n                backToMainWindow={() => { setIsOpenLabelEditWindow(false); setIsOpenAddNewLabelWindow(false) }}\r\n              >\r\n                <div className={styles.labels}>\r\n                  {\r\n                    !isOpenLabelEditWindow &&\r\n                      !isOpenAddNewLabelWindow ? (\r\n                      <>\r\n                        <div className={styles.labelsList}>\r\n                          {\r\n                            labels.map((label: any) => (\r\n                              <Label\r\n                                key={label._id}\r\n                                labelId={label._id}\r\n                                title={label.title}\r\n                                color={label.color}\r\n                                cardLabels={cardLabels}\r\n                                openLabelEditWindow={() => {\r\n                                  setIsOpenLabelEditWindow(true)\r\n                                  handleGetCurrentEditLabel(label._id)\r\n                                }}\r\n                                checkedLabel={() => handleCheckedLabel(label)}\r\n                              >\r\n                              </Label>\r\n                            ))\r\n                          }\r\n                        </div>\r\n                        <TaskButton onClick={() => setIsOpenAddNewLabelWindow(true)} name={'Utwórz nową etykietę'} />\r\n                      </>\r\n                    ) : (\r\n                      <LabelForm\r\n                        formId={isOpenLabelEditWindow ? 'label-title-edit' : isOpenAddNewLabelWindow ? 'label-title-add' : ''}\r\n                        handleChange={handleChangeLabelTitle}\r\n                        handleSubmit={isOpenLabelEditWindow ? handleSaveLabelEdit : isOpenAddNewLabelWindow ? handleAddNewLabel : () => console.log('label does not exist')}\r\n                        deleteLabel={handleDeleteLabel}\r\n                        value={isOpenLabelEditWindow ? currentLabelTitle : isOpenAddNewLabelWindow ? labelTitle : ''}\r\n                        onFocus={(e) => e.target.select()}\r\n                        selectColor={currentLabelColor}\r\n                        setSelectColor={setCurrentLabelColor}\r\n                      />\r\n                    )\r\n                  }\r\n                </div>\r\n              </Popup>\r\n              <Popup\r\n                title={'data'}\r\n                trigger={dateTrigger}\r\n                closePopup={() => setDateTrigger(false)}\r\n                backToMainWindow={() => setDateTrigger(false)}\r\n              >\r\n                <DatePicker\r\n                  dateFormat='DD/MM/YYYY'\r\n                  timeFormat=\"hh:mm\"\r\n                  selected={deadlineCard ? new Date(deadlineCard) : null}\r\n                  onChange={(date: Date) => setDeadlineCard(date)}\r\n                  inline\r\n                  showTimeInput\r\n                />\r\n                <label>Termin <br></br>\r\n                  <input style={{ maxWidth: '100px', marginRight: '10px' }} placeholder={dayjs(deadlineCard).format('DD/MM/YYYY')} />\r\n                  <input style={{ maxWidth: '100px' }} placeholder={dayjs(deadlineCard).format('HH:mm')} />\r\n                </label>\r\n                <div className={styles.actionsForm}>\r\n                  <Button onClick={handleSaveDeadline} title={'Zapisz'} type={'button'} />\r\n                  <div style={{ marginRight: '1rem' }} />\r\n                  <Button onClick={handleDeleteDeadline} title={'Usuń'} bgColor={'#EA4746'} type={'button'} />\r\n                </div>\r\n              </Popup>\r\n              <Popup\r\n                title={'załącznik'}\r\n                trigger={fileTrigger}\r\n                closePopup={() => setFileTrigger(false)}\r\n                backToMainWindow={() => setFileTrigger(false)}\r\n              >\r\n                <FileForm\r\n                  name={'załącznik'}\r\n                  size={0}\r\n                  label={'załącznik'}\r\n                  type={'file'}\r\n                  nameFiles={selectedNameFiles}\r\n                  handleInputState={handleUploadImage} handleSubmitFile={handleSubmitFile}\r\n                />{\r\n                  uploadProgress > 0 ? (\r\n                    <>\r\n                      {uploadStatus !== null ? (<ProgressLine percent={uploadProgress} strokeWidth={4} strokeColor=\"#D3D3D3\" />) : null}\r\n                      {uploadStatus === false ?\r\n                        <p style={{ color: 'red' }}>Błąd przesyłania<small> (max 10mb, lub nieprawidłowy format pliku)</small></p>\r\n                        : `${uploadProgress}%`}\r\n                    </>\r\n                  ) : null\r\n                }\r\n              </Popup>\r\n              <TaskButton onClick={() => setLabelsTrigger(true)} name={'Etykiety'} icon={<MdOutlineLabel />} />\r\n              <TaskButton onClick={() => setDateTrigger(true)} name={'Data'} icon={<BsStopwatch />} />\r\n              <TaskButton onClick={() => setFileTrigger(true)} name={'Załącznik'} icon={<GrAttachment />} />\r\n              <TaskButton onClick={() => setFormIsOpen(true)} name={'Marazyn'} icon={<BiTask />} />\r\n              <div className={styles.divider}></div>\r\n              {/* <TaskButton onClick={() => setFormIsOpen(true)} name={'Przenieś'} icon={<CgArrowRight />} /> */}\r\n              <TaskButton onClick={() => {\r\n                deleteCard(cardId);\r\n                updateBoard({ id: boardId })\r\n              }} name={'Usuń'} icon={<RiDeleteBinLine />} />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default CardWindow","import { RefObject, useRef, useEffect, useLayoutEffect } from 'react'\r\n\r\nconst useIsomorphicLayoutEffect = typeof window !== 'undefined' ? useLayoutEffect : useEffect\r\n\r\nfunction useEventListener<K extends keyof WindowEventMap>(\r\n  eventName: K,\r\n  handler: (event: WindowEventMap[K]) => void,\r\n): void\r\nfunction useEventListener<\r\n  K extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement = HTMLDivElement,\r\n>(\r\n  eventName: K,\r\n  handler: (event: HTMLElementEventMap[K]) => void,\r\n  element: RefObject<T>,\r\n): void\r\n\r\nfunction useEventListener<\r\n  KW extends keyof WindowEventMap,\r\n  KH extends keyof HTMLElementEventMap,\r\n  T extends HTMLElement | void = void,\r\n>(\r\n  eventName: KW | KH,\r\n  handler: (\r\n    event: WindowEventMap[KW] | HTMLElementEventMap[KH] | Event,\r\n  ) => void,\r\n  element?: RefObject<T>,\r\n) {\r\n  // Create a ref that stores handler\r\n  const savedHandler = useRef(handler)\r\n\r\n  useIsomorphicLayoutEffect(() => {\r\n    savedHandler.current = handler\r\n  }, [handler])\r\n\r\n  useEffect(() => {\r\n    // Define the listening target\r\n    const targetElement: T | Window = element?.current || window\r\n    if (!(targetElement && targetElement.addEventListener)) {\r\n      return\r\n    }\r\n\r\n    // Create event listener that calls handler function stored in ref\r\n    const eventListener: typeof handler = event => savedHandler.current(event)\r\n\r\n    targetElement.addEventListener(eventName, eventListener)\r\n\r\n    // Remove event listener on cleanup\r\n    return () => {\r\n      targetElement.removeEventListener(eventName, eventListener)\r\n    }\r\n  }, [eventName, element])\r\n}\r\n\r\nexport default useEventListener","import { RefObject, useState } from 'react'\r\n\r\nimport useEventListener from './useEventListener'\r\n\r\nfunction useHover<T extends HTMLElement = HTMLElement>(\r\n  elementRef: RefObject<T>,\r\n): boolean {\r\n  const [value, setValue] = useState<boolean>(false)\r\n\r\n  const handleMouseEnter = () => setValue(true)\r\n  const handleMouseLeave = () => setValue(false)\r\n\r\n  useEventListener('mouseenter', handleMouseEnter, elementRef)\r\n  useEventListener('mouseleave', handleMouseLeave, elementRef)\r\n\r\n  return value\r\n}\r\n\r\nexport default useHover\r\n","import React, { useState, useEffect, useRef, useCallback } from 'react'\r\n// import TextareaAutosize from 'react-textarea-autosize';\r\nimport styles from './styles.module.scss'\r\nimport { Draggable } from 'react-beautiful-dnd';\r\n\r\nimport dayjs from 'dayjs';\r\nimport isSameOrBefore from 'dayjs/plugin/isSameOrBefore';\r\nimport isToday from 'dayjs/plugin/isToday';\r\nimport relativeTime from 'dayjs/plugin/relativeTime';\r\nimport minMax from 'dayjs/plugin/minMax';\r\nimport updateLocale from 'dayjs/plugin/updateLocale'\r\nimport duration from 'dayjs/plugin/duration'\r\n\r\nimport 'dayjs/locale/pl';\r\nimport CardWindow from '../CardWindow/CardWindow';\r\n// import TextareaAutosize from 'react-textarea-autosize';\r\nimport {\r\n  // useGetAllTasksQuery,\r\n  // useAddTaskMutation,\r\n  // useDeleteTaskMutation,\r\n  // useUpdateTaskMutation,\r\n  // useAddCardMutation,\r\n} from \"../../../store/reducers/listsReducer\";\r\nimport {\r\n  // useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\nimport {\r\n  useGetCardQuery,\r\n  // useAddCardMutation,\r\n  useDeleteCardMutation,\r\n  useUpdateCardMutation,\r\n} from \"../../../store/reducers/cardsReducer\";\r\n\r\nimport { BsPencil } from 'react-icons/bs';\r\nimport { GrTextAlignFull } from 'react-icons/gr';\r\nimport { BsStopwatch } from 'react-icons/bs';\r\nimport { ImCheckboxUnchecked } from 'react-icons/im';\r\nimport { ImCheckboxChecked } from 'react-icons/im';\r\nimport { GrAttachment } from 'react-icons/gr';\r\n// import TaskButton from '../TaskButton/TaskButton';\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\nimport Button from '../../Details/Button/Button';\r\n\r\nimport useHover from '../../../hooks/useHover'\r\nimport { isFileImage } from '../../../hooks/isFileImage'\r\nimport Popup from '../../Details/Popup/Popup';\r\nimport { MdOutlineLabel } from 'react-icons/md';\r\nimport { RiDeleteBinLine } from 'react-icons/ri';\r\n\r\ntype Props = {\r\n  boardId: string\r\n  title: string\r\n  description: string\r\n  listId?: string\r\n  cardId: string\r\n  index: number\r\n  deadline: Date | null\r\n  completed: boolean\r\n  updateDate?: Date\r\n  cover: string\r\n  labels: []\r\n  files: []\r\n  nameList: string | undefined\r\n  onClickDelete?: () => void\r\n  dragDisabled: (value: boolean) => void\r\n}\r\n\r\nconst Card: React.FC<Props> = ({\r\n  cardId,\r\n  boardId,\r\n  title,\r\n  index,\r\n  nameList,\r\n  description,\r\n  completed,\r\n  labels,\r\n  deadline,\r\n  cover,\r\n  dragDisabled,\r\n}) => {\r\n  const { data: card, error, isLoading } = useGetCardQuery(cardId);\r\n  const [deleteCard] = useDeleteCardMutation()\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const [isCardWindowOpen, setIsCardWindowOpen] = useState<boolean>(false)\r\n  const [showText, setShowText] = useState<boolean>(false)\r\n  const [cardLabels, setCardLabels] = useState(labels)\r\n  const [cardCompleted, setCardCompleted] = useState<boolean>(completed)\r\n  const [deadlineCard, setDeadlineCard] = useState<Date | null>(deadline)\r\n  const [nowDate, setNowDate] = useState(Date.now())\r\n  const [files, setFiles] = useState([] as any)\r\n  const [cardCover, setCover] = useState<string | undefined>(cover)\r\n  const [cardFileIndex, setFileIndex] = useState<number>(0)\r\n  const [actionTrigger, setActionTrigger] = useState<boolean>(false)\r\n\r\n  dayjs.locale('pl');\r\n  dayjs.extend(isSameOrBefore)\r\n  dayjs.extend(duration)\r\n  dayjs.extend(relativeTime)\r\n\r\n  useEffect(() => {\r\n    const intervalIsSameOrBefore = setInterval(() => setNowDate(Date.now()), 100000)\r\n    return () => clearInterval(intervalIsSameOrBefore)\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if (card) {\r\n      setFiles(card.files)\r\n    }\r\n  }, [card])\r\n\r\n  useEffect(() => {\r\n    if (files) {\r\n      const newFiles = [...files]\r\n      const filesOnlyImages = newFiles.filter(file => isFileImage(file.fileUrl))\r\n      const selectedCover = filesOnlyImages.find((file: { fileUrl: string }) => file.fileUrl === cover)\r\n      let activeIndex = filesOnlyImages.indexOf(selectedCover);\r\n      const indexOnlyImages = newFiles.findIndex(el => isFileImage(el.fileUrl))\r\n      if (filesOnlyImages.length) {\r\n        if (activeIndex < 0) {\r\n          setCover(filesOnlyImages[0].fileUrl)\r\n          setFileIndex(indexOnlyImages)\r\n        } else {\r\n          setCover(filesOnlyImages[activeIndex].fileUrl)\r\n          setFileIndex(activeIndex)\r\n        }\r\n      }\r\n      else {\r\n        setCover('')\r\n      }\r\n    }\r\n  }, [files])\r\n\r\n  const handleMouseEnter = () => {\r\n    setShowText(true)\r\n  }\r\n\r\n  const handleMouseLeave = () => {\r\n    setShowText(false)\r\n  }\r\n\r\n  const handleOpenCardWindow = () => {\r\n    setIsCardWindowOpen(true)\r\n    dragDisabled(true)\r\n  }\r\n\r\n  const handleCloseCardWindow = () => {\r\n    setIsCardWindowOpen(false)\r\n    dragDisabled(false)\r\n  }\r\n\r\n  const handleChangeCompleted = () => {\r\n    setCardCompleted(!cardCompleted);\r\n    updateCard({\r\n      id: cardId,\r\n      completed: !cardCompleted\r\n    })\r\n    updateBoard({\r\n      id: boardId\r\n    })\r\n  };\r\n\r\n  const fiveHours = 300 //minutes\r\n  const dateIsSameOrBefore = dayjs(deadlineCard).isSameOrBefore(nowDate, 'minute')\r\n  const timeToDeadline = dayjs(deadlineCard).diff(dayjs(nowDate), 'minute', true)\r\n  const deadlineIsSoon = (timeToDeadline < fiveHours && timeToDeadline > 0) ? true : false\r\n\r\n  const cardDateDisplay = {\r\n    style: {\r\n      color: (cardCompleted || dateIsSameOrBefore || deadlineIsSoon) ? 'white' : 'black',\r\n      backgroundColor: cardCompleted ? 'green' : dateIsSameOrBefore ? 'red' : deadlineIsSoon ? 'orange' : 'transparent'\r\n    },\r\n    title: cardCompleted ? 'Ta karta została ukończona' :\r\n      dateIsSameOrBefore ? 'Ta karta jest przeterminowana' :\r\n        deadlineIsSoon ? `Deadline ${dayjs(deadlineCard).fromNow()}` : 'Karta jest na później',\r\n    name: cardCompleted ? 'zrealizowany' :\r\n      dateIsSameOrBefore ? 'termin przekroczony' :\r\n        deadlineIsSoon ? `wkrótce` : '',\r\n    iconStyle: {\r\n      marginRight: '5px',\r\n      fontSize: '14px',\r\n    }\r\n  }\r\n\r\n\r\n  const cardCoverStyle = {\r\n    backgroundColor: cardCover,\r\n    backgroundImage: `url(${cardCover})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  }\r\n\r\n  const hoverRef = useRef(null)\r\n  const isHover = useHover(hoverRef)\r\n\r\n  if (isLoading) return <p>...</p>\r\n  if (error) return <p>Brak połączenia</p>\r\n\r\n  return (\r\n    <>\r\n      {\r\n        isCardWindowOpen ?\r\n          <CardWindow\r\n            nameList={nameList}\r\n            cardId={cardId}\r\n            title={title}\r\n            description={description}\r\n            boardId={boardId}\r\n            deadlineCard={deadlineCard}\r\n            cardLabels={cardLabels}\r\n            cardCompleted={cardCompleted}\r\n            setCardLabels={setCardLabels}\r\n            setDeadlineCard={setDeadlineCard}\r\n            setCardCompleted={setCardCompleted}\r\n            setIsCardWindowOpen={handleCloseCardWindow}\r\n            dateIsSameOrBefore={dateIsSameOrBefore}\r\n            deadlineIsSoon={deadlineIsSoon}\r\n            cardDateDisplay={cardDateDisplay}\r\n            cardFiles={files}\r\n            cardCover={cardCover}\r\n            setFileIndex={setFileIndex}\r\n            cardFileIndex={cardFileIndex}\r\n            setCover={setCover}\r\n          /> : null\r\n      }\r\n      <div className={styles.container}>\r\n        <Draggable draggableId={String(cardId)} index={index} >\r\n          {provided => (\r\n            <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps} >\r\n              <div className={styles.card}\r\n                onMouseEnter={handleMouseEnter}\r\n                onMouseLeave={handleMouseLeave}\r\n              >\r\n                <div className={styles.cardContainer} >\r\n                  <div className={styles.cardClickableArea} onClick={handleOpenCardWindow}></div>\r\n                  {\r\n                    files.length ? (\r\n                      <div className={styles.cardCover} style={cardCoverStyle}>\r\n                      </div>\r\n                    ) : null\r\n                  }\r\n                  {\r\n                    cardLabels.length ? (\r\n                      <div className={styles.cardLabels} onClick={handleOpenCardWindow}>\r\n                        {\r\n                          cardLabels.map((label: { active: any; color: any; _id: string; title: string }) => (\r\n                            <div title={`${label.title}`} key={label._id} className={styles.cardLabel} style={{ backgroundColor: `${label.color}` }}></div>\r\n                          ))\r\n                        }\r\n                      </div>\r\n                    ) : null\r\n                  }\r\n                  <p >{title}</p>\r\n                  <div className={styles.iconsContainer}>\r\n                    <div ref={hoverRef}>\r\n                      {\r\n                        deadline ? (\r\n                          <button\r\n                            className={styles.dateBtn}\r\n                            onClick={handleChangeCompleted}\r\n                            style={cardDateDisplay.style}\r\n                            title={cardDateDisplay.title}\r\n\r\n                          >\r\n                            {isHover ? (cardCompleted ? <ImCheckboxChecked style={cardDateDisplay.iconStyle} /> : <ImCheckboxUnchecked style={cardDateDisplay.iconStyle} />) : <BsStopwatch style={cardDateDisplay.iconStyle} />}\r\n                            {dayjs(deadline).format('DD MMM')}\r\n                          </button>\r\n                        ) : null\r\n                      }\r\n                    </div>\r\n                    {description ? <div className={styles.icons} title=\"Ta karta ma opis.\"><GrTextAlignFull onClick={handleOpenCardWindow} /></div> : null}\r\n                    {files.length ? <div className={styles.icons} title=\"Załączniki\"><GrAttachment /><span>{files.length}</span></div> : null}\r\n                  </div>\r\n                </div>\r\n                <div className={styles.btnContainer}>\r\n                  {\r\n                  showText ? (<IconButton onClick={() => {\r\n                    setActionTrigger(true)\r\n                    dragDisabled(true)\r\n                    }}>\r\n                      <BsPencil />\r\n                    </IconButton>) : null\r\n                  }\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Draggable>\r\n        {/* <div className={styles.actionsPopup}> */}\r\n          <Popup\r\n            title={'akcje karty'}\r\n            trigger={actionTrigger}\r\n            closePopup={() => {\r\n              setActionTrigger(false)\r\n              dragDisabled(false)\r\n            }}\r\n          // backToMainWindow={() => setFileTrigger(false)}\r\n          >\r\n            <div className={styles.actionsPopupContent}>\r\n              <TaskButton onClick={() => {\r\n                handleOpenCardWindow()\r\n                setActionTrigger(false)\r\n              }} name={'Otwórz kartę'} icon={<MdOutlineLabel />} />\r\n\r\n              <TaskButton onClick={() => {\r\n                deleteCard(cardId);\r\n                updateBoard({ id: boardId })\r\n              }} name={'Usuń'} icon={<RiDeleteBinLine />} />\r\n            </div>\r\n          </Popup>\r\n        {/* </div> */}\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Card","import React, { useState, useRef, useEffect } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport TextareaAutosize from 'react-textarea-autosize';\r\nimport TaskForm from '../TaskForm/TaskForm';\r\nimport TaskButton from '../TaskButton/TaskButton';\r\nimport IconButton from '../../Details/IconButton/IconButton'\r\nimport { BsThreeDots } from \"react-icons/bs\";\r\n\r\nimport { labelItems } from '../localData';\r\n\r\nimport {\r\n  // useGetAllTasksQuery,\r\n  // useAddTaskMutation,\r\n  useDeleteTaskMutation,\r\n  useUpdateTaskMutation,\r\n  // useAddCardMutation,\r\n} from \"../../../store/reducers/listsReducer\";\r\nimport {\r\n  // useGetAllBoardsQuery,\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\nimport {\r\n  // useGetAllCardsQuery,\r\n  useAddCardMutation,\r\n  // useDeleteCardMutation,\r\n  // useUpdateCardMutation,\r\n} from \"../../../store/reducers/cardsReducer\";\r\nimport Card from '../Card/Card';\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside';\r\n// import { v4 as uuidv4 } from 'uuid';\r\n// import { MdOutlineAdd } from \"react-icons/md\";\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport Popup from '../../Details/Popup/Popup';\r\nimport { MdOutlineLabel } from 'react-icons/md';\r\nimport { RiDeleteBinLine } from 'react-icons/ri';\r\n// import { dangerouslyDisableDefaultSrc } from 'helmet/dist/middlewares/content-security-policy';\r\n\r\ntype Props = {\r\n  listId: string\r\n  boardId: string\r\n  title: string\r\n  index: number\r\n  cards: []\r\n}\r\n\r\nconst List: React.FC<Props> = ({ title, listId, index, cards, boardId }) => {\r\n  const { data: board, error, isLoading } = useGetBoardQuery(boardId);\r\n  const ref = useRef(null)\r\n  const [addCard] = useAddCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n  const [updateList] = useUpdateTaskMutation()\r\n  const [deleteList] = useDeleteTaskMutation()\r\n\r\n  const [listTitle, setListTitle] = useState<string | undefined>(title)\r\n  const [cardTitle, setCardTitle] = useState<string>('')\r\n  const [openCardForm, setOpenCardForm] = useState<boolean>(false)\r\n  const [openTitleForm, setOpenTitleForm] = useState<boolean>(false)\r\n  const [dragDisabled, setDragDisabled] = useState<boolean>(false)\r\n  const [actionTrigger, setActionTrigger] = useState<boolean>(false)\r\n\r\n  const handleChangeCardValue = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'card') setCardTitle(e.target.value)\r\n  }\r\n\r\n  const handleEditListTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'list') setListTitle(e.target.value)\r\n    updateList({\r\n      id: listId,\r\n      title: e.target.value\r\n    })\r\n  }\r\n\r\n  const handleAddCard = (e: React.MouseEvent<HTMLButtonElement, MouseEvent>): void => {\r\n    e.preventDefault()\r\n    if (cardTitle.length === 0) return\r\n    addCard({\r\n      listId: listId,\r\n      title: cardTitle,\r\n    })\r\n    updateBoard({\r\n      id: boardId,\r\n    })\r\n    setOpenCardForm(false)\r\n    setCardTitle('')\r\n  }\r\n\r\n  const handleDeleteAllCards = () => {\r\n    updateList({\r\n      id: listId,\r\n      cards: []\r\n    })\r\n    updateBoard({\r\n      id: boardId\r\n    })\r\n    setActionTrigger(false)\r\n  }\r\n\r\n  const handleDeleteList = () => {\r\n    deleteList(listId);\r\n    updateBoard({ id: boardId })\r\n  }\r\n\r\n  const handleCloseForm = () => { setOpenCardForm(false); setCardTitle(''); }\r\n  useOnClickOutside(ref, handleCloseForm)\r\n\r\n  return (\r\n    <div >\r\n      <Draggable draggableId={String(listId)} index={index} isDragDisabled={dragDisabled}>\r\n        {provided => (\r\n          <div className={styles.list} {...provided.draggableProps} ref={provided.innerRef} {...provided.dragHandleProps}>\r\n            <div className={styles.listHeader} onClick={() => setOpenTitleForm(true)} ref={ref}>\r\n              {\r\n                openTitleForm ?\r\n                  <div className={styles.textWrapper}>\r\n                    <TextareaAutosize\r\n                      id='list'\r\n                      autoFocus={true}\r\n                      value={listTitle}\r\n                      className={styles.textarea}\r\n                      onChange={handleEditListTitle}\r\n                      onFocus={(e) => e.target.select()}\r\n                      onBlur={() => setOpenTitleForm(false)}\r\n                      required\r\n                    />\r\n                  </div>\r\n                  : <div className={styles.textWrapper}><h2>{listTitle}</h2></div>\r\n              }\r\n              <IconButton onClick={() => {\r\n                setActionTrigger(true)\r\n              }}><BsThreeDots style={{ fontSize: \"1.3em\" }} /></IconButton>\r\n              {/* <div className={styles.actionsPopup}> */}\r\n                <Popup\r\n                  title={'Akcje listy'}\r\n                  trigger={actionTrigger}\r\n                  closePopup={() => {\r\n                    setActionTrigger(false)\r\n                  }}\r\n                >\r\n                  <div className={styles.actionsPopupContent}>\r\n                    <TaskButton\r\n                      onClick={handleDeleteAllCards}\r\n                      name={'Usuń wszystkie karty'}\r\n                      icon={<MdOutlineLabel />}\r\n                    />\r\n                    <TaskButton\r\n                      onClick={handleDeleteList}\r\n                      name={'Usuń listę'}\r\n                      icon={<RiDeleteBinLine />}\r\n                    />\r\n                  </div>\r\n                </Popup>\r\n              {/* </div> */}\r\n            </div>\r\n            <Droppable droppableId={String(listId)} type=\"card\">\r\n              {provided => (\r\n                <div className={styles.cardsContainer}\r\n                  {...provided.droppableProps}\r\n                  ref={provided.innerRef}\r\n                >\r\n                  {\r\n                    cards?.map((card: {\r\n                      listId: string;\r\n                      _id: string;\r\n                      title: string;\r\n                      updateDate: Date,\r\n                      labels: [],\r\n                      description: string,\r\n                      deadline: Date,\r\n                      completed: boolean,\r\n                      cover: string,\r\n                      files: []\r\n                    },\r\n                      index: number) => (\r\n                      <Card\r\n                        index={index}\r\n                        key={card._id}\r\n                        cardId={card._id}\r\n                        boardId={boardId}\r\n                        title={card.title}\r\n                        deadline={card.deadline}\r\n                        completed={card.completed}\r\n                        description={card.description}\r\n                        updateDate={card.updateDate}\r\n                        labels={card.labels}\r\n                        files={card.files}\r\n                        cover={card.cover}\r\n                        nameList={listTitle}\r\n                        dragDisabled={setDragDisabled}\r\n                      />\r\n                    ))\r\n                  }\r\n                  {provided.placeholder}\r\n                </div>\r\n              )}\r\n            </Droppable>\r\n            <div className={styles.actionsList}>\r\n              {openCardForm ?\r\n                <div ref={ref}>\r\n                  <TaskForm\r\n                    id={'card'}\r\n                    handleChange={handleChangeCardValue}\r\n                    handleSubmit={handleAddCard}\r\n                    closeForm={() => { setOpenCardForm(false); setCardTitle('') }}\r\n                    value={cardTitle}\r\n                    titleBtn={'Dodaj Kartę'}\r\n                  />\r\n                </div>\r\n                : <TaskButton onClick={() => setOpenCardForm(true)} name={'Dodaj kartę'} icon={<GoPlus />} />\r\n              }\r\n            </div>\r\n          </div>\r\n        )\r\n        }\r\n      </Draggable>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default List\r\n\r\n","const unsplash = {\r\n  clientKey: 'TqG5JhrasvAl1tEr7Gn82XanmpWr7OhuPhqQydr_ieA',\r\n}\r\n\r\nexport default unsplash","import axios from 'axios'\r\nimport unsplash from '../../config/unsplash'\r\n\r\nconst getImages = async () => {\r\n  const page = Math.floor(Math.random() * 20 + 1)\r\n  const numberPhotos = 14\r\n  const urlImages = `https://api.unsplash.com/search/photos?page=${page}&per_page=${numberPhotos}&query=Landscape&client_id=${unsplash.clientKey}`\r\n\r\n  const res = await axios.get(urlImages)\r\n  const photos = res.data.results.map(\r\n    (image: {\r\n      id: any\r\n      urls: { thumb: any; full: any }\r\n      user: { username: any; links: { html: any } }\r\n    }) => ({\r\n      id: image.id,\r\n      thumb: image.urls.thumb,\r\n      full: image.urls.full,\r\n      user: {\r\n        username: image.user.username,\r\n        link: image.user.links.html,\r\n      },\r\n    })\r\n  )\r\n  return photos\r\n}\r\n\r\nexport default getImages\r\n","import React, { useState, useEffect } from 'react'\r\nimport styles from './styles.module.scss'\r\nimport getImages from '../../../store/api/unsplashApi';\r\nimport { BsXLg } from \"react-icons/bs\";\r\nimport IconButton from '../../Details/IconButton/IconButton';\r\nimport { colors, defaultBackground, defaultColor } from '../localData';\r\nimport {\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\n\r\ntype SideMenuProps = {\r\n  boardId: string\r\n  closeMenu: () => void\r\n  setBackgroundUrl: (value: string) => void;\r\n}\r\n\r\nconst SideMenu: React.FC<SideMenuProps> = ({ closeMenu, setBackgroundUrl, boardId }) => {\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n  const [optionColors, setOptionsColors] = useState<boolean>(false)\r\n  const [optionImages, setOptionsImages] = useState<boolean>(false)\r\n  const [images, setImages] = useState<any>([])\r\n\r\n  const getListOfImages = async () => {\r\n    const listOfImages = await getImages()\r\n    setImages(listOfImages)\r\n  }\r\n\r\n  useEffect(() => {\r\n    getListOfImages()\r\n  }, [])\r\n\r\n  return (\r\n    <div className={styles.sideMenu}>\r\n      <div className={styles.menuHeader}>\r\n        <h3>Zmień tło</h3>\r\n        <IconButton onClick={closeMenu}><BsXLg /></IconButton>\r\n      </div>\r\n      <div className={styles.options}>\r\n        <div className={styles.box}\r\n          onClick={() => {\r\n            setOptionsImages(true)\r\n            setOptionsColors(false)\r\n          }}\r\n          style={{\r\n            backgroundImage: `url(${defaultBackground})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n          }}><p>Zdjęcia</p></div>\r\n        <div className={styles.box}\r\n          onClick={() => {\r\n            setOptionsImages(false)\r\n            setOptionsColors(true)\r\n          }}\r\n          style={{\r\n            backgroundImage: `url(${defaultColor})`,\r\n            backgroundRepeat: 'no-repeat',\r\n            backgroundSize: 'cover',\r\n          }}\r\n        ><p>Kolory</p></div>\r\n      </div>\r\n\r\n      <div className={styles.optionsContainer}>\r\n        {\r\n          optionImages ? (\r\n            images.map((photo: { id: React.Key | null | undefined; thumb: any; full: string; }) => (\r\n              <div\r\n                key={photo.id}\r\n                className={styles.box}\r\n                style={{\r\n                  backgroundImage: `url(${photo.thumb})`,\r\n                  backgroundSize: 'cover',\r\n                  backgroundRepeat: 'no-repeat',\r\n                  backgroundPosition: 'center'\r\n                }}\r\n                onClick={() => {\r\n                  setBackgroundUrl(photo.full)\r\n                  updateBoard({\r\n                    id: boardId,\r\n                    background: photo.full\r\n                  })\r\n                }}\r\n              ></div>\r\n            ))\r\n          ) : null\r\n        }\r\n        {\r\n          optionColors ? (\r\n            colors.map((color, index) => (\r\n              <div\r\n                key={index}\r\n                className={styles.box}\r\n                style={{\r\n                  backgroundColor: `${color}`,\r\n                }}\r\n                onClick={() => {\r\n                  setBackgroundUrl(color)\r\n                  updateBoard({\r\n                    id: boardId,\r\n                    background: color\r\n                  })\r\n                }}\r\n              ></div>\r\n            ))\r\n          ) : null\r\n        }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SideMenu","import React, { useEffect, useState, useRef } from 'react'\r\nimport { isEmpty, cloneDeep } from 'lodash'\r\nimport styles from './styles.module.scss'\r\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd'\r\nimport {\r\n  useGetBoardQuery,\r\n  useUpdateBoardMutation,\r\n} from '../../../store/reducers/boardsReducer'\r\nimport {\r\n  useAddTaskMutation,\r\n  useUpdateTaskMutation,\r\n} from \"../../../store/reducers/listsReducer\";\r\nimport {\r\n  useUpdateCardMutation,\r\n} from \"../../../store/reducers/cardsReducer\";\r\nimport useOnClickOutside from '../../../hooks/useOnClickOutside';\r\n\r\nimport { GoPlus } from \"react-icons/go\";\r\nimport { defaultBackground } from '../localData';\r\n\r\nimport BoardHeader from '../BoardHeader/BoardHeader';\r\nimport List from '../List/List'\r\nimport TaskButton from '../TaskButton/TaskButton'\r\nimport TaskForm from '../TaskForm/TaskForm'\r\nimport SideMenu from '../SideMenu/SideMenu';\r\n\r\nimport { Board as BoardInterface } from '../../../store/reducers/boardsReducer'\r\nimport { List as ListInterface } from '../../../store/reducers/listsReducer'\r\n\r\nconst Board: React.FC = () => {\r\n  const boardId = '624f02f011fa05ce01907c07'\r\n  const { data, error, isLoading } = useGetBoardQuery(boardId);\r\n  const [addList] = useAddTaskMutation()\r\n  const [updateList] = useUpdateTaskMutation()\r\n  const [updateCard] = useUpdateCardMutation()\r\n  const [updateBoard] = useUpdateBoardMutation()\r\n\r\n  const formRef = useRef(null)\r\n\r\n  const [backgroundUrl, setBackgroundUrl] = useState<string>('')\r\n  const [listTitle, setListTitle] = useState<string>('');\r\n  const [openForm, setOpenForm] = useState<boolean>(false)\r\n  const [openSideMenu, setOpenSideMenu] = useState<boolean>(false)\r\n\r\n  const [board, setBoard] = useState<BoardInterface>()\r\n  const [lists, setLists] = useState<ListInterface[]>([])\r\n\r\n  const closeForm = () => { setOpenForm(false); setListTitle('') }\r\n  useOnClickOutside(formRef, closeForm)\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      const newBoard = { ...data }\r\n      const boardBG = newBoard.background === '' ? defaultBackground : newBoard.background\r\n      setBoard(newBoard)\r\n      setLists(newBoard.lists)\r\n      setBackgroundUrl(boardBG)\r\n    }\r\n  }, [data]);\r\n\r\n  const handleChangeListTitle = (e: React.ChangeEvent<HTMLTextAreaElement | HTMLInputElement>) => {\r\n    if (e.target.id === 'list') setListTitle(e.target.value)\r\n  }\r\n\r\n  const handleAddList = (e: React.FormEvent<HTMLFormElement>) => {\r\n    e.preventDefault()\r\n    if (listTitle.length === 0) return\r\n    addList({\r\n      title: listTitle,\r\n      boardId: boardId,\r\n    })\r\n    updateBoard({\r\n      id: boardId,\r\n    })\r\n\r\n    setListTitle('')\r\n    setOpenForm(false)\r\n  }\r\n\r\n  const onDragEnd = (result: DropResult) => {\r\n    const { destination, source, type, draggableId } = result\r\n    const newLists = [...lists]\r\n    if (!board) return;\r\n    if (!destination) return;\r\n    if (destination.droppableId === source.droppableId && destination.index === source.index) return;\r\n    \r\n      if (type === 'list') {\r\n        const [removed] = newLists.splice(source.index, 1)\r\n        newLists.splice(destination.index, 0, removed)\r\n\r\n        setLists(newLists)\r\n        updateBoard({\r\n          id: boardId,\r\n          lists: newLists\r\n        })\r\n      }\r\n\r\n      if (type === 'card') {\r\n        const sourceList = newLists.find((list: {_id: string}) => list._id === source.droppableId)\r\n        const destinationList = newLists.find((list: { _id: string; }) => list._id === destination.droppableId)\r\n\r\n        if (source.droppableId === destination.droppableId && sourceList) {\r\n          const newCards = [...sourceList.cards]\r\n          const [removed] = newCards.splice(source.index, 1)\r\n          newCards.splice(destination.index, 0, removed)\r\n\r\n          const updateState = {\r\n            ...sourceList,\r\n            cards: newCards\r\n          }\r\n\r\n          //replace the contents of the list\r\n          const newState = newLists.map(obj => [updateState].find(o => o._id === obj._id) || obj);\r\n\r\n          setLists(newState)\r\n          updateList({\r\n            id: source.droppableId,\r\n            cards: newCards\r\n          })\r\n\r\n        }\r\n\r\n        if (source.droppableId !== destination.droppableId && sourceList && destinationList) {\r\n          const startCards = [...sourceList.cards]\r\n          const finishCards = [...destinationList.cards]\r\n\r\n          const [removed] = startCards.splice(source.index, 1)\r\n          const startState = {\r\n            ...sourceList,\r\n            cards: startCards\r\n          }\r\n\r\n          finishCards.splice(destination.index, 0, removed)\r\n          const finishState = {\r\n            ...destinationList,\r\n            cards: finishCards\r\n          }\r\n\r\n          //converted to array\r\n          const newCards = [startState, finishState]\r\n\r\n          //replace the contents of the lists\r\n          const newState = newLists.map(obj => newCards.find(o => o._id === obj._id) || obj);\r\n\r\n          setLists(newState)\r\n\r\n          updateCard({\r\n            id: draggableId,\r\n            listId: destination.droppableId\r\n          })\r\n          // update source list\r\n          updateList({\r\n            id: source.droppableId,\r\n            cards: startCards\r\n          })\r\n          //update destination list\r\n          updateList({\r\n            id: destination.droppableId,\r\n            cards: finishCards\r\n          })\r\n        }\r\n      }\r\n  }\r\n\r\n  const boardBackgroundStyle = {\r\n    backgroundColor: backgroundUrl,\r\n    backgroundImage: `url(${backgroundUrl})`,\r\n    backgroundSize: 'cover',\r\n    backgroundRepeat: 'no-repeat',\r\n    backgroundPosition: 'center'\r\n  }\r\n\r\n  if (isLoading) return <h2>Loading...</h2>\r\n  if (error) return <h2>Brak połączenia</h2>\r\n\r\n  return (\r\n    <div className={styles.board}\r\n      style={boardBackgroundStyle}\r\n    >\r\n      <BoardHeader\r\n        name={'Zmień tło'}\r\n        onClick={() => setOpenSideMenu(true)}\r\n      />\r\n      {\r\n        openSideMenu ?\r\n          <SideMenu\r\n            boardId={boardId}\r\n            setBackgroundUrl={setBackgroundUrl}\r\n            closeMenu={() => setOpenSideMenu(false)}\r\n          /> : null\r\n      }\r\n      <DragDropContext onDragEnd={onDragEnd} >\r\n        <div className={styles.container}>\r\n          <Droppable droppableId=\"all-list\" direction=\"horizontal\" type=\"list\">\r\n            {provided => (\r\n              <div className={styles.listContainer}\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                {\r\n                  lists?.map((list: any, index: number) => (\r\n                    <List\r\n                      index={index}\r\n                      boardId={list.boardId}\r\n                      key={list._id}\r\n                      listId={list._id}\r\n                      title={list.title}\r\n                      cards={list.cards}\r\n                    />\r\n                  ))\r\n                }\r\n                {provided.placeholder}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          <div className={styles.actionsForm}>\r\n            {openForm ?\r\n              <div className={styles.formContainer} ref={formRef}>\r\n                <TaskForm\r\n                  id='list'\r\n                  handleChange={handleChangeListTitle}\r\n                  handleSubmit={handleAddList}\r\n                  closeForm={() => { setOpenForm(false); setListTitle('') }}\r\n                  value={listTitle}\r\n                  titleBtn={'Dodaj Listę'}\r\n                />\r\n              </div>\r\n              : <TaskButton onClick={() => setOpenForm(true)} name={'Dodaj listę zadań'} icon={<GoPlus style={{ margin: '.3rem 0' }} />} />\r\n            }\r\n          </div>\r\n        </div>\r\n      </DragDropContext>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Board\r\n\r\n\r\n","import React from 'react'\r\nimport Board from '../../components/Tasks/Board/Board';\r\n// import SideMenu from '../../components/Tasks/SideMenu/SideMenu';\r\n// import BoardHeader from '../../components/Tasks/BoardHeader/BoardHeader';\r\nimport styles from './styles.module.scss'\r\n\r\nconst boardId = '620b88e199b7a598ce7b7187'\r\n\r\nconst TasksPage: React.FC = () => {\r\n  return (\r\n    <>\r\n      < Board />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default TasksPage\r\n\r\n\r\n\r\n","import React from 'react'\r\n\r\nconst View2: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Magayzn\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View2\r\n","import React from 'react'\r\n\r\nconst View3: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Dostawcy\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View3\r\n","import React from 'react'\r\n\r\nconst View4: React.FC = () => {\r\n\r\n  return (\r\n    <div>\r\n       Informacje\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default View4\r\n","import React from 'react'\r\n\r\nconst Calculator = () => {\r\n  return (\r\n    <div>Calculator</div>\r\n  )\r\n}\r\n\r\nexport default Calculator","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom'\r\nimport Layout from './components/Layout';\r\nimport TasksPage from './views/TasksPage/TasksPage';\r\nimport View2 from './views/View2/View2';\r\nimport View3 from './views/View3/View3';\r\nimport View4 from './views/View4/View4';\r\nimport Calculator from './views/Calculator/Calculator';\r\nimport './App.css';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <Router>\r\n      <Layout>\r\n        <Switch>\r\n          <Route exact path='/' component={TasksPage} />\r\n          <Route path='/calculator' component={Calculator} />\r\n          <Route path='/View-2' component={View2} />\r\n          <Route path='/View-3' component={View3} />\r\n          <Route path='/View-4' component={View4} />\r\n        </Switch>\r\n      </Layout>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import { configureStore } from '@reduxjs/toolkit'\r\n// import counterReducer from '../reducers/reducer'\r\nimport { boardApi } from './reducers/boardsReducer'\r\nimport { listApi } from './reducers/listsReducer'\r\nimport { cardsApi } from './reducers/cardsReducer'\r\nimport { filesApi } from './reducers/filesReducer'\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    [boardApi.reducerPath]: boardApi.reducer,\r\n    [listApi.reducerPath]: listApi.reducer,\r\n    [cardsApi.reducerPath]: cardsApi.reducer,\r\n    [filesApi.reducerPath]: filesApi.reducer,\r\n  },\r\n  middleware: (getDefaultMiddleware) =>\r\n    getDefaultMiddleware().concat(\r\n      boardApi.middleware,\r\n      listApi.middleware,\r\n      cardsApi.middleware,\r\n      filesApi.middleware,\r\n    ),\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>\r\nexport type AppDispatch = typeof store.dispatch\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import reportWebVitals from './reportWebVitals';\r\nimport { Provider } from \"react-redux\";\r\nimport { store } from './store/store';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\n// reportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"styles_sidebar__xK0YJ\",\"sidebarHide\":\"styles_sidebarHide__2t2M2\",\"logo\":\"styles_logo__2pM0Q\",\"navButton\":\"styles_navButton__3BNKT\",\"navButtonHide\":\"styles_navButtonHide__38XhY\",\"linksContainer\":\"styles_linksContainer__3Ym__\",\"navItem\":\"styles_navItem__TbxPM\",\"navLink\":\"styles_navLink__VPAcP\",\"icon\":\"styles_icon__rSpbJ\",\"active\":\"styles_active__20cX5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__3lg78\",\"card\":\"styles_card__2Vpi0\",\"cardContainer\":\"styles_cardContainer__v6erv\",\"cardClickableArea\":\"styles_cardClickableArea__2gAoQ\",\"textarea\":\"styles_textarea__3yOuz\",\"btnContainer\":\"styles_btnContainer__1CdlS\",\"cardLabels\":\"styles_cardLabels__2XYfY\",\"cardLabel\":\"styles_cardLabel__1QOow\",\"iconsContainer\":\"styles_iconsContainer__oeQXm\",\"dateContainer\":\"styles_dateContainer__1awiA\",\"dateBtn\":\"styles_dateBtn__MHftz\",\"icons\":\"styles_icons__F6ETe\",\"cardCover\":\"styles_cardCover__24RG5\",\"actionsPopup\":\"styles_actionsPopup__9CHs8\",\"actionsPopupContent\":\"styles_actionsPopupContent__6q6i1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"styles_list__29G3F\",\"listHeader\":\"styles_listHeader__358ey\",\"textWrapper\":\"styles_textWrapper__OtXvf\",\"cardsContainer\":\"styles_cardsContainer__3CxCn\",\"textarea\":\"styles_textarea__2eU67\",\"actionsList\":\"styles_actionsList__2anKf\",\"actionsPopup\":\"styles_actionsPopup__3PnHB\",\"actionsPopupContent\":\"styles_actionsPopupContent__24Dh2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sideMenu\":\"styles_sideMenu__1WL-5\",\"menuHeader\":\"styles_menuHeader__1I00P\",\"options\":\"styles_options__1opB-\",\"optionsContainer\":\"styles_optionsContainer__2BqBR\",\"description\":\"styles_description__2kWXu\",\"box\":\"styles_box__2R1CZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"styles_board__1NKs9\",\"container\":\"styles_container__35LdP\",\"listContainer\":\"styles_listContainer__W9gYL\",\"actionsForm\":\"styles_actionsForm__3C_qJ\",\"formContainer\":\"styles_formContainer__2R8KT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__QpzXb\",\"fileImg\":\"styles_fileImg__1UmmF\",\"selectCover\":\"styles_selectCover__23s4D\",\"fileDetails\":\"styles_fileDetails__3k7ks\",\"fileButtons\":\"styles_fileButtons__1a2bT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__3qYD0\",\"textarea\":\"styles_textarea__8Nziw\",\"actionsForm\":\"styles_actionsForm__2V1XT\",\"reactColorful\":\"styles_reactColorful__273KT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formFile\":\"styles_formFile__Hmbm5\",\"labelFile\":\"styles_labelFile__JrJpy\",\"spanContainer\":\"styles_spanContainer__2MrkE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"styles_layout__3nIik\",\"container\":\"styles_container__7Bm4v\",\"pagesContainer\":\"styles_pagesContainer__BB6vc\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"styles_form__1hyU1\",\"textarea\":\"styles_textarea__2Y0rn\",\"actionsForm\":\"styles_actionsForm__4Ypdh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"popup\":\"styles_popup__1Gn8a\",\"menuHeader\":\"styles_menuHeader__2xC_s\",\"popupContent\":\"styles_popupContent__A0vyv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"taskButton\":\"styles_taskButton__25h-I\",\"icon\":\"styles_icon__1Rn7i\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container___i14Y\",\"boxColor\":\"styles_boxColor__3vAsb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__1gs2Q\",\"items\":\"styles_items__3ezeA\"};"],"sourceRoot":""}